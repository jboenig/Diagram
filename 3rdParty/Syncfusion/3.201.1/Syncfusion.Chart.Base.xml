<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.Chart.Base</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisCollection">
            <summary>
            Collection of Chart axes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.Add(System.Object)">
            <overload>
            Adds a chart axis to this collection. The index of the newly added axis is returned.
            </overload>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.Add(Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
            Adds a chart axis to this collection.
            </summary>
            <param name="axis" type="Syncfusion.Windows.Forms.Chart.ChartAxis">
                <para>
                The axis that is to be added to this collection.
                </para>
            </param>
            <returns>
                The index of the newly added axis.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.AddRange(System.Object[])">
            <overload>
            Adds the chart axes specified to this collection.    
            </overload>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.AddRange(Syncfusion.Windows.Forms.Chart.ChartAxis[])">
            <summary>
              Adds the chart axes specified to this collection.
            </summary>
            <param name="axes" type="Syncfusion.Windows.Forms.Chart.ChartAxis[]">
                <para>
                Axes to add to this collection.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.GetEnumerator">
            <summary>
            Access the enumerator for iteration through the axes contained in this collection.
            </summary>
            <returns>
            The enumerator for this collection.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.RemoveAt(System.Int32)">
            <summary>
                Removes the axis at the specified location.
            </summary>
            <param name="index" type="int">
                <para>
                Index at which the axis to be removed is stored.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.Remove(System.Object)">
            <overload>
            Remove the axis specified from this collection. If the specified axis is not in this collection
            no action will be taken. If the axis is removed <see cref="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.OnChanged(Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs)"/> will be called.    
            </overload>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.Remove(Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
            Remove the axis specified from this collection. If the specified axis is not in this collection
            no action will be taken. If the axis is removed <see cref="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.OnChanged(Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs)"/> will be called.  
            </summary>
            <param name="axis" type="Syncfusion.Windows.Forms.Chart.ChartAxis">
                <para>
                 The axis that is to be removed from this collection.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.Insert(System.Int32,System.Object)">
            <overload>
            Inserts the specified axis at the specified index.
            </overload>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
            Inserts the specified axis at the specified index.
            </summary>
            <param name="index" type="int">
                <para>
                The index where the axis is to be inserted.
                </para>
            </param>
            <param name="axis" type="Syncfusion.Windows.Forms.Chart.ChartAxis">
                <para>
            	The axis to be inserted.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.IndexOf(System.Object)">
            <overload>
                Returns the index of the specified axis in this collection (if present). Returns -1
            	if the axis is not present in this collection.
            </overload>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.IndexOf(Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
                Returns the index of the specified axis in this collection (if present). Returns -1
            	if the axis is not present in this collection.
            </summary>
            <param name="axis" type="Syncfusion.Windows.Forms.Chart.ChartAxis">
                <para>
                The axis that is to be located.
                </para>
            </param>
            <returns>
                The index of the axis specified.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.Clear">
            <summary>
             Removes all axes referenced by this collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.Contains(System.Object)">
            <overload>
                Checks if this collections contains the specified axis.
            </overload>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.Contains(Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
                Checks if this collections contains the specified axis.
            </summary>
            <param name="axis" type="Syncfusion.Windows.Forms.Chart.ChartAxis">
                <para>
                Axis to check for.
                </para>
            </param>
            <returns>
                True if axis is found; otherwise False.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of this collection to the specified array.
            </summary>
            <param name="dest">Destination array.</param>
            <param name="index">Index from which copy is to start.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.OnChanged(Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs)">
            <summary>
            This method will be called when any changes take place in this collection. The <see cref="E:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.Changed"/> event will be
            raised when this method is called.
            </summary>
            <param name="e">Event arguments with information on the changes.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.System#Collections#IList#Add(System.Object)">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.AxisSpacing">
            <summary>
            The spacing between different axes on the same side of the ChartArea. This spacing is to be specified when you display multiple
            axes side by side.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.Changed">
            <summary>
            Event that is raised if this collection is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.Item(System.Int32)">
            <summary>
            Index-based access to referenced chart axis contained in this collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
                Gets or sets the axis at the specified index in this collection.
            </summary>
            <value>
                <para>
                ChartAxis.    
                </para>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.Count">
            <summary>
                Returns the number of axes in this collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.IsReadOnly">
            <summary>
            	Returns the Read-only state of the collection.
            </summary>
            <remarks>
               True if Read-only; otherwise False.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.InnerArray">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IChartAxisLabelModel">
            <summary>
               Implement this interface to display custom axis labels. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartAxisLabelModel.GetLabelAt(System.Int32)">
            <summary>
                Return the label at the specified index.
            </summary>
            <param name="index" type="int">
                <para>
                Index value.    
                </para>
            </param>
            <returns>
                ChartAxisLabel to be used as label.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAxisLabelModel.Count">
            <summary>
            The number of labels.    
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection">
            <summary>
            Collection of custom ChartAxis labels. These labels will be used for axis labels when
            the value type of the ChartAxis is set to ChartValueType.Custom.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartValueType"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.chartAxis">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.#ctor">
            <summary>
            To prevent collection construction without ChartAxis reference.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.#ctor(Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
                Constructor.
            </summary>
            <param name="chartAxis" type="Syncfusion.Windows.Forms.Chart.ChartAxis">
                <para>
                ChartAxis that is associated with this collection.   
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.IndexOf(Syncfusion.Windows.Forms.Chart.ChartAxisLabel)">
            <summary>
                Looks up the index of the given label if it is present.
            </summary>
            <param name="label" type="ChartAxisLabel">
                <para>
                 Label to look up.   
                </para>
            </param>
            <returns>
                The index of the label if the label was located; -1 otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.Add(Syncfusion.Windows.Forms.Chart.ChartAxisLabel)">
            <summary>
                Adds the specified label to this collection.
            </summary>
            <param name="label" type="ChartAxisLabel">
                <para>
                Label to add.    
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Chart.ChartAxisLabel)">
            <summary>
                Inserts the specified label at the specified index.
            </summary>
            <param name="index" type="int">
                <para>
                Index where the label is to be inserted.   
                </para>
            </param>
            <param name="label" type="ChartAxisLabel">
                <para>
                The label that is to be added.    
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.Remove(Syncfusion.Windows.Forms.Chart.ChartAxisLabel)">
            <summary>
                Removes the specified label from this collection.
            </summary>
            <param name="label" type="ChartAxisLabel">
                <para>
                 Label that is to be removed.   
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.GetLabelAt(System.Int32)">
            <summary>
                Looks up and returns the label at the specified index.
            </summary>
            <param name="index" type="int">
                <para>
                 The index to look up.   
                </para>
            </param>
            <returns>
                The label at the specified index.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.OnClearComplete">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.OnInsertComplete(System.Int32,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.OnRemoveComplete(System.Int32,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.OnValidate(System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.BroadcastChange">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.Item(System.Int32)">
            <summary>
                Axis label by index.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.Changed">
            <summary>
                Event that is raised when this collection is changed.
            </summary>
            <remarks>
                
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisLabel">
            <summary>
            This class holds information about label text, label color and label font;
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection">
            <summary>
            Holds custom points that are registered for display. Custom points serve as an easy way to add labels to a chart.
            Custom points can be tied to specific positions on the chart or to specific points on any series.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartCustomPoint"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection.#ctor">
            <summary>
            To prevent construction without ChartControl reference.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection.#ctor(Syncfusion.Windows.Forms.Chart.ChartArea)">
            <summary>
                Constructor.
            </summary>
            <param name="chartArea" type="Syncfusion.Windows.Forms.Chart.ChartArea">
                <para>
                Chart control instance.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection.IndexOf(Syncfusion.Windows.Forms.Chart.ChartCustomPoint)">
            <summary>
                Looks up and returns the index of the specified custom point.
            </summary>
            <param name="customPoint" type="Syncfusion.Windows.Forms.Chart.ChartCustomPoint">
                <para>
                The custom point to look up.
                </para>
            </param>
            <returns>
                The index of the custom point if located; -1 otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection.Add(Syncfusion.Windows.Forms.Chart.ChartCustomPoint)">
            <summary>
                Adds the specified custom point to this collection.
            </summary>
            <param name="customPoint" type="Syncfusion.Windows.Forms.Chart.ChartCustomPoint">
                <para>
                Custom point to add.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Chart.ChartCustomPoint)">
            <summary>
                Inserts the specified custom point at the specified index.
            </summary>
            <param name="index" type="int">
                <para>
                 Insertion index.
                </para>
            </param>
            <param name="customPoint" type="Syncfusion.Windows.Forms.Chart.ChartCustomPoint">
                <para>
                Custom point that needs to be added to this collection.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection.Remove(Syncfusion.Windows.Forms.Chart.ChartCustomPoint)">
            <summary>
                Removes the specified custom point from this collection.
            </summary>
            <param name="customPoint" type="Syncfusion.Windows.Forms.Chart.ChartCustomPoint">
                <para>
                 Custom point to be removed.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection.OnClear">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection.OnClearComplete">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection.OnInsert(System.Int32,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection.OnInsertComplete(System.Int32,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection.OnRemove(System.Int32,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection.OnRemoveComplete(System.Int32,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection.OnSet(System.Int32,System.Object,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection.BroadcastChange">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection.Item(System.Int32)">
            <summary>
                Custom point by index.
            </summary>
            <value>
                <para>
                The index of the custom point to look up.
                </para>
            </value>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection.Changed">
            <summary>
                Event that is raised when a custom point is changed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDataBindAxisLabelModel">
            <summary>
            Summary description for ChartDataBindAxisLabelModel.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDataBindAxisLabelModel.LabelIndex">
            <summary>
            The column index to be used for X value
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDataBindAxisLabelModel.LabelName">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartConfigItem">
            <summary>
                Base class for chart-type specific configuration items. ConfigItems are a convenient way to store
                information specific to certain chart types that may not be applicable to other chart types.
            </summary>
            <remarks>
            
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartConfigItem.RaisePropertyChanged(System.String)">
            <summary>
                Call this method to raise a <see cref="E:Syncfusion.Windows.Forms.Chart.ChartConfigItem.PropertyChanged"/> event.
            </summary>
            <param name="propertyName" type="string">
                <para>
                 The name of the property that has changed.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartConfigItem.RaisePropertyChanged(Syncfusion.ComponentModel.PropertyChangeEffect,System.String,System.Object,System.Object)">
            <summary>
                 Call this method to raise a <see cref="E:Syncfusion.Windows.Forms.Chart.ChartConfigItem.PropertyChanged"/> event.
            </summary>
            <param name="effect" type="Syncfusion.ComponentModel.PropertyChangeEffect">
                <para>
                The effect.
                </para>
            </param>
            <param name="propertyName" type="string">
                <para>
                The name of the property changed.
                </para>
            </param>
            <param name="oldValue" type="object">
                <para>
                The old value of the property.
                </para>
            </param>
            <param name="newValue" type="object">
                <para>
                The new value of the property.
                </para>
            </param>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartConfigItem.PropertyChanged">
            <summary>
                Event that is raised when a property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartConfigItem.NoEvents">
            <summary>
                Controls whether events are raised or not. If set to True, events are not raised.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBubbleType">
            <summary>
              The type of bubble rendered with bubble charts.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBubbleType.Circle">
            <summary>
              Circular shapes are rendered with bubble charts.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBubbleType.Square">
            <summary>
              Squares are rendered with bubble charts.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBubbleType.Image">
            <summary>
              Images are rendered with bubble charts.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBubbleSizingBehavior">
            <summary>
                Defines the sizing behavior of the bubble.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBubbleSizingBehavior.Fixed">
            <summary>
              Bubble sizes are fixed. This behavior is not supported in the current version.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBubbleSizingBehavior.Proportional">
            <summary>
              Bubble sizes are propertional to value.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBubbleConfigItem">
            <summary>
                Configuration item that pertains to bubble charts.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBubbleConfigItem.#ctor">
            <summary>
                Constructor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBubbleConfigItem.MinBounds">
            <summary>
                The minimum bounds to be used by a bubble.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBubbleConfigItem.MaxBounds">
            <summary>
                The maximum bounds to be used by a bubble.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBubbleConfigItem.BubbleType">
            <summary>
            	The type of the bubble to be rendered.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPieConfigItem">
            <summary>
                Configuration item for pie charts.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPieConfigItem.#ctor">
            <summary>
                Constructor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPieConfigItem.AngleOffset">
            <summary>
                The offset angle to be used when rendering pie charts.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRadarDrawType">
            <summary>
            Specifies how radar charts are rendered.    
            </summary>
            <example>
            <code lang="C#">
            series.ConfigItems.RadarItem.Type = ChartRadarDrawType.Symbol;
            </code>    
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRadarDrawType.Area">
            <summary>
            Points on the radar chart are connected and the enclosed region is filled.    
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRadarDrawType.Line">
            <summary>
            Points on the radar chart are connected but the enclosed region is not filled.    
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRadarDrawType.Symbol">
            <summary>
            Points are rendered with the associated symbol. They are not connected to each other.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRadarConfigItem">
            <summary>
                Configuration item for radar charts.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRadarConfigItem.#ctor">
            <summary>
                Constructor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRadarConfigItem.Type">
            <summary>
            The type of radar drawing.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStepConfigItem">
            <summary>
                Configuration item for step charts.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStepConfigItem.#ctor">
            <summary>
                Constructor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStepConfigItem.Inverted">
            <summary>
            Specifies if the step line is inverted.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection">
            <summary>
            Collection of Configuration Items. These items are pieces of data that can be used by the chart and its elements in any
            manner.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartConfigItem"/>
            </summary>
            <remarks>
            Pre-defined config items may be accessed as shown below.
            <code lang="C#">
            // access the RadarItem ConfigItem to configure radar charts
            series.ConfigItems.RadarItem.Type = ChartRadarDrawType.Symbol;
            </code>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.BubbleItemName">
            <summary>
                Standard identifier for bubble chart configuration information.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.PieItemName">
            <summary>
                Standard identifier for pie chart configuration information.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.RadarItemName">
            <summary>
            	Standard identifier for radar chart configuration information.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.StepItemName">
            <summary>
            	Standard identifier for step chart configuration information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.#ctor">
            <summary>
                Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.Add(System.String,Syncfusion.Windows.Forms.Chart.ChartConfigItem)">
            <summary>
                Adds a new configuration item to this collection.
            </summary>
            <param name="name" type="string">
                <para>
                Name to be used for referencing item.
                </para>
            </param>
            <param name="item" type="Syncfusion.Windows.Forms.Chart.ChartConfigItem">
                <para>
                Item to be stored.
                </para>
            </param>
            <returns>
                A void value...
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.Remove(System.String)">
            <summary>
                Removes specified configuration item from collection.
            </summary>
            <param name="name" type="string">
                <para>
                Registration name of the item to be removed.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.OnInsertComplete(System.Object,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.OnRemove(System.Object,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.OnRemoveComplete(System.Object,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.OnSet(System.Object,System.Object,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.OnSetComplete(System.Object,System.Object,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.OnClear">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.OnClearComplete">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.WireItem(System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.UnwireItem(System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.OnContainedObjectPropertyChanged(System.Object,Syncfusion.ComponentModel.SyncfusionPropertyChangedEventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.BroadcastChange">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.BubbleItem">
            <summary>
                Standard configuration information for bubble charts.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.PieItem">
            <summary>
                Standard configuration information for pie charts.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.RadarItem">
            <summary>
                Standard configuration information for radar charts.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.StepItem">
            <summary>
                Standard configuration information for step charts.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.Item(System.String)">
            <summary>
                Configuration item look up by name.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.Changed">
            <summary>
                Event that is raised when configuration information is changed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection">
            <summary>
            Collection of ChartStripLines. A strip line is simply a background band that is drawn on the chart.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartStripLine"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.#ctor">
            <summary>
                Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.IndexOf(Syncfusion.Windows.Forms.Chart.ChartStripLine)">
            <summary>
                Looks up and returns the index of the specified strip line.
            </summary>
            <param name="stripLine" type="Syncfusion.Windows.Forms.Chart.ChartStripLine">
                <para>
                Strip line instance that is to be looked up.
                </para>
            </param>
            <returns>
                The index value if the look up was successful; -1 otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.Add(Syncfusion.Windows.Forms.Chart.ChartStripLine)">
            <summary>
                Adds the specified strip line to this collection.
            </summary>
            <param name="stripLine" type="Syncfusion.Windows.Forms.Chart.ChartStripLine">
                <para>
                Strip line instance to be added.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Chart.ChartStripLine)">
            <summary>
                Inserts the specified strip line at the specified index.
            </summary>
            <param name="index" type="int">
                <para>
                Index where the strip line instance is to be inserted.
                </para>
            </param>
            <param name="stripLine" type="Syncfusion.Windows.Forms.Chart.ChartStripLine">
                <para>
                Strip line instance to be inserted.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.Remove(Syncfusion.Windows.Forms.Chart.ChartStripLine)">
            <summary>
                Removes the specified strip line from this collection.
            </summary>
            <param name="stripLine" type="Syncfusion.Windows.Forms.Chart.ChartStripLine">
                <para>
                 Strip line to be removed.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.OnClear">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.OnClearComplete">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.OnInsert(System.Int32,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.OnInsertComplete(System.Int32,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.OnRemove(System.Int32,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.OnRemoveComplete(System.Int32,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.OnSet(System.Int32,System.Object,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.BroadcastChange">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.Item(System.Int32)">
            <summary>
                Returns the strip line to the specified index.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.Changed">
            <summary>
                Event that is raised when this collection is changed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartArea">
            <summary>
            The ChartArea is the actual rendering control for the plot. 
            It provides a canvas on which the chart is rendered.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.#ctor(Syncfusion.Windows.Forms.Chart.IChartAreaHost)">
            <summary>
            Constructor. ChartArea requires a host which implements <see cref="T:Syncfusion.Windows.Forms.Chart.IChartAreaHost"/>. Currently this is implemented
            only by the chart. However, it is possible that other controls that wish to aggregate the chart will implement this
            interface.    
            </summary>
            <param name="chart" type="Syncfusion.Windows.Forms.Chart.IChartAreaHost">
                <para>
                Host interface.   
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.Draw(System.Windows.Forms.PaintEventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.SetClientRectangle(Syncfusion.Windows.Forms.Chart.ChartRectangleD)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.CalculateLabelSizes">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.ShouldSerializeChartAreaToolTip">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.ResetChartAreaToolTip">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.ShouldSerializeBackColor">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.ResetBackColor">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetChartRegion(System.Int32)">
            <summary>
            Returns the ChartRegion at the specified index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.ShouldSerializeBorderStyle">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.ShouldSerializeBackImage">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.ShouldSerializeAxisSpacing">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.ApearanceChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.NeedChartRegionUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.ChartInvalidate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Height">
            <summary>
            The height of the rectangular area that is occupied by this ChartArea.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Top">
            <summary>
            Returns the y coordinate of the top edge of the rectangular area occupied by this ChartArea.     
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Right">
            <summary>
            Returns the x coordinate of the right edge of the rectanglular area occupied by the ChartArea.   
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Width">
            <summary>
            Returns the width of the rectangular area occupied by this ChartArea.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Bounds">
            <summary>
            Returns the bounds associated with this ChartArea.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Bottom">
            <summary>
            Returns the y coordinate of the bottom edge of this ChartArea.   
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.ClientRectangle">
            <summary>
            Returns the ClientRectangle associated with this ChartArea.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.RequireAxes">
            <summary>
            Indicates if the ChartArea requires axes to be rendered (for the Chart types being rendered).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.RequireInvertedAxes">
            <summary>
            Indicates if Chart requires Inverted Axes
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.HidePartialLabels">
            <summary>
            Hides partially visible axis labels.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Axes">
            <summary>
            The collection of axes associated with this chart. You can add and remove axes from this collection.
            Primary X and Y axes may not be removed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.AxisSpacing">
            <summary>
            The spacing between different axes on the same side of the ChartArea. This spacing is useful when you display multiple
            axes side by side.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.PrimaryXAxis">
            <summary>
            The primary X axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.PrimaryYAxis">
            <summary>
            The primary Y axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.OffsetX">
            <summary>
            X axis offset value used when rendering in 3D mode.   
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.OffsetY">
            <summary>
            Y axis offset value used when rendering in 3D mode.   
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.RenderBounds">
            <summary>
            The actual rectangular bounds used for rendering.   
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.ChartAreaMargins">
            <summary>
            Indicates the margins that will be deduced from the ChartArea`s representation rectangle.
            Negative values are supported.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.BackImage">
            <summary>
            Image that is to be used as the background for this ChartArea.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.NeedRedraw">
            <summary>
            Get/Set the current Redraw flag state. If true the ChartArea representation is out of date and needs to be refreshed.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Series3D">
            <summary>
            Specifies if the ChartArea is to be rendered in 3D. Default value is false.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Depth">
            <summary>
            This attribute controls the perception of depth when the ChartArea is rendered in 3D.   
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Rotation">
            <summary>
            This attribute controls the rotational angle used when the ChartArea is rendered in 3D.   
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Tilt">
            <summary>
            This attribute controls the tilt used when the ChartArea is rendered in 3D.   
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.ChartAreaToolTip">
            <summary>
            ToolTip text associated with this ChartArea.   
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.CustomPoints">
            <summary>
            Collection of custom points associated with this ChartArea. Custom points can be used to add labels to chart points.    
            </summary>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection"/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.BorderStyle">
            <summary>
            The style of the border to be rendered around the ChartArea.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.BackColor">
            <summary>
            The color with which the ChartArea is filled initially before any rendering takes place.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Size">
            <summary>
            The size of the rectangular area occupied by the ChartArea.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Location">
            <summary>
                The location of the rectangular area occupied by this ChartArea.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Center">
            <summary>
            Returns the center point of this ChartArea.     
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.TextRenderingHint">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxis">
            <summary>
            The ChartAxis class represents an axis on the plot. An axis can be vertical or horizontal in orientation. There can be several
            axes in a chart. One X axis and Y axis are treated as the primary X and primary Y axes. These are the ones that are visible by default.
            You can create and add additional axes to the <see cref="!:Syncfusion.Windows.Forms.Chart.ChartControl"/> using its <see cref="!:Syncfusion.Windows.Forms.Chart.ChartControl.Axes"/> collection. Any series
            on the chart can be plotted on any axis that is registered with the chart.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.#ctor">
            <summary>
                Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.CenteredZoom(System.Double)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.SetRange(Syncfusion.Windows.Forms.Chart.MinMaxInfo)">
            <summary>
            The ChartAxis by default creates a display range based on data. If you do not wish to use this
            range you can set this range yourself using this method. When you set a custom range you have to
            set <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.RangeType"/> to <see cref="F:Syncfusion.Windows.Forms.Chart.ChartAxisRangeType.Set"/>.
            </summary>
            <param name="value" type="Syncfusion.Windows.Forms.Chart.MinMaxInfo">
                <para>
                Range information with minimum and maximum values to be used.    
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.Update">
            <summary>
            Marks the axis and related rendering information as out of date.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.OnAppearanceChanged(System.EventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.OnDimensionsChanged(System.EventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.OnIntervalsChanged(System.EventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ResetFont">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ResetForeColor">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ResetTickColor">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ShouldSerializeDateTimeOffset">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ShouldSerializeFont">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ShouldSerializeForeColor">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ShouldSerializeOriginDate">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ShouldSerializeSmallTickSize">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ShouldSerializeTickColor">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ShouldSerializeTickSize">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.GetDimension(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartArea)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.RecalculateZooming">
            <summary>
            This method recalculates zoomPosition when then zoomRange goes out (or intersects) axis Range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.AutoValueType">
            <summary>
              Specifies if the value type of this axis will be automatically assigned.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.CustomOrigin">
            <summary>
            By default the axis will calculate the origin of the axis from data contained in the series. Using the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.OriginDate"/>
            and <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Origin"/> properties, you can change this origin. To enable the origin set with Origin or OriginDate, you have to
            set CustomOrigin to True.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.DateTimeFormat">
            <summary>
            If the value type of the axis is DateTime, this format will be used to format axis labels for display.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.DateTimeOffset">
            <summary>
            Depending on the data in the series provided to the Chart, the Chart will calculate and display a range of data on
            the ChartAxis. This will result in major grid lines being rendered along calculated intervals. However, sometimes
            you may wish to offset the calculated grid lines (major) by a certain factor. This is especially useful for DateTime values.
            For example, the default calculation always starts the intervals at Sunday (if the IntervalType is set to weeks). If you wish
            to start the intervals with Monday, you can simply specify a DateTimeOffset of one day. If your axis is not of type DateTime
            and you wish to take advantage of this property, please <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Offset"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.DateTimeRange">
            <summary>
                The range of this axis as DateTime values.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.DesiredIntervals">
            <summary>
            Essential Chart includes a sophisticated automatic nice range calculation engine. The goal of this engine is to take
            raw data and convert it into human readable numbers. For example, if your raw numbers are 1.2 - 3.87, nice numbers could
            be 0-5 with 10 intervals of 0.5 each. The ChartAxis can do the same calculation for dates also. It offers precise control over
            how data types are to be interpreted when performing this calculation. With the DesiredIntervals setting, you can request the
            engine to calculate nice numbers such that they result in the number of intervals desired. Due to the nature of the calculation,
            the ChartAxis cannot provide precisely the same number of intervals but it will try to match the value to the extent possible.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.RangePaddingType">
            <summary>
            Specifies the padding that will be applied when calculating the axis range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.ForceZero">
            <summary>
            Indicates if one boundary of the calculated range should always be tweaked to zero.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.PreferZero">
            <summary>
            Indicates if one boundary of the calculated range should be tweaked to zero.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Dimension">
            <summary>
            The cardinal dimension of the axis object. If the text that is rendered by the axis is of a dimension that is more, then
            that dimension will be used and this dimension ignored.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.DrawGrid">
            <summary>
            Specifies if the grid lines associated with the main interval points on the axis are to be rendered. This is
            set to True by default.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Font">
            <summary>
            The font that is used for text that is rendered in association with the axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.ForeColor">
            <summary>
            The color that is used for text that is rendered in association with the axis (such as axis labels).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Format">
            <summary>
            If the value type of the axis is double, this format will be used to format axis labels for display.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.GridLineType">
            <summary>
            Specifies attributes of the axis grid lines. Please refer to <see cref="T:Syncfusion.Windows.Forms.Chart.LineInfo"/> for more information on these attributes and
            how they can change the appearance of the grid lines.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Indexed">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartAxis"/> is indexed. Indexed axes
            have only positional value. They do not actually plot value data; only the position of the data
            is used for plotting.
            </summary>
            <value>
            	<c>true</c> if indexed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.IntervalType">
            <summary>
            Essential Chart includes a sophisticated automatic nice range calculation engine. The goal of this engine is to take
            raw data and convert it into human readable numbers. For example, if your raw numbers are 1.2 - 3.87, nice numbers could
            be 0-5 with 10 intervals of 0.5 each. The ChartAxis can do the same calculation for dates also. It offers precise control over
            how data types are to be interpreted when performing this calculation. Please refer to <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType"/>
            for a list of available options.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Inversed">
            <summary>
            Specifies if the axis should be reversed. When reversed, the axis will render points from right to left if horizontal and
            top to bottom when vertical.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.LabelIntersectAction">
            <summary>
            Labels can intersect on the axis if they are too close to each other. ChartAxis offers several options to enhance the display
            of the axis when such intersection occurs. Please see <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLabelIntersectAction"/> for more information.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.LabelIntersectionActionEffect">
            <summary>
            Label intersection control option.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartLabelIntersectionActionEffect"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.LabelRotate">
            <summary>
             Specifies if labels can be rotated.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.LabelRotateAngle">
            <summary>
                The angle at which labels are to  be rotated.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Labels">
            <summary>
            Default collection of labels associated with this axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.LabelsImpl">
            <summary>
               Use this property to assign a custom implementation of <see cref="T:Syncfusion.Windows.Forms.Chart.IChartAxisLabelModel"/>. If you are working with the
               default label collection, use <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Labels"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.LineType">
            <summary>
            Specifies attributes of the primary axis line. Please refer to <see cref="T:Syncfusion.Windows.Forms.Chart.LineInfo"/> for more information on these attributes and
            how they can change the appearance of the axis line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.LogBase">
            <summary>
                The log base when value is logarithimic. Default is base 10.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Offset">
            <summary>
            Depending on the data in the series provided to the Chart, the Chart will calculate and display a range of data on
            the ChartAxis. This will result in major grid lines being renedered along calculated intervals. However, sometimes
            you may wish to offset the calculated grid lines (major) by a certain factor. This is especially useful for DateTime values.
            For example the default calculation always starts the intervals at Sunday (if the IntervalType is set to weeks). If you wish
            to start the intervals with Monday, you can simply specify a DateTimeOffset of one day. If your axis is of type DateTime
            and you wish to take advantage of this property, please <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.DateTimeOffset"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.OpposedPosition">
            <summary>
            If this axis is a secondary axis, setting this property to True will cause
            it to move to the opposite side of the primary axis. This property is False
            by default.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Location">
            <summary>
            If LocationType is set to ChartAxisLocationType.Set,
            then this property is used to calculate RenderGlobalBounds,
            and in such a way to define location of axes
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.LocationType">
            <summary>
            Determines how location of axes is calculated. 
            
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Orientation">
            <summary>
            The Orientation of the axis. You cannot change the orientation of primary axes. Primary axes are the ones that are
            created and available by default for the X and Y direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Origin">
            <summary>
            By default, the axis will calculate the origin of the axis from data contained in the series. Using the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.OriginDate"/>
            and <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Origin"/> properties, you can change this origin. To enable the origin set with Origin or OriginDate, you have to
            set <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.CustomOrigin"/> to True.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.OriginDate">
            <summary>
            By default the axis will calculate the origin of the axis from data contained in the series. Using the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.OriginDate"/>
            and <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Origin"/> properties, you can change this origin. To enable the origin set with Origin or OriginDate, you have to
            set <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.CustomOrigin"/> to True.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Range">
            <summary>
            By default, the chart will automatically calculate the range that is to be displayed. The range property allows you
            to change this range to be any range of your choice.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.RangeType">
            <summary>
             Range type. <see cref="T:Syncfusion.Windows.Forms.Chart.ChartAxisRangeType"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.RequireInvertedAxes">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.RoundingPlaces">
            <summary>
                Number of places to be used for rounding when numbers are used for display (default).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.SmallTickSize">
            <summary>
            The size of small ticks to be displayed on the axis. By default, small ticks are not displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.SmallTicksPerInterval">
            <summary>
            The number of small ticks to be displayed per major interval.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.StripLines">
            <summary>
            Collection of strip lines. Please refer to <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStripLine"/> for more information.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.TickColor">
            <summary>
            The color of ticks that are rendered on the axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.TickSize">
            <summary>
            The size of ticks that are rendered on the axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Title">
            <summary>
            The title of this axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.TitleAlignment">
            <summary>
            The alignment of the axis title.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.ToolTip">
            <summary>
            Indicates the ToolTip of the axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.ValueType">
            <summary>
            The type of value that this axis is displaying. For the types supported, refer to <see cref="T:Syncfusion.Windows.Forms.Chart.ChartValueType"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.VisibleRange">
            <summary>
                The visible range when zoomed.
            </summary>
            <value>
                <para>
            
                </para>
            </value>
            <remarks>
            
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.ZoomedRange">
            <summary>
            The range that is currently zoomed in.   
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.ZoomFactor">
            <summary>
            The factor to use to calculate Zoomed range.  
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.ZoomPosition">
            <summary>
            The minimum value displayed on this axis when zoomed as a fraction of the total range. For example
            if the total range is 20 and the minimum value currently displayed is 10, the ZoomPosition will be
            0.5 (10/20).    
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartAxis.AppearanceChanged">
            <internalonly/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartAxis.DimensionsChanged">
            <internalonly/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartAxis.IntervalsChanged">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisRangePaddingType">
            <summary>
            Specifies the padding that will be applied when calculating the axis range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisRangePaddingType.None">
            <summary>
            No padding will be applied to the Axis range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisRangePaddingType.Calculate">
            <summary>
            Padding will be calculated when the axis range is computed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisLocationType">
            <summary>
            Specifies the location type of axis.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisLocationType.Auto">
            <summary>
            Axis will be placed automatically by control to prevent overlapping with labels.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisLocationType.Set">
            <summary>
            The user can have ability to set axis location manually.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventHandler">
            <summary>
                Delegate used with <see cref="!:Syncfusion.Windows.Forms.Chart.ChartControl.ChartFormatAxisLabel"/>.
            </summary>
            <param name="sender" type="object">
                <para>
                Sender.  
                </para>
            </param>
            <param name="e" type="Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs">
                <para>
                Event arguments.
                </para>
            </param>
            <remarks>
                
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs">
            <summary>
              Argument used with <see cref="!:Syncfusion.Windows.Forms.Chart.ChartControl.ChartFormatAxisLabel"/>.  
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs.#ctor(System.String,System.Double,Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
                Constructor.
            </summary>
            <param name="label" type="string">
                <para>
                The text of the label.    
                </para>
            </param>
            <param name="value" type="double">
                <para>
                The value of the point associated with the label.   
                </para>
            </param>
            <param name="axis" type="Syncfusion.Windows.Forms.Chart.ChartAxis">
                <para>
                The axis associated with the label.    
                </para>
            </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs.AxisOrientation">
            <summary>
                The orientation of the axis for which the label is being generated.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs.Handled">
            <summary>
                Specifies if this event was handled and no further processing is required from the chart.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs.IsAxisPrimary">
            <summary>
                Indicates if the axis for which the label is being generated is a primary axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs.Label">
            <summary>
                The label to be rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs.Value">
            <summary>
                The value associated with the position of the label.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs.ValueAsDate">
            <summary>
                The value associated with the position of the label as DateTime.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRegion">
            <summary>
            The Chart Region represents a region on the client area of the Chart control that has a ToolTip.
            It can be a point region or not. A point region is a region that represents the visual appearance of a point.
            For example, the Rectangle of a Column point. When the ChartRegion represents a chart point, IsChartPoint is set to True.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRegion.#ctor(System.Drawing.Region,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Creates a region that represents a chart point with given point index and series index.
            </summary>
            <param name="region">Region that has the ToolTip.</param>
            <param name="seriesIndex">The series index of the region.</param>
            <param name="pointIndex">The point index of the region.</param>
            <param name="toolTip">The ToolTip of the region.</param>
            <param name="description">Description of the region.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRegion.#ctor(System.Drawing.Region,System.Int32,System.String,System.String)">
            <summary>
            Creates a region that represents a full series region with given series index.
            </summary>
            <param name="region">Region that has the ToolTip.</param>
            <param name="seriesIndex">The series index of the region.</param>
            <param name="toolTip">The ToolTip of the region.</param>
            <param name="description">Description of the region.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRegion.#ctor(System.Drawing.Region,System.String,System.String)">
            <summary>
            Creates a region that does not represent a chart point.
            </summary>
            <param name="region">Region that has the ToolTip.</param>
            <param name="toolTip">ToolTip of the region.</param>
            <param name="description">Description of the region.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegion.IsChartPoint">
            <summary>
            Indicates whether the region represents a chart point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegion.PointIndex">
            <summary>
            The index of the point that has this region.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegion.Region">
            <summary>
            The actual region that has the ToolTip.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegion.SeriesIndex">
            <summary>
            The index of the series that has this region.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegion.ToolTip">
            <summary>
            Indicates the ToolTip of the region.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegion.Description">
            <summary>
            A description for this region.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRegionMouseEventHandler">
            <summary>
                Delegate used with chart region related mouse events.
            </summary>
            <param name="sender" type="object">
                <para>
                Sender.    
                </para>
            </param>
            <param name="e" type="Syncfusion.Windows.Forms.Chart.ChartRegionMouseEventArgs">
                <para>
                Argument.    
                </para>
            </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRegionMouseEventArgs">
            <summary>
               Argument used with chart region related mouse events. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRegionMouseEventArgs.#ctor(Syncfusion.Windows.Forms.Chart.ChartRegion,System.Drawing.Point)">
            <summary>
                Constructor.
            </summary>
            <param name="region" type="Syncfusion.Windows.Forms.Chart.ChartRegion">
                <para>
                 Region associated with this event.   
                </para>
            </param>
            <param name="clickPoint" type="System.Drawing.Point">
                <para>
                Point where the event occured.    
                </para>
            </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegionMouseEventArgs.Region">
            <summary>
               Region associated with this event.  
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegionMouseEventArgs.Point">
            <summary>
              Point where the event occured.  
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IChartAreaHost">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartAreaHost.DisplayUserEditStylesDialog(System.Int32)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartAreaHost.GetGraphics">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartAreaHost.GetSideBySideInfo(Syncfusion.Windows.Forms.Chart.ChartSeries,Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartAreaHost.GetSideBySideIntervalInfo(Syncfusion.Windows.Forms.Chart.ChartSeries,Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartAreaHost.GetStackInfo(Syncfusion.Windows.Forms.Chart.ChartSeries,System.Int32)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartAreaHost.OnChartFormatAxisLabel(Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartAreaHost.RecalculateSizes">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartAreaHost.Refresh">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartAreaHost.SeriesChanged(System.Object,Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs)">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ActiveIndex">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.AutoHighlight">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ChartArea">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ChartInterior">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ChartRegions">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ClickPoint">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ColumnDrawMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ColumnWidthMode">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ColumnFixedWidth">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.CompatibleSeries">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.Controls">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ElementsSpacing">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.EnableXZooming">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.EnableYZooming">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.Indexed">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.IndexValues">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.LegendPainted">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.LegendPosition">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.Model">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.MouseDownPosition">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.NeedRegionUpdate">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.Radar">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.Polar">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.RadarStyle">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.RequireAxes">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.RequireInvertedAxes">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.Series">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.Series3D">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.SmoothingMode">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.Spacing">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ZoomFactorX">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ZoomFactorY">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.Zooming">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ZoomOutIncrement">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ZoomPositionX">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ZoomPositionY">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBaseDataBindList">
            <summary>
            Summary description for ChartBaseDataBindList.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartColorPalette">
            <summary>
            Pre-defined palettes for use with the ChartControl. Palettes are simply a group of colors that
            can be used to provide a nice visual appearance when displaying multiple chart series.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.Default">
            <summary>
            Default palette.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.DefaultAlpha">
            <summary>
            Default palette with alpha blending.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.EarthTone">
            <summary>
            Palette with earth tone colors.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.Analog">
            <summary>
            Palette with analog colors.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.Colorful">
            <summary>
            Colorful palette.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.Nature">
            <summary>
            Palette with the colors of nature.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.Pastel">
            <summary>
            Palette with pastel colors.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.Triad">
            <summary>
            Palette with triad colors.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.WarmCold">
            <summary>
            Palette that mixes warm and cold colors.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.GrayScale">
            <summary>
            GrayScale color palette which can be used for monochrome printing.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.Custom">
            <summary>
            Custom user assigned color palette.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartColorModel">
            <summary>
            The ChartColorModel class serves as a repository for color information. Color information is used by the chart to color rendered series.
            A group of colors is referred to as a palette of colors. You have the option of choosing from several predefined palettes or creating your
            own color palette.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartColorPalette"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Chart.ChartColorModel.Palette"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Chart.ChartColorModel.CustomColors"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorModel.NumColorsInPalette">
            <summary>
            The number of colors in the ChartColorModel's palette. If the number of series exceeds the number of colors in the palette (16 in the
            current version), colors will be repeated.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorModel.GetColor(System.Int32)">
            <summary>
            Returns the color (from the palette) corresponding to the index parameter.
            </summary>
            <param name="index" type="int">
                <para>
            	The index of the color to be returned.
                </para>
            </param>
            <returns>
                A System.Drawing.Color value that is used as the back color for the series.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartColorModel.CustomColors">
            <summary>
                The table of custom colors to be used. Series will be colored with color data from this color table. Individual series
                color can still be overriden by specifying style attributes. Palette information is used only when no specific style information
                is available on the color to be used for the series.
                <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartColorModel"/>
                <seealso cref="P:Syncfusion.Windows.Forms.Chart.ChartColorModel.Palette"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartColorModel.Palette">
            <summary>
                The Palette of colors to be used. Series will be colored with color data from this palette (color table). Individual series
                color can still be overriden by specifying style attributes. Palette information is used only when no specific style information
                is available on the color to be used for the series.
                <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartColorModel"/>
                <seealso cref="P:Syncfusion.Windows.Forms.Chart.ChartColorModel.CustomColors"/>
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel">
            <summary>
            Interface to be implemented if you want ChartControl to be able to display your data. The default series store is a implementation of IChartSeriesModel. When you implement this interface,
            you can set it as the data underlying any <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> object using the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartSeries.SeriesModelImpl"/>
            property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.GetX(System.Int32)">
            <summary>
            The X value of the series at the given point index.
            </summary>
            <param name="xIndex">The index of the point.</param>
            <returns>X value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.GetY(System.Int32)">
            <summary>
            The Y value of the series at the given point index.
            </summary>
            <param name="xIndex">The index of the point.</param>
            <returns>Y value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.GetEmpty(System.Int32)">
            <summary>
            Indicates if a plottable value is present at this point index.
            </summary>
            <param name="xIndex" type="int">
            The index of the point.
            </param>
            <returns>
                A bool value indicating if there is a value present at this point index.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.Count">
            <summary>
            The number of points in this series.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.Changed">
            <summary>
            Event that should be raised by any implementation of this interface if data that it holds changes. This will cause the
            chart to be updated accordingly.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.#ctor(System.Object,System.String)">
            <summary>
            The constructor for creating ChartDataBindModel
            </summary>
            <param name="datasource">The data source that is to be used.</param>
            <param name="dataMember">The data member to be used.</param>
            <param name="bindingContext">The BindingContext. Set this to be the Form's (hosting the ChartControl) BindingContext.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.GetX(System.Int32)">
            <summary>
            Implements IChartSeriesModel.GetX
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.GetY(System.Int32)">
            <summary>
            Implements IChartSeriesModel.GetY
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.GetEmpty(System.Int32)">
            <summary>
            Implements IChartSeriesModel.GetEmpty
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.RaiseChangedEvent(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Raise the Changed event
            </summary>
            <param name="ea">The ItemChanged event data</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.XIndex">
            <summary>
            The column index to be used for X value
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.XName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.YIndexes">
            <summary>
            The column indexes to be used for Y values
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.Count">
            <summary>
            Implements IChartSeriesModel.Count
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.Changed">
            <summary>
            This event is raised when the data is changed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.DataBindTimeSpanUnit">
            <summary>
            Specifies the unit that is to be used by the ChartDataBindModel for handling TimeSpan values.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDataChangedEventArgs">
            <summary>
            In the current version, ChartDataChangedEventArgs basically contains the same information as is present in ListChangedEventArgs. In a
            future version, this class will contain more information that is specific to the Chart.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataChangedEventArgs.FromListChangedEventArgs(System.ComponentModel.ListChangedEventArgs,Syncfusion.Windows.Forms.Chart.IChartSeriesModel)">
            <summary>
            Helper method to create ChartDataChangedEventArgs from ListChangedEventArgs.
            </summary>
            <param name="args" type="System.ComponentModel.ListChangedEventArgs">
                <para>
                ListChangedEventArgs object, information from which will be used to create the ChartDataChangedEventArgs object.
                </para>
            </param>
            <param name="chartData" type="Syncfusion.Windows.Forms.Chart.IChartSeriesModel">
                <para>
                This parameter is not used in the current version.
                </para>
            </param>
            <returns>
                A Syncfusion.Windows.Forms.Chart.ChartDataChangedEventArgs value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataChangedEventArgs.ToString">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDataChangedEventArgs.EventType">
            <summary>
            The type of event that occurred.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartDataChangedEventArgs.Type"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDataChangedEventArgs.Index">
            <summary>
            The index of the point that changed. This may or may not be valid depending on the type of event.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDataChangedEventArgs.InvalidIndex">
            <summary>
            Constant value that specifies an invalid index.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDataChangedEventArgs.Type">
            <summary>
            Specifies the type of event that occurred.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDataChangedEventArgs.Type.Reset">
            <summary>
            Specifies that the datasource was reset. All data is expected to have changed. <see cref="P:Syncfusion.Windows.Forms.Chart.ChartDataChangedEventArgs.Index"/> will be
            invalid in this case.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDataChangedEventArgs.Type.Inserted">
            <summary>
            Specifies that data has been inserted.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDataChangedEventArgs.Type.Removed">
            <summary>
            Specifies that data has been removed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDataChangedEventArgs.Type.Changed">
            <summary>
            Specifies that data has changed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDataChangedEventHandler">
            <summary>
            This event is raised by the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> class when data that is managed by this class has changed.
            </summary>
            <param name="source" type="object">
                <para>
                Event source.
                </para>
            </param>
            <param name="args" type="Syncfusion.Windows.Forms.Chart.ChartDataChangedEventArgs">
                <para>
                Event arguments.
                </para>
            </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IChartPointMinMax">
            <summary>
            This interface represents the minimum Y value, maximum Y value, and the X value at any point in a series.
            This interface is used to compute summary information such as overall series minimum and maximum values for
            rendering the chart. In most cases, you have to simply loop through the Y values at an index and return the minimum
            and maximum values for that point.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartModel">
            <summary>
            The ChartModel object acts as a central repository of data associated with and displayed by a <see cref="!:Syncfusion.Windows.Forms.Chart.ChartControl"/>.
            There are three parts to the ChartModel. The first part is the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection"/> instance that is held in the model.
            This collection holds all the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> instances that are registered with and displayed by the Chart. The Chart Model also
            holds a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap"/> instance. This collection maintains a collection of base styles that are registered with it.
            These base styles can be accessed and changed using this collection. Any changes made to base styles will automatically affect all style
            objects that depend on these base styles. Also, in the model is a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartColorModel"/> instance that provides access to several default
            Palettes for use by the ChartControl.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartModel.#ctor">
            <summary>
                Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartModel.GetStylesMap">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap"/> associated with this model.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartModel.NewSeries">
            <summary>
            Factory method for the creation of new series.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartModel.NewSeries(System.String)">
            <summary>
            Factory method for the creation of new series.
            </summary>
            <param name="name">Unique name for the new series to be created.</param>
            <returns><see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartModel.NewSeries(System.String,Syncfusion.Windows.Forms.Chart.ChartSeriesType)">
            <summary>
            Factory method for the creation of new series.
            </summary>
            <param name="name">Unique name for the new series to be created.</param>
            <param name="type">The type of the series created.</param>
            <returns><see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartModel.ColorModel">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartColorModel"/> associated with this model.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartModel.Series">
            <summary>
            Collection of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> objects. Each series represents an underlying <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPoint">
            <summary>
            Provides an easy interface to interact with the underlying data points contained in the <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/> associated
            with the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> that contains this data. Even though you are interacting with a friendly object model, the ChartPoint
            itself stores no data. It simply delegates to the underlying model that the ChartSeries is displaying.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPoint.Empty">
            <summary>
                Signifies the empty point.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPoint.#ctor(System.Double,System.Double[])">
            <summary>
            ChartPoint object constructor.
            </summary>
            <param name="x" type="double">
                <para>
                X value of this ChartPoint.
                </para>
            </param>
            <param name="y" type="double[]">
                <para>
                Y values pertaining to this ChartPoint. More than one Y value can be associated with a ChartPoint.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPoint.#ctor(System.Double,System.Double)">
            <summary>
            ChartPoint object constructor. Use this constructor overload when you are working with ChartPoints that have
            only one Y value.
            </summary>
            <param name="x" type="double">
                <para>
                X value of this ChartPoint.
                </para>
            </param>
            <param name="y" type="double">
                <para>
                Y value of this ChartPoint.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPoint.#ctor(System.Double,System.DateTime[])">
            <summary>
            ChartPoint object constructor. Use this constructor overload when you are working with ChartPoints that have
            DateTime Y values.
            </summary>
            <param name="x" type="double">
                <para>
                X value of this ChartPoint.
                </para>
            </param>
            <param name="dates" type="DateTime[]">
                <para>
                DateTime Y values of this ChartPoint.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPoint.#ctor(System.Double,System.DateTime)">
            <summary>
            ChartPoint object constructor. Use this constructor overload when you are working with ChartPoints that have a single
            associated DateTime Y value.
            </summary>
            <param name="x" type="double">
                <para>
                X value of this ChartPoint.
                </para>
            </param>
            <param name="date" type="DateTime">
                <para>
                DateTime Y value pertaining to this ChartPoint.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPoint.#ctor(System.DateTime,System.Double[])">
            <summary>
            ChartPoint object constructor. Use this constructor overload when you are working with ChartPoints that have
            a DateTime X value.
            </summary>
            <param name="date" type="DateTime">
                <para>
                X value of this ChartPoint.
                </para>
            </param>
            <param name="yValues" type="double[]">
                <para>
                Y values of this ChartPoint.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPoint.#ctor(System.DateTime,System.Double)">
            <summary>
            ChartPoint object constructor. Use this constructor overload when you are working with ChartPoints that have
            a DateTime X value.
            </summary>
            <param name="date" type="DateTime">
                <para>
                X value of this ChartPoint.
                </para>
            </param>
            <param name="y" type="double">
                <para>
                Y value of this ChartPoint.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPoint.GetYValuesAsDateTime">
            <summary>
            Returns Y values associated with this point as DateTime values.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPoint.DateX">
            <summary>
            The X value associated with this point as a DateTime value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPoint.X">
            <summary>
            The X value associated with this point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPoint.YValues">
            <summary>
            The Y values associated with this point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPoint.IsEmpty">
            <summary>
            State indicating whether this point should be plotted.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPointSummary">
            <summary>
            Summarizes System.Double fields. Provides count, minimum, maximum, sum, and average.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPrepareStyleInfoHandler">
            <summary>
            This delegate is used by the <see cref="E:Syncfusion.Windows.Forms.Chart.ChartSeries.PrepareStyle"/> and <see cref="E:Syncfusion.Windows.Forms.Chart.ChartSeries.PrepareSeriesStyle"/> events.
            </summary>
            <param name="sender" type="object">
                <para>
                Event source.
                </para>
            </param>
            <param name="args" type="Syncfusion.Windows.Forms.Chart.ChartPrepareStyleInfoEventArgs">
                <para>
                Event argument.
                </para>
            </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPrepareStyleInfoEventArgs">
            <summary>
            This class is used as the argument by the <see cref="E:Syncfusion.Windows.Forms.Chart.ChartSeries.PrepareStyle"/> and <see cref="E:Syncfusion.Windows.Forms.Chart.ChartSeries.PrepareSeriesStyle"/> events.
            These events are raised when chart style information is about to be used for rendering. They provide a just-in-time hook for changing any
            attributes of the style object(<see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/>) before it is used by the chart.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPrepareStyleInfoEventArgs.Handled">
            <summary>
            If the event raised has been completely handled by user code and no further processing is required, this flag should be set to
            True.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPrepareStyleInfoEventArgs.Index">
            <summary>
            The position of the contained style in the series.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPrepareStyleInfoEventArgs.Style">
            <summary>
            The style object that is to be used by the chart.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPointIndexer">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Add(System.Double,System.Double[])">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Add(System.Double,System.Double)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Add(System.Double,System.DateTime[])">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Add(System.Double,System.DateTime)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Add(Syncfusion.Windows.Forms.Chart.ChartPoint)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Add(System.DateTime,System.Double[])">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Add(System.DateTime,System.Double)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Clear">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Insert(System.Int32,Syncfusion.Windows.Forms.Chart.ChartPoint)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Remove(System.Int32)">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Item(System.Int32)">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Count">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeries">
            <summary>
            ChartSeries acts as a wrapper around data that is to be displayed and styles associated with the data.
            The data that is to be displayed is contained in either a <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/> or a <see cref="T:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel"/>
            implementation. The style to be used to display the points is stored in a contained implementation of <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesModel"/>.
            The ChartSeries object does not provide a public constructor. You have to use the <see cref="M:Syncfusion.Windows.Forms.Chart.ChartModel.NewSeries"/> method of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/>
            object.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesHost">
            <summary>
                This interface is implemented by classes that host series specific style information.
            </summary>
            <remarks>
            
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesHost.GetStylesMap">
            <summary>
            	A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap"/> acts as a repository that is used to hold information on registered base styles.
            	This information forms the core that is needed to apply base style information to styles.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesHost.BackColor">
            <summary>
               Back color hint from the host.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.model">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.modelAdapter">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.modelChangedEventHandler">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.nameInst">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.pointsIndexer">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.prepareSeriesStyleInfoHandler">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.prepareStyleInfoHandler">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.seriesConfigCollection">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.seriesModelAdapterInst">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.seriesModelInst">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.seriesStylesModel">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.styleChangedEventHandler">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.stylesIndexer">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.textInst">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnAppearanceChanged(System.EventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnChartStyleChanged(System.Object,Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnCreateSeriesModel">
            <summary>
            Factory method that gets called to create an instance of an implementation of <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/>. The default instance
            created is of type <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesModel"/>.
            </summary>
            
            <returns>
            Instance that implements IChartSeriesModel.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnCreateSeriesStylesModelImpl">
            <summary>
            Factory method that gets called to create an instance of an implementation of <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesModel"/>. The default instance
            created is of type <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesStylesModel"/>.
            </summary>
            
            <returns>
            Instance that implements IChartSeriesStylesModel.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnPrepareSeriesStyleInfo(Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Int32)">
            <summary>
            After composing the style of each series, the chart's style system will call this method before the style is used for display.
            Override this method if you wish to change the contents of the series ChartStyleInfo object that is passed in. For instance, if
            you wish to change the back color of the series being rendered based on external criteria, you could check this criteria when this
            method gets called and change the color of the series based on such. Note that any changes made to the style object in this method
            are not permanent but are temporary and last only for the current rendering cycle. This makes this method
            a convenient place to set transient data based attributes.
            </summary>
            <param name="styleInfo" type="Syncfusion.Windows.Forms.Chart.ChartStyleInfo">
                <para>
                ChartStyleInfo object that can be changed.
                </para>
            </param>
            <param name="seriesIndex" type="int">
                <para>
                The index of this series in the chart's <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection"/>.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnPrepareStyleInfo(Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Int32)">
            <summary>
            After composing the style of each point in a series, the chart's style system will call this method before the style is used for display.
            Override this method if you wish to change the contents of the ChartStyleInfo object that is passed in. For instance, if
            you wish to change the back color of the series point being rendered based on external criteria, you could check this criteria when this
            method gets called and change the color of the point based on such. Note that any changes made to the style object in this method
            are not permanent but are temporary and last only for the current rendering cycle. This makes this method
            a convenient place to set transient data based attributes.
            </summary>
            <param name="styleInfo" type="Syncfusion.Windows.Forms.Chart.ChartStyleInfo">
                <para>
                 ChartStyleInfo object that can be changed.
                </para>
            </param>
            <param name="index" type="int">
                <para>
                The index of the point (in the current series) associated with the style information passed in.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnSeriesChanged(System.EventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnSeriesModelChanged(System.Object,Syncfusion.Windows.Forms.Chart.ChartDataChangedEventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnSeriesModelImplChanged">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnSeriesModelImplChanging">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnSeriesStylesImplChanged">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnSeriesStylesImplChanging">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnSeriesSummaryImplChanged">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnSeriesSummaryImplChanging">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.RaiseModelImplChanged">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.RaiseSeriesStylesImplChanged">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.SetSeriesModel(Syncfusion.Windows.Forms.Chart.IChartSeriesModel)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.SetSeriesModelAdapter(Syncfusion.Windows.Forms.Chart.IChartSeriesModel)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.SetStylesImpl(Syncfusion.Windows.Forms.Chart.IChartSeriesStylesModel)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.UnwireStylesEvents">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.UnwireSummaryEvents">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.WireStylesEvents">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.WireSummaryEvents">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnCreateSeriesSummaryImpl">
            <summary>
            
            </summary>
            
            <returns>
                A Syncfusion.Windows.Forms.Chart.IChartSeriesSummary value...
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.SetSummaryImpl(Syncfusion.Windows.Forms.Chart.IChartSeriesSummary)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.GetData">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.GetAdaptedData">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.GetEditableData">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.IsEditableData">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.GetStylesMap">
            <summary>
            Refer <see cref="M:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesHost.GetStylesMap"/>
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartSeries.AppearanceChanged">
            <internalonly/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartSeries.DataChanged">
            <internalonly/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartSeries.PrepareSeriesStyle">
            <summary>
            When a series point is about to be rendered by the chart, it will raise this event and allow event subscribers to change the
            Series style used. You can handle this event to easily change style attributes based on external rules (for example).
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartSeries.PrepareStyle">
            <summary>
            When a series point is about to be rendered by the chart, it will raise this event and allow event subscribers to change the
            style used. You can handle this event to easily change style attributes based on external rules (for example).
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartSeries.SeriesChanged">
            <internalonly/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartSeries.StyleChanged">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.BaseType">
            <summary>
            The BaseType is used by the rendering code to check which of the pre-defined display patterns this series fits.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesBaseType"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ChartModel">
            <summary>
            Reference to the Chart's model.
            <seealso cref="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ChartModel"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ConfigItems">
            <summary>
               Chart series configuration items.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.EnableStyles">
            <summary>
            If set to False, the rendering is faster with the folowing remarks:
            The adornments are not drawn.
            In the chart types that have a different representation for each point (Column, Bar, Candle), the border is not drawn.
            In the chart types that only consist of borders (HiLo and HiLoOpenClose), the Series.Style.Border is used.
            In the chart types that have a single representation for all the series (Area, Line, Spline), the border is rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ExplodedIndex">
            <summary>
            The index of the point to be exploded from the main display. In the current implementation, this property is used
            only by the pie chart.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ExplosionOffset">
            <summary>
            Offset value to be used when a point is to be exploded from the main display. Currently applies
            only to the Pie chart.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Name">
            <summary>
            The name of this series object. You can retrieve a series by its name from the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection"/> object in the
            <see cref="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ChartModel"/> where it is stored.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.OriginDependent">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Points">
            <summary>
            Collection of Data points. These data points only serve as a thin wrapper around the actual data contained in the 
            <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/> or <see cref="T:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel"/>. You can add, remove, and edit points
            in this collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Renderer">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.RequireAxes">
            <summary>
            Can be used to check if the series type currently set requires axes to be rendered. Currently False only for Pie charts.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.RequireInvertedAxes">
            <summary>
            Can be used to check if the series type currently set requires axes to be inverted.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.SeriesIndexedModelImpl">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesIndexedModel"/> interface is a special interface that serves as a degraded special case of <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/>.
            A special case is situations where the X value is not needed. When you implement <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesIndexedModel"/> and set it to this property,
            the chart will internally create an adapter that implements <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/> and treat it as any other model.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.SeriesModel">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/> instance underlying this series.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.SeriesModelAdapter">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/> instance underlying this series.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.SeriesModelImpl">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/> instance underlying this series. Use this property to replace this instance with your own
            implementation. Use <see cref="P:Syncfusion.Windows.Forms.Chart.ChartSeries.SeriesModel"/> to access the model if you do not intend to replace it.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Style">
            <summary>
            The style object associated with the series. Attributes that are applied to this style will change the appearance of the complete
            series.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Styles">
            <summary>
            Styles that represent rendering information for the individual points in the series. Each of these style objects can be manipulated to
            affect the formatting and display of individual points. Styles set to individual points take precedence over the style of the Series (<see cref="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Style"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.StylesImpl">
            <summary>
            Specifies the object that implements <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesModel"/>. This object stores styles in an optimized manner and
            provides them on demand. You can replace this object with your own implementation of this interface to meet specific performance
            needs. In most cases, you should just use the default styles model that is provided.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Summary">
            <summary>
            Provides access to summary information such as minimum / maximum values contained in this series at any given
            moment.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Text">
            <summary>
            Text that is associated with this series. This is the text that will be displayed by default by the legend item associated with
            this series.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Type">
            <summary>
            The chart type to be rendered using this series. Please refer to <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesType"/> for a complete list and
            explanation of chart types.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Visible">
            <summary>
            Specifies if the series is to be plotted.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.XAxis">
            <summary>
            The XAxis instance against which this series will be plotted.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.XType">
            <summary>
            The X value type that is being rendered. Please refer to <see cref="T:Syncfusion.Windows.Forms.Chart.ChartValueType"/> for details on supported value types.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.YAxis">
            <summary>
            The YAxis instance against which this series will be plotted.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.YType">
            <summary>
            The Y value type that is being rendered. Please refer to <see cref="T:Syncfusion.Windows.Forms.Chart.ChartValueType"/> for details on supported value types.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ZOrder">
            <summary>
            The ZOrder of the series. You can use this setting to control which series gets plotted first. The chart will sort
            by ZOrder before rendering.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.BackColor">
            <summary>
            Refer <see cref="P:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesHost.BackColor"/>
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.CollectionChangedEventHandler">
            <summary>
            Delegate that is used with the <see cref="E:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.Changed"/> event.
            </summary>
            <param name="sender" type="object">
                <para>
                Sender.
                </para>
            </param>
            <param name="e" type="Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs">
                <para>
                Argument.
                </para>
            </param>
            <remarks>
            
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangeType">
            <summary>
                Chart series collection change types.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangeType.Added">
            <summary>
            Series added to the collection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangeType.Inserted">
            <summary>
            Series inserted in the collection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangeType.Removed">
            <summary>
            Series removed from the collection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangeType.Changed">
            <summary>
            Series in collection changed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangeType.Reset">
            <summary>
            The collection has been reset.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs">
            <summary>
               Argument that is used with the <see cref="E:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.Changed"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangeType)">
            <summary>
                Constructor.
            </summary>
            <param name="changeType" type="Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangeType">
                <para>
                The type of change that occurred in the collection.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs.CreateAddedEvent">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs.CreateChangedEvent">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs.CreateInsertedEvent">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs.CreateRemovedEvent">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs.CreateResetEvent">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs.ChangeType">
            <summary>
               The type of change that occurred in the collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ComparerByZandY">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ComparerByZandY.#ctor">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection">
            <summary>
            <see cref="T:System.Collections.CollectionBase"/> derived class that holds instances of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.#ctor(Syncfusion.Windows.Forms.Chart.ChartModel)">
            <summary>
                Constructor
            </summary>
            <param name="chartModel" type="Syncfusion.Windows.Forms.Chart.ChartModel">
                <para>
                 Chart model associated with this collection.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.Add(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Adds the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> instance passed in to this collection.
            </summary>
            <param name="series" type="Syncfusion.Windows.Forms.Chart.ChartSeries">
                <para>
            <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> instance that is to be added to this collection.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.BeginUpdate">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.EndUpdate">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.IndexOf(Syncfusion.Windows.Forms.Chart.ChartSeries)">
             <summary>
             Call this method to retrieve the index of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> instance that is passed in.
             </summary>
             <param name="series" type="Syncfusion.Windows.Forms.Chart.ChartSeries">
                 <para>
            <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> instance to be located.
                 </para>
             </param>
             <returns>
                 The index of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> instance passed in.
             </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Inserts the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> instance passed in to this collection at the specified index.
            </summary>
            <param name="index" type="int">
                <para>
            Index where the insert is to be made.
                </para>
            </param>
            <param name="series" type="Syncfusion.Windows.Forms.Chart.ChartSeries">
                <para>
            <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> instance to be inserted into this collection.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.Remove(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Removes the specified <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> instance from this collection.
            </summary>
            <param name="series" type="Syncfusion.Windows.Forms.Chart.ChartSeries">
                <para>
            <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> instance to be removed from this collection.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.ResetCache">
            <summary>
            Call this method to remove any temporarily cached style instances. You do not normally have to call this method.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.Sort(System.Collections.IComparer)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.OnClear">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.OnClearComplete">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.OnInsert(System.Int32,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.OnInsertComplete(System.Int32,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.OnRemove(System.Int32,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.OnRemoveComplete(System.Int32,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.OnSet(System.Int32,System.Object,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.OnValidate(System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.ShouldUpdate">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.UnwireChartModel(System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.UnwireChartModel(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.WireChartModel(System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.WireChartModel(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.OnSeriesChanged(System.Object,System.EventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.OnSeriesDataChanged(System.Object,Syncfusion.Windows.Forms.Chart.ChartDataChangedEventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.RaiseResetEvent">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.UnwireSeries(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.WireSeries(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.RefreshVisibleSeries">
            <summary>
            Reacalculates list of visible series, when some series of are changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.Changed">
            <summary>
            Event that will be raised when this collection is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.ShouldSort">
            <summary>
            Gets / sets a value indicating whether the series in this collection should be sorted.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.Sorted">
            <summary>
            Gets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection"/> is sorted.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.Item(System.Int32)">
            <summary>
            Returns the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> object at the index that is passed in.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.Item(System.String)">
            <summary>
            Returns the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> object with the name passed in.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesIndexedModelAdapter">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesIndexedModelAdapter.#ctor(Syncfusion.Windows.Forms.Chart.IChartSeriesIndexedModel)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesIndexedModelAdapter.GetX(System.Int32)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesIndexedModelAdapter.GetY(System.Int32)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesIndexedModelAdapter.GetEmpty(System.Int32)">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesIndexedModelAdapter.Inner">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesIndexedModelAdapter.Count">
            <internalonly/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartSeriesIndexedModelAdapter.Changed">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesIndexedModelAdapter.ChartPointMinMax">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesIndexedModelAdapter.ChartPointMinMax.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeriesIndexedModelAdapter,System.Int32)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesIndexedModelAdapter.ChartPointMinMax.GetY(System.Int32,System.Int32)">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesIndexedModelAdapter.ChartPointMinMax.X">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesIndexedModelAdapter.ChartPointMinMax.Min">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesIndexedModelAdapter.ChartPointMinMax.Max">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesModel">
            <summary>
            The core data container implementation for a chart. This is a very simple model that stores data in the list inherited
            from the CollectionBase. It relies on the events raised by the CollectionBase base class to inform users of changes to the series.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel">
            <summary>
            Interface to be implemented if you want ChartPoint to be able to change your data through code. Additionally, in a future version this interface will
            allow the chart to edit data. If you wish to just display data as a series in the chart, please refer to the simpler <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/>
            interface.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.Add(System.Double,System.Double[])">
            <summary>
            Add data to the end of the data representation.
            </summary>
            <param name="x">X value.</param>
            <param name="y">Y value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.Insert(System.Int32,System.Double,System.Double[])">
            <summary>
            Insert a value in the data at the given index.
            </summary>
            <param name="xIndex">Index where the insert is to be made.</param>
            <param name="x">The X value.</param>
            <param name="yValues">The associated Y values.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.SetX(System.Int32,System.Double)">
            <summary>
            Change the X value of the data point at the given index.
            </summary>
            <param name="xIndex">Index where the data is to be changed.</param>
            <param name="value">New X value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.SetY(System.Int32,System.Double[])">
            <summary>
            Change the Y value of the data point at the given index.
            </summary>
            <param name="xIndex">Index where data is to be changed.</param>
            <param name="yValues">New Y values.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.SetEmpty(System.Int32,System.Boolean)">
            <summary>
            Sets state indicating if the value at this point index is to be plotted. If this
            value is set to True, then it is treated as not present and is not plotted.
            </summary>
            <param name="xIndex" type="int">
            Index where the empty state indicator is to be stored.
            </param>
            <param name="isEmpty" type="bool">
            Empty state indicator.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.Remove(System.Int32)">
            <summary>
            Remove the data point at the given index.
            </summary>
            <param name="xIndex">Index where data is to be removed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.Clear">
            <summary>
            Clear all data points in this datasource.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.#ctor">
            <summary>
                Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.GetX(System.Int32)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.GetX(System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.GetY(System.Int32)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.GetY(System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.GetEmpty(System.Int32)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.GetEmpty(System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.Add(System.Double,System.Double[])">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.Add(System.Double,System.Double[])"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.Insert(System.Int32,System.Double,System.Double[])">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.Insert(System.Int32,System.Double,System.Double[])"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.SetX(System.Int32,System.Double)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.SetX(System.Int32,System.Double)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.SetY(System.Int32,System.Double[])">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.SetY(System.Int32,System.Double[])"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.SetEmpty(System.Int32,System.Boolean)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.SetEmpty(System.Int32,System.Boolean)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.Remove(System.Int32)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.Remove(System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.Clear">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.Clear"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.OnClear">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.OnClearComplete">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.OnInsert(System.Int32,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.OnInsertComplete(System.Int32,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.OnRemove(System.Int32,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.OnRemoveComplete(System.Int32,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.OnSet(System.Int32,System.Object,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.OnSetComplete(System.Int32,System.Object,System.Object)">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.Count">
            <summary>
            Please refer to <see cref="P:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.Count"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.Changed">
            <summary>
            Please refer to <see cref="E:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.Changed"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.SeriesEntry">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.SeriesEntry.#ctor(System.Double,System.Double[])">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.SeriesEntry.#ctor(System.Double,System.Double)">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.SeriesEntry.X">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.SeriesEntry.Y">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.SeriesEntry.IsEmpty">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter">
            <summary>
            Summary description for ChartSeriesModelAdapter.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter.GetX(System.Int32)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.GetX(System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter.GetY(System.Int32)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.GetY(System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter.GetEmpty(System.Int32)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.GetEmpty(System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter.Add(System.Double,System.Double[])">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.Add(System.Double,System.Double[])"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter.Insert(System.Int32,System.Double,System.Double[])">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.Insert(System.Int32,System.Double,System.Double[])"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter.SetX(System.Int32,System.Double)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.SetX(System.Int32,System.Double)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter.SetY(System.Int32,System.Double[])">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.SetY(System.Int32,System.Double[])"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter.SetEmpty(System.Int32,System.Boolean)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.SetEmpty(System.Int32,System.Boolean)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter.Remove(System.Int32)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.Remove(System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter.Clear">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.Clear"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter.Count">
            <summary>
            Please refer to <see cref="P:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.Count"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter.Changed">
            <summary>
            Please refer to <see cref="E:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.Changed"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartTestSeriesModelAdapter">
            <summary>
            This is test adapter which gives always the same data.
            Other adapters should build data points on points obtained from series.SeriesModel.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTestSeriesModelAdapter.GetX(System.Int32)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.GetX(System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTestSeriesModelAdapter.GetY(System.Int32)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.GetY(System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTestSeriesModelAdapter.GetEmpty(System.Int32)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.GetEmpty(System.Int32)"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartTestSeriesModelAdapter.Count">
            <summary>
            Please refer to <see cref="P:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.Count"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary">
            <summary>
            Contains summary information for implementing a class. In the current version, this
            interface is implemented by the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartAxis"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.Refresh">
            <summary>
            Refreshes summary information.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.Changed">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.MaxX">
            <summary>
            Gets the maximum X value.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.MaxY">
            <summary>
            Gets the maximum Y value.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.MinX">
            <summary>
            Gets the minimum X value.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.MinY">
            <summary>
            Gets the minimum Y value.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.ModelImpl">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IChartSeriesIndexedModel">
            <summary>
            Interface to be implemented if you want the ChartControl to be able to display your indexed data (X value is not needed). The ChartControl is totally agnostic
            about the data it displays. Even the default series store is an implementation of <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/>. When you implement this interface,
            you can set it as the data underlying any <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> object using the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartSeries.SeriesIndexedModelImpl"/>. When you
            use this model for a series, you have to set <see cref="!:Syncfusion.Windows.Forms.Chart.ChartControl.Indexed"/> to be True.
            property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesIndexedModel.GetY(System.Int32)">
            <summary>
            The Y value of the series at the given point index. Indexed series do not have an X value.
            </summary>
            <param name="xIndex">The index of the point.</param>
            <returns>Y value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesIndexedModel.GetEmpty(System.Int32)">
            <summary>
            Indicates if a plottable value is present at this point index.
            </summary>
            <param name="xIndex" type="int">
            The index of the point.
            </param>
            <returns>
                A bool value indicating if there is a value present at this point index.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartSeriesIndexedModel.Count">
            <summary>
            The number of points in this series.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.IChartSeriesIndexedModel.Changed">
            <summary>
            Event that should be raised by any implementation of this interface if data that it holds changes. This will cause the
            chart to be updated accordingly.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLegend">
            <summary>
            The ChartLegend control represents the legend of the ChartControl.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.GetGraphics">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.OnCreateControl">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.#ctor(Syncfusion.Windows.Forms.Chart.IChartAreaHost,System.Boolean)">
            <summary>
            For internal use. Do not use this construtor directly.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.#ctor(Syncfusion.Windows.Forms.Chart.IChartAreaHost)">
            <summary>
            For internal use. Do not use this construtor directly.
            </summary>
            <param name="chart" type="Syncfusion.Windows.Forms.Chart.ChartControl">
                <para>
                The chart control aggregating this legend.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.InitializeComponent">
            <summary>
            Initialize component. Method sets event handlers.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.AutoSize(System.Drawing.Rectangle)">
            <summary>
            Internal method. Please do not call from your code.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.Draw(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle@)">
            <summary>
            Internal method
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.AutoLocation(System.Drawing.Rectangle)">
            <summary>
            
            </summary>
            <param name="rect"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.GetMinSize(System.Drawing.Graphics)">
            <summary>
               Calculates and returns the minimum size required by this legend to fit all display items.
            </summary>
            <param name="g" type="System.Drawing.Graphics">
                <para>
                Graphics object to be used for metrics.
                </para>
            </param>
            <returns>
                Size required.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.OnClick(System.EventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.OnDoubleClick(System.EventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.ShowPropertyForm">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Override on the standard method of class control.
            Event handler to event Paint.
            </summary>
            <param name="e"></param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.AllItems">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.GetDeltaItemX(Syncfusion.Windows.Forms.Chart.LegendItem,System.Int32,System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.OnLegentSizeChange">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.OnRecalculateSizes">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.BorderSettingsChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.RaiseDrawItem(Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemEventArgs)">
            <summary>
            This method is calling method OnDrawItem. 
            Called in the method ChartLegend.GetMinSize().
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.RaiseFilterItems(Syncfusion.Windows.Forms.Chart.ChartLegendFilterItemsEventArgs)">
            <summary>
            This method is calling method OnFilterItems. 
            Called in the method ChartLegend.GetMinSize().
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.RaiseMinSize(Syncfusion.Windows.Forms.Chart.ChartLegendMinSizeEventArgs)">
            <summary>
            This method is calling method OnMinSize. 
            Called in the method ChartLegend.GetMinSize().
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.SetEventHandler(Syncfusion.Windows.Forms.Chart.LegendFilterItemsEventHandler)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegend.OnDockChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartLegend.DrawItem">
            <summary>
            Fired when a legend item needs to draw. Handle this event to change the drawing of items.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartLegend.FilterItems">
            <summary>
            Fired when the legend items need to be filtered. Handle this event to change the collection of LegendItems that the legend contains.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartLegend.MinSize">
            <summary>
            Fired when the legend's minimum size is to be fixed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegend.Spacing">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegend.Orientation">
            <summary>
                Legend orientation.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegend.Position">
            <summary>
                Legend position.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegend.Border">
            <summary>
            Gets / sets border line
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegend.Columns">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegend.Rows">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegend.CustomItems">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegend.FloatingAutoSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegend.RepresentationType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegend.ShowBorder">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegend.ShowSymbol">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegend.LegendAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegend.ItemsAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.LegendFilterItemsEventHandler">
            <summary>
                Delegate used with <see cref="!:ChartLegendInfo.FilterItems"/>.
            </summary>
            <param name="sender" type="object">
                <para>
                Sender.
                </para>
            </param>
            <param name="e" type="Syncfusion.Windows.Forms.Chart.ChartLegendFilterItemsEventArgs">
                <para>
                Event argument.
                </para>
            </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.LegendDrawItemEventHandler">
            <summary>
                Delegate used with <see cref="!:ChartLegendInfo.DrawItem"/>.
            </summary>
            <param name="sender" type="object">
                <para>
                Sender.
                </para>
            </param>
            <param name="e" type="Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemEventArgs">
                <para>
                Event argument.
                </para>
            </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLegendFilterItemsEventArgs">
            <summary>
                Event argument used with <see cref="!:ChartLegendInfo.FilterItems"/> and <see cref="!:ChartLegendInfo.OnFilterItems"/>. This
                event is raised before the legend items are rendered. This can be used to remove any items conditionally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendFilterItemsEventArgs.#ctor(Syncfusion.Windows.Forms.Chart.LegendItem[])">
            <summary>
                Constructor.
            </summary>
            <param name="items" type="Syncfusion.Windows.Forms.Chart.LegendItem[]">
                <para>
                Legend items to be rendered.
                </para>
            </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendFilterItemsEventArgs.Items">
            <summary>
                Legend items to be rendered.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemEventArgs">
            <summary>
                Argument used with <see cref="!:ChartLegendInfo.DrawItem"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemEventArgs.#ctor(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.LegendItem,System.Drawing.Point,System.Int32)">
            <summary>
                Constructor.
            </summary>
            <param name="g" type="System.Drawing.Graphics">
                <para>
                Graphics object.
                </para>
            </param>
            <param name="item" type="Syncfusion.Windows.Forms.Chart.LegendItem">
                <para>
                Legend item to be rendered.
                </para>
            </param>
            <param name="loc" type="System.Drawing.Point">
                <para>
                Location of the legend item.
                </para>
            </param>
            <param name="index" type="int">
                <para>
                Index of the legend item being rendered.
                </para>
            </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemEventArgs.Graphics">
            <summary>
            The graphics object to use for rendering.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemEventArgs.Handled">
            <summary>
            Indicates if drawing the legend item has been handled. If set to True, the legend will not draw the item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemEventArgs.Index">
            <summary>
            The index of this item in the legend item's array.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemEventArgs.LegendItem">
            <summary>
            The LegendItem that needs to be rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemEventArgs.Location">
            <summary>
            The location of the item.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLegendMinSizeEventHandler">
            <summary>
                Used with <see cref="!:ChartLegendInfo.MinSize"/> and <see cref="!:ChartLegendInfo.OnMinSize"/>.
            </summary>
            <param name="sender" type="object">
                <para>
                Sender.
                </para>
            </param>
            <param name="e" type="Syncfusion.Windows.Forms.Chart.ChartLegendMinSizeEventArgs">
                <para>
                Event argument.
                </para>
            </param>
            <remarks>
            
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLegendMinSizeEventArgs">
            <summary>
              Used with <see cref="!:ChartLegendInfo.MinSize"/> and <see cref="!:ChartLegendInfo.OnMinSize"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendMinSizeEventArgs.#ctor(System.Drawing.Size)">
            <summary>
                Constructor.
            </summary>
            <param name="size" type="System.Drawing.Size">
                <para>
                Size to be used.
                </para>
            </param>
            <returns>
                A void value...
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendMinSizeEventArgs.Handled">
            <summary>
                Specifies if the event was handled. If set to True, no further processing is done by the chart and specified value is used
                for further calculation and rendering.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendMinSizeEventArgs.Size">
            <summary>
                The minimum size to be used for the legend.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.LegendItem">
            <summary>
            The LegendItem class holds information about each legend item like text, color, and interior. Legend items are created when rendering.
            They are therefore only available using the <see cref="!:ChartLegendInfo.FilterItems"/> and <see cref="!:ChartLegendInfo.OnFilterItems"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LegendItem.#ctor">
            <summary>
                Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LegendItem.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries,Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType,System.Boolean)">
            <summary>
                Constructor.
            </summary>
            <param name="series" type="Syncfusion.Windows.Forms.Chart.ChartSeries">
                <para>
                The series that this item represents.
                </para>
            </param>
            <param name="reprType" type="Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType">
                <para>
                The type to use for representation.
                </para>
            </param>
            <param name="is3D" type="bool">
                <para>
                Specifies if the series is rendered in 3D.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LegendItem.#ctor(Syncfusion.Windows.Forms.Chart.ChartStyleInfo,Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType)">
            <summary>
                Constructor.
            </summary>
            <param name="style" type="Syncfusion.Windows.Forms.Chart.ChartStyleInfo">
                <para>
                Style information from which legend item information can be initialized.
                </para>
            </param>
            <param name="reprType" type="Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType">
                <para>
                The representation to use.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LegendItem.Draw(System.Drawing.Graphics,System.Drawing.Point)">
            <summary>
            Renders the legend item on a graphics surface.
            </summary>
            <param name="g" type="System.Drawing.Graphics">
                <para>
                The graphics object which the legend item should be rendered.
                </para>
            </param>
            <param name="location" type="System.Drawing.Point">
                <para>
                The location of the legend item.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LegendItem.GetSize(System.Drawing.Graphics)">
            <summary>
                Calculates and returns the size of the legend item to be rendered.
            </summary>
            <param name="g" type="System.Drawing.Graphics">
                <para>
                The graphics object on which the item is to be rendered. Used for calculation.
                </para>
            </param>
            <returns>
                Size of the legend item to be rendered.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LegendItem.Font">
            <summary>
            The font of the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LegendItem.ImageIndex">
            <summary>
            The image index of the item in the item's image list.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LegendItem.ImageList">
            <summary>
            The ImageList associated with this item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LegendItem.Interior">
            <summary>
            The interior of the representation rectangle.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LegendItem.RepresentationSize">
            <summary>
            The size of the rectangle holding the representation of the item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LegendItem.ShowSymbol">
            <summary>
                Specifies if the symbol is to be displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LegendItem.Spacing">
            <summary>
            The spacing of the item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LegendItem.Symbol">
            <summary>
            The symbol associated with this item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LegendItem.Text">
            <summary>
            The text of the item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LegendItem.TextColor">
            <summary>
            The color of the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LegendItem.Type">
            <summary>
            The type of the representation.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LegendItem.Region">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LegendItem.Series">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LegendItem.ShowIcon">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LegendItem.IconAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.LegendPropertyForm">
            <summary>
            Summary description for LegendProoertiesForm.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.LegendPropertyForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LegendPropertyForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LegendPropertyForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LegendPropertyForm.SetLegendInfo(Syncfusion.Windows.Forms.Chart.ChartLegend)">
            <summary>
            
            </summary>
            <param name="legendInfo"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LegendPropertyForm.bttnOK_Click(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LegendPropertyForm.bttnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LegendPropertyForm.bttnApply_Click(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.LegendPropertyForm.LegendProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LegendPropertyForm.LegendProperty.#ctor">
            <summary>
            
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LegendPropertyForm.LegendProperty.SetInfo(Syncfusion.Windows.Forms.Chart.ChartLegend)">
            <summary>
            
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LegendPropertyForm.LegendProperty.OutInfo(Syncfusion.Windows.Forms.Chart.ChartLegend)">
            <summary>
            
            </summary>
            <param name="info"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LegendPropertyForm.LegendProperty.ShowBorder">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LegendPropertyForm.LegendProperty.Border">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LegendPropertyForm.LegendProperty.BackColor">
            <summary>
            Indicates the background color of the legend.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LegendPropertyForm.LegendProperty.FloatingAutoSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LegendPropertyForm.LegendProperty.ShowSymbol">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LegendPropertyForm.LegendProperty.Position">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LegendPropertyForm.LegendProperty.Orientation">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LegendPropertyForm.LegendProperty.LegendAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LegendPropertyForm.LegendProperty.ItemsAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LegendPropertyForm.LegendProperty.Rows">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IChartDateTimeDefaults">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartDateTimeDefaults.GetCalendar">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartDateTimeDefaults.GetDaysInYear">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartDateTimeDefaults.GetDaysInMonth">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartDateTimeDefaults.GetMinDaysInMonth">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartDateTimeDefaults.GetDaysInWeek">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartDateTimeDefaults.GetFirstDayOfWeek">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType">
            <summary>
            Types of DateTime intervals in the context of Essential Chart.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType.Unknown">
            <summary>
            Unspecified value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType.Auto">
            <summary>
            The interval defaults to the most appropriate for the range of values being considered. For example, if the range
            is a few years, the interval would be internally set to years.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType.Years">
            <summary>
            Interval is set to years.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType.Months">
            <summary>
            Interval is set to months.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType.Weeks">
            <summary>
            Interval is set to weeks.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType.Days">
            <summary>
            Interval is set to days.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType.Hours">
            <summary>
            Interval is set to hours.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType.Minutes">
            <summary>
            Interval is set to minutes.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType.Seconds">
            <summary>
            Interval is set to seconds.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType.MilliSeconds">
            <summary>
            Interval is set to milliseconds.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval">
            <summary>
              Represents a DateTime interval value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.DefaultIntervalName">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.GetIntervalCount(System.Collections.IEnumerable)">
            <summary>
            Given a ChartDateTimeInterval.Enumerator instance, simply loops through and calculates the number of distinct positions
            in the range that the iterator represents.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange"/>
            </summary>
            <param name="enumerable" type="System.Collections.IEnumerable">
                <para>
                ChartDateTimeInterval.Enumerator instance.
                </para>
            </param>
            <returns>
                Number of distinct positions.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.#ctor(Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType,System.Double,Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType,System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="type" type="Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType">
                <para>
                Type of the interval.
                </para>
            </param>
            <param name="value" type="double">
                <para>
                Primary value of the interval.
                </para>
            </param>
            <param name="offsetType" type="Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType">
                <para>
                Offset type of this interval. Intervals can have offsets. Offsets merely affect the first position when an interval
                is applied to a range. They translate the first position by the value of the offset.
                </para>
            </param>
            <param name="offset" type="double">
                <para>
                The actual translation value.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.#ctor(Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType,System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="type" type="Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType">
                <para>
                Type of the interval.
                </para>
            </param>
            <param name="value" type="double">
                <para>
                Primary value of the interval.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Iterator">
            <summary>
            Creates and returns a default iterator that will iterate over the associated range (<see cref="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Parent"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Iterator(Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.IterationFilter)">
            <summary>
            Creates and returns an iterator that will iterate over the associated range (<see cref="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Parent"/>. The
            IterationFilter callback will be called for each position in this range to check if the position should be included.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Iterator(Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.IterationModifier)">
            <summary>
            Creates and returns an iterator that will iterate over the associated range (<see cref="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Parent"/>. The
            IterationModifier callback will be called for each position in this range to allow the DateTime value of each position to
            be modified.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Iterator(Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.IterationFilter,Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.IterationModifier)">
            <summary>
            Creates and returns an iterator that will iterate over the associated range (<see cref="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Parent"/>. The
            IterationModifier callback will be called for each position in this range to allow the DateTime value of each position to
            be modified. The IterationFilter callback will be called for each position in this range to check if the position should be included.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Iterator(System.DateTime,System.DateTime)">
            <summary>
            Creates and returns a default iterator that will iterate over the associated range (<see cref="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Parent"/>.
            Only values that are between rangeStart and rangeEnd will be used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Iterator(System.DateTime,System.DateTime,Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.IterationFilter)">
            <summary>
            Creates and returns an iterator that will iterate over the associated range (<see cref="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Parent"/>.
            Only values that are between rangeStart and rangeEnd will be used. In this range, the IterationFilter callback will be called for
            each position in this range to check if the position should be included.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Iterator(System.DateTime,System.DateTime,Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.IterationModifier)">
            <summary>
            Creates and returns an iterator that will iterate over the associated range (<see cref="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Parent"/>.
            Only values that are between rangeStart and rangeEnd will be used. In this range, the IterationModifier callback will be called for
            each position in this range to allow it to be modified.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Iterator(System.DateTime,System.DateTime,Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.IterationFilter,Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.IterationModifier)">
            <summary>
            Creates and returns an iterator that will iterate over the associated range (<see cref="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Parent"/>.
            Only values that are between rangeStart and rangeEnd will be used. In this range, the IterationModifier callback will be called for
            each position in this range to allow it to be modified. For each modified value, the IterationFilter callback will be called
            to check if the position should be included.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.ToString">
            <summary>
            Returns a string representation of this interval.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.ApplyInterval(System.DateTime,System.Globalization.Calendar,Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType,System.Double,System.Int32)">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Type">
            <summary>
            The type of this interval.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Value">
            <summary>
            The value of this interval. Interval values should be interpreted in the context of <see cref="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Type"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.OffsetType">
            <summary>
            The type of the offset. Intervals can have offsets. Offsets merely affect the first position when an interval
            is applied to a range. They translate the first position by the value of the offset.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Offset">
            <summary>
            The value of the offset. Intervals can have offsets. Offsets merely affect the first position when an interval
            is applied to a range. They translate the first position by the value of the offset.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Parent">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange"/> object with which this interval is associated. Intervals are not created stand alone but
            in the context of a range.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.IterationFilter">
            <summary>
            This callback can be used during iteraction on the range associated with an instance of ChartDateTimeInterval. If this
            callback returns False, then that position is not used.
            <seealso cref="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Iterator"/>
            </summary>
            <param name="dt" type="System.DateTime">
                <para>
                The date that is to be included or not included.
                </para>
            </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.IterationModifier">
            <summary>
            This callback can be used during iteration on the range associated with an instance of ChartDateTimeInterval. This callback can
            change the date that gets passed in during iteration.
            </summary>
            <param name="dt" type="System.DateTime">
                <para>
                The date that is a position along the associated range during iteration. This date can be changed by this callback.
                </para>
            </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange">
            <summary>
            This class represents a date range.
            </summary>
            <remarks>
            
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange.#ctor(System.DateTime,System.DateTime,System.Double,Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType)">
            <summary>
            Constructor.
            </summary>
            <param name="start" type="System.DateTime">
                <para>
                 The start boundary of this range.
                </para>
            </param>
            <param name="end" type="System.DateTime">
                <para>
                The end boundary of this range.
                </para>
            </param>
            <param name="interval" type="double">
                <para>
                The value of the default interval to be associated with this range.
                </para>
            </param>
            <param name="type" type="Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType">
                <para>
                The type of the default interval to be associated with this range.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange.#ctor(System.DateTime,System.DateTime,System.Double,Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType,System.Globalization.Calendar)">
            <summary>
            Constructor.
            </summary>
            <param name="start" type="System.DateTime">
                <para>
                The start boundary of this range.
                </para>
            </param>
            <param name="end" type="System.DateTime">
                <para>
                The end boundary of this range.
                </para>
            </param>
            <param name="interval" type="double">
                <para>
                The value of the default interval to be associated with this range.
                </para>
            </param>
            <param name="type" type="Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType">
                <para>
                 The type of the default interval to be associated with this range.
                </para>
            </param>
            <param name="calendar" type="System.Globalization.Calendar">
                <para>
                The calendar to be associated with this range.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange.ToString">
            <summary>
            Returns a string representation of this range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange.Start">
            <summary>
            The start boundary of this range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange.End">
            <summary>
            The end boundary of this range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange.DefaultInterval">
            <summary>
            Each range has at least one associated interval that is registered by default. This interval is returned by this property.
            <seealso cref="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange.Intervals"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange.Intervals">
            <summary>
            Intervals (<see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval"/>) of several types can be registered with this range. This collection
            holds all such registered intervals. Intervals afford an easy way to partition and iterate through a date range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange.Calendar">
            <summary>
            The <see cref="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange.Calendar"/> instance associated with this date range.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeRangeManager">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDateTimeRangeManager.nrm">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeRangeManager.#ctor(System.DateTime,System.DateTime,Syncfusion.Windows.Forms.Chart.IChartDateTimeDefaults)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeRangeManager.#ctor(System.DateTime,System.DateTime)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeRangeManager.MakeNiceRange">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeRangeManager.GetNiceRangeMaker">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeRangeManager.CreateNiceRangeMaker">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeRangeManager.CalculateIntervalType">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeRangeManager.DesiredIntervalType">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeRangeManager.Defaults">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeRangeManager.IntervalType">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeRangeManager.DesiredIntervals">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeRangeManager.Start">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeRangeManager.End">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartIntervalCollection">
            <summary>
            Each <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange"/> object has an associated set of intervals (<see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval"/>) that
            can be used to iterate over the range. ChartIntervalCollection is the repository for these intervals.
            <seealso cref="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange.Intervals"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartIntervalCollection.#ctor(Syncfusion.Windows.Forms.Chart.ChartDateTimeRange)">
            <summary>
            Constructor.
            </summary>
            <param name="parent" type="Syncfusion.Windows.Forms.Chart.ChartDateTimeRange">
                <para>
                Range that is to be associated with all <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval"/> registered with this collection.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartIntervalCollection.Reset">
            <summary>
            Removes all registered intervals except the default interval.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartIntervalCollection.Clear">
            <summary>
            Removes all registered intervals including the default interval.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartIntervalCollection.Register(System.String,Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval)">
            <summary>
            Registers an interval with this collection.
            </summary>
            <param name="name" type="string">
                <para>
                The registration name of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval"/> to be registered.
                </para>
            </param>
            <param name="interval" type="Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval">
                <para>
                The interval to be registered.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartIntervalCollection.Remove(System.String)">
            <summary>
            Locates and removes the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval"/> with the specified name.
            </summary>
            <param name="name" type="string">
                <para>
                The registration name of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval"/> to be located and returned.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartIntervalCollection.ToString">
            <summary>
            Returns a string representation of this collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartIntervalCollection.Item(System.String)">
            <summary>
            Locates and returns the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval"/> with the specified name.
            </summary>
            <value>
                <para>
                The registration name of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval"/> to be located and returned.
                </para>
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.INiceRangeMaker">
            <summary>
            Interface that defines preferences and access methods used for the automatic calculation of 'nice' ranges
            given any range of data. 'Nice' ranges are generally more easily understood in comparison to 'raw' data.    
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.INiceRangeMaker.MakeNiceRange(System.Double,System.Double,Syncfusion.Windows.Forms.Chart.ChartAxisRangePaddingType)">
            <summary>
            Given a minimum value and a maximum value this method will calculate a 'nice' minimum value and a maxiumum value
            as well as an interval value that can be used for visually representing this data. 'Nice' values are better
            perceived by humans. For example, consider a range 1.21-3.5. A nice range that we can use to visually represent values
            in this range can be 0-3.6 with an interval of 2. You can tweak the results obtained by changing optional settings.
            </summary>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.INiceRangeMaker.DesiredIntervals">
            <summary>
            Approximate number of intervals into which the range is to be partitioned. The actual number of
            intervals calculated will depend on the actual algorithm used.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.INiceRangeMaker.PreferZero">
            <summary>
            Indicates if one boundary of the calculated range should be tweaked to zero. Such tweaking will happen
            only if zero is within a resonable distance from the calculated boundary. To ensure that one boundary
            is always zero, use the <see cref="P:Syncfusion.Windows.Forms.Chart.INiceRangeMaker.ForceZero"/> setting instead.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.INiceRangeMaker.ForceZero">
            <summary>
            Indicates if one boundary of the calculated range should always be tweaked to zero.<seealso cref="P:Syncfusion.Windows.Forms.Chart.INiceRangeMaker.PreferZero"/>
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.MinMaxInfo">
            <summary>
            Simple immutable class to store information on minimum and maximum values and a suggested interval.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.MinMaxInfo.OnSettingsChanged(System.EventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.MinMaxInfo.Clone">
            <summary>
            Creates a copy of this object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.MinMaxInfo.Equals(Syncfusion.Windows.Forms.Chart.MinMaxInfo)">
            <summary>
             Compares this object with another object of the same type.
            </summary>
            <param name="mmi" type="Syncfusion.Windows.Forms.Chart.MinMaxInfo">
                <para>
                The object with which this object is to be compared.
                </para>
            </param>
            <returns>
                Returns True if the objects are equal in value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.MinMaxInfo.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            MinMaxInfo represents a range of double values. There is a lower bound, upper bound, and an associated interval.
            </summary>
            <param name="min" type="double">
                <para>
                The lower bound value.
                </para>
            </param>
            <param name="max" type="double">
                <para>
                The upper bound value.
                </para>
            </param>
            <param name="interval" type="double">
                <para>
                The interval value.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.MinMaxInfo.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.MinMaxInfo.SettingsChanged">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.MinMaxInfo.Delta">
            <summary>
            The difference between the upper and lower boundary of this range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.MinMaxInfo.Min">
            <summary>
            The lower boundary of this range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.MinMaxInfo.Max">
            <summary>
            The upper boundary of this range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.MinMaxInfo.Interval">
            <summary>
            The value of the interval associated with this range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.MinMaxInfo.NumberOfIntervals">
            <summary>
            The number of intervals present in this range.
            <see cref="P:Syncfusion.Windows.Forms.Chart.MinMaxInfo.Interval"/>
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.NiceRangeMaker">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="desiredIntervals"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.#ctor">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.MakeNiceRange(System.Double,System.Double,Syncfusion.Windows.Forms.Chart.ChartAxisRangePaddingType)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.TweakMinMax(Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState)">
            <summary>
            Tweak the incoming minimum and maximum values so that special conditions are handled
            properly.
            </summary>
            <param name="opState"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.AdjustPlaces(Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState)">
            <summary>
            This method raises the working values to powers of 10 such that we work with whole
            numbers. The number of places adjusted is stored in the operating state.
            </summary>
            <param name="opState"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.CalcNiceValues(Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState)">
            <summary>
            This methods calls into other methods to calculate 'nice' values.
            </summary>
            <param name="opState"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.CalcNiceInterval(Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.MakeNiceNumber(System.Double)">
            <summary>
            Simple logic for creating 'nice' numbers that are close to the numbers passed in.
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.CalcNiceMin(Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState)">
            <summary>
            Calculates a 'nice' minimum value given a 'nice' interval. This function basically makes the minimum
            value nicely divisible by the interval.
            </summary>
            <param name="opState"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.CalcNiceMax(Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState)">
            <summary>
            Calculates a 'nice' maximum value given a 'nice' interval. This function basically makes the maximum
            value nicely divisible by the interval.
            </summary>
            <param name="opState"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.UndoAdjustPlaces(Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState)">
            <summary>
            This function divides the calculated values again by the adjustment factor to go back to correct values.
            </summary>
            <param name="opState"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.TweakToFitZero(Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState)">
            <summary>
            This function checks the minimum and maximum values calculated to see if either of them can
            be made zero. Visual respresentation of data appears more readable if zero is used as a baseline.
            </summary>
            <param name="opState"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.TweakBoundaries(Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState)">
            <summary>
            This function checks the calculated minimum and maximum values to see if they need to be changed
            so that a visual representation does not result in value being displayed too close to the boundaries.
            </summary>
            <param name="opState"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.DesiredIntervals">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.RangePaddingType">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.PreferZero">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.ForceZero">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState">
            <summary>
            Class holds operational state (intermediate calculated values, support values, etc).
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState.#ctor(Syncfusion.Windows.Forms.Chart.NiceRangeMaker,System.Double,System.Double)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState.UpdateCalcInterval">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState.Min">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState.Max">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState.Interval">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState.CalcMin">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState.CalcMax">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState.CalcInterval">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState.AdjustedPlaces">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.#ctor(Syncfusion.Windows.Forms.Chart.IChartDateTimeDefaults,Syncfusion.Windows.Forms.Chart.INiceRangeMaker)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.#ctor(Syncfusion.Windows.Forms.Chart.IChartDateTimeDefaults)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.#ctor">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.MakeNiceRange(System.DateTime,System.DateTime,Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.MakeNiceRange(System.DateTime,System.DateTime,Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType,Syncfusion.Windows.Forms.Chart.ChartAxisRangePaddingType)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.MakeNiceYearsRange(System.DateTime,System.DateTime)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.MakeNiceMonthsRange(System.DateTime,System.DateTime)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.MakeNiceWeeksRange(System.DateTime,System.DateTime)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.MakeNiceDaysRange(System.DateTime,System.DateTime)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.MakeNiceHoursRange(System.DateTime,System.DateTime)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.MakeNiceMinutesRange(System.DateTime,System.DateTime)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.MakeNiceSecondsRange(System.DateTime,System.DateTime)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.MakeNiceMilliSecondsRange(System.DateTime,System.DateTime)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.AdjustToWeekStart(System.DateTime,Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.SeekDirection)">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.Defaults">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.Calendar">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.DesiredIntervals">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.RangePaddingType">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.ForceZero">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.PreferZero">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.SeekDirection">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.SeekDirection.Forward">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.SeekDirection.Reverse">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.Impl">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.Impl.#ctor">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.Impl.MakeNiceNumber(System.Double)">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.ImplWeeks">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.ImplWeeks.#ctor">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.ImplWeeks.MakeNiceNumber(System.Double)">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer">
            <summary>
            <para>
            Base class for all renderers. Each renderer is responsible for rendering one data series 
            (please refer to <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/>) inside of the chart area. ChartSeriesRenderer 
            provides the basic plumbing that is needed by all renderers. It is not an abstract class 
            and is used as the renderer for the scatter plot since the scatter plot needs only basic 
            point rendering at the correct position.
            </para>
            
            <para>
            You can derive from ChartSeriesRenderer to create your own renderers.
            </para>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Constructor for the base renderer.
            </summary>
            <param name="series" type="Syncfusion.Windows.Forms.Chart.ChartSeries">
                <para>
                ChartSeries that will be rendered by this renderer instance.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Draw(System.Drawing.Graphics)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Render(System.Drawing.Graphics)">
            <summary>
                In the base <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/> it does not do anything. In derived classes this function does 
                the rendering. 
            </summary>
            <param name="g" type="System.Drawing.Graphics">
                <para>
                The graphics object to use.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetOffsetPoints(System.Drawing.PointF[],System.Drawing.SizeF)">
            <summary>
            
            </summary>
            <param name="points"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Draw3DSpline(System.Drawing.Graphics,System.Drawing.PointF[],System.Drawing.SizeF,Syncfusion.Drawing.BrushInfo,System.Drawing.Pen)">
            <summary>
            Draws 3D Spline from points array and additionally calculates second derivatives y2 array.
            </summary>
            <param name="g"></param>
            <param name="points"></param>
            <param name="offset"></param>
            <param name="brush"></param>
            <param name="pen"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Draw3DSpline(System.Drawing.Graphics,System.Drawing.PointF[],System.Single[],System.Drawing.SizeF,Syncfusion.Drawing.BrushInfo,System.Drawing.Pen)">
            <summary>
            Draws 3D Spline from points array and additionally second derivatives added in y2 array.
            Remember that second derivatives should be calculated in naturalSpline function and
            improper y2[] values can cause improper spline drawing. 
            </summary>
            <param name="g"></param>
            <param name="points"></param>
            <param name="y2"></param>
            <param name="offset"></param>
            <param name="brush"></param>
            <param name="pen"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.AddExtremumPoints(System.Drawing.PointF[],System.Single[],System.Drawing.PointF[]@,System.Single[]@)">
            <summary>
            Adds all extremum points to new arrays.
            This method is needed to imitate 3D Spline strip.
            </summary>
            <param name="points"></param>
            <param name="y2"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.SolveQuadraticEquation(System.Single,System.Single,System.Single,System.Single@,System.Single@)">
            <summary>
            solves quadratic equation in form a*x^2 + b*x + c = 0
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="c"></param>
            <param name="root1"></param>
            <param name="root2"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.naturalSpline(System.Drawing.PointF[],System.Single[]@)">
            <summary>
            Given the array of points. The procedure returns array of second derivatives of cubic splines at this points.
            Then we can get bezier curve coordinates from the second derivatives and points array.
            </summary>
            <param name="points"></param>
            <param name="y2"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.BezierPointsFromSpline(System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Single,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Gets bezier curve points from cubic spline curve defined by two points and two second derivative y2 at this points.
            </summary>
            <param name="point1"> Start  of spline curve </param>
            <param name="point2"> End  of spline curve</param>
            <param name="y2_1"> Second y derivative x at start point </param>
            <param name="y2_2"> Second y derivative x at end point </param>
            <param name="p0"> First Bezier curve point </param>
            <param name="p1"> Second Bezier curve point </param>
            <param name="p2"> Third Bezier curve point</param>
            <param name="p3"> Fourth Bezier curve point</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Draw3DLines(System.Drawing.Graphics,System.Drawing.PointF[],System.Drawing.SizeF,Syncfusion.Drawing.BrushInfo,System.Drawing.Pen,System.Drawing.Color[])">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="points"></param>
            <param name="offset"></param>
            <param name="brush"></param>
            <param name="pen"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Draw3DLines(System.Drawing.Graphics,System.Drawing.PointF[],System.Drawing.SizeF,Syncfusion.Drawing.BrushInfo,System.Drawing.Pen)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="points"></param>
            <param name="offset"></param>
            <param name="brush"></param>
            <param name="pen"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.CalculateStepPointsForSeries3D(System.Drawing.PointF[]@)">
            <summary>
            Calculates steppoints offsets in derived classes to draw correctly series with close or same values.
            Method is needed only in cases when series are rendered in 3D mode.
            This method fixes problem with overlapped series.
            </summary>
            <param name="stepPoints"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.CalculateStepPointsForSeries3D(System.Drawing.PointF[]@,System.Drawing.SizeF)">
            <summary>
            Calculates steppoints offsets in derived classes to draw correctly series with close or same values.
            Method is needed only in cases when series are rendered in 3D mode.
            This method fixes problem with overlapped series.
            </summary>
            <param name="stepPoints"></param>
            <param name="offset"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Draw3DRectangle(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.SizeF,Syncfusion.Drawing.BrushInfo,System.Drawing.Pen)">
            <summary>
            Helper method to render a 3D rectangle.
            </summary>
            <param name="g">The graphics object to use.</param>
            <param name="rc">The rectangle to draw.</param>
            <param name="offset">The Offset in 3D.</param>
            <param name="brush">The brush to be used for filling the rectangle sides.</param>
            <param name="pen">The pen to be used for drawing the rectangle sides.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.DrawCircle(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Brush,System.Drawing.Pen)">
            <summary>
            Helper method to render a circle. Delegates to the <see cref="T:Syncfusion.Windows.Forms.Chart.RenderingHelper"/> class.
            </summary>
            <param name="g">The graphics object to use.</param>
            <param name="bounds">The bounds to be used when rendering the shape.</param>
            <param name="brush">The brush to be used for filling the circle.</param>
            <param name="pen">The pen to be used for drawing the circle.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.DrawCross(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Brush)">
            <summary>
            Renders a cross. Delegates to the <see cref="T:Syncfusion.Windows.Forms.Chart.RenderingHelper"/> class.
            </summary>
            <param name="g">The graphics object to use.</param>
            <param name="bounds">The bounds to be used when rendering the shape.</param>
            <param name="brush">The brush to be used for filling the cross.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.DrawDiamond(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Brush,System.Drawing.Pen)">
            <summary>
            Renders a diamond. Delegates to the <see cref="T:Syncfusion.Windows.Forms.Chart.RenderingHelper"/> class.
            </summary>
            <param name="g">The graphics object to use.</param>
            <param name="bounds">The bounds to be used when rendering the shape.</param>
            <param name="brush">The brush to be used for filling the interior of the diamond.</param>
            <param name="pen">The pen to be used for stroking the diamond.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.DrawHexagon(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Brush,System.Drawing.Pen)">
            <summary>
            Renders a hexagon. Delegates to the <see cref="T:Syncfusion.Windows.Forms.Chart.RenderingHelper"/> class.
            </summary>
            <param name="g">The graphics object to use.</param>
            <param name="bounds">The bounds to be used when rendering the shape.</param>
            <param name="brush">The brush to be used for filling the interior of the shape.</param>
            <param name="pen">The pen to be used for stroking the hexagon.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.DrawImage(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Image)">
            <summary>
            Renders an image. Delegates to the <see cref="T:Syncfusion.Windows.Forms.Chart.RenderingHelper"/> class.
            </summary>
            <param name="g">The graphics object to use.</param>
            <param name="bounds">The bounds to be used when rendering the image.</param>
            <param name="image">Image to render.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.DrawInvertedTriangle(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Brush,System.Drawing.Pen)">
            <summary>
            Renders an inverted triangle. Delegates to the <see cref="T:Syncfusion.Windows.Forms.Chart.RenderingHelper"/> class.
            </summary>
            <param name="g">The graphics object to use.</param>
            <param name="bounds">The bounds to be used when rendering the shape.</param>
            <param name="brush">The brush to be used for filling the interior of the rendered triangle.</param>
            <param name="pen">The pen to be used for stroking the triangle.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.DrawMarker(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartMarker,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws a marker. Delegates to the <see cref="T:Syncfusion.Windows.Forms.Chart.RenderingHelper"/> class.
            </summary>
            <param name="g">The graphics object to use.</param>
            <param name="marker">Object with data on the marker. Please refer to the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartMarker"/> class.</param>
            <param name="p2">The start point of the marker.</param>
            <param name="p1">The end point of the marker.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.DrawPentagon(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Brush,System.Drawing.Pen)">
            <summary>
            Renders a pentagon. Delegates to the <see cref="T:Syncfusion.Windows.Forms.Chart.RenderingHelper"/> class.
            </summary>
            <param name="g">The graphics object to use.</param>
            <param name="bounds">The bounds to be used when rendering the shape.</param>
            <param name="brush">The brush to be used for filling the interior of the rendered pentagon.</param>
            <param name="pen">The pen to use for stroking the pentagon.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.DrawPointSymbol(System.Drawing.Graphics,System.Int32)">
            <summary>
            Renders the symbol that is associated with a point. Delegates to the <see cref="T:Syncfusion.Windows.Forms.Chart.RenderingHelper"/> class.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/>
            </summary>
            <param name="g">The graphics object to use.</param>
            <param name="index">The index of the associated point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.DrawPointSymbol(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Drawing.PointF,System.Boolean)">
            <summary>
            Renders the symbol that is associated with a point. Delegates to the <see cref="T:Syncfusion.Windows.Forms.Chart.RenderingHelper"/> class.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/>
            </summary>
            <param name="g">The graphics object to use.</param>
            <param name="style">The style to use.</param>
            <param name="pt">Anchor point.</param>
            <param name="drawMarker">Indicates if a marker should be drawn.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.DrawRelatedPointSymbol(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartRelatedPointSymbolInfo,Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo,System.Windows.Forms.ImageList,System.Drawing.PointF)">
            <summary>
            Renders symbols used by charts such as the Gantt chart to depict points that are related. Delegates to the
            <see cref="T:Syncfusion.Windows.Forms.Chart.RenderingHelper"/> class.
            </summary>
            <param name="g">The graphics object to use.</param>
            <param name="symbol">The symbol to render.</param>
            <param name="border">Information on the line to be rendered.</param>
            <param name="imgList">ImageList in context from the associated style.</param>
            <param name="pt">Anchor point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.DrawSquare(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Brush,System.Drawing.Pen)">
            <summary>
            Renders a square. Delegates to the <see cref="T:Syncfusion.Windows.Forms.Chart.RenderingHelper"/> class.
            </summary>
            <param name="g">The graphics object to use.</param>
            <param name="bounds">The bounds to be used when rendering the shape.</param>
            <param name="brush">The brush to be used for filling the interior of the rendered square.</param>
            <param name="pen">The pen to use for stroking the square.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.DrawTriangle(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Brush,System.Drawing.Pen)">
            <summary>
            Renders a triangle. Delegates to the <see cref="T:Syncfusion.Windows.Forms.Chart.RenderingHelper"/> class.
            </summary>
            <param name="g">The graphics object to use.</param>
            <param name="bounds">The bounds to be used when rendering the shape.</param>
            <param name="brush">The brush to be used for filling the interior of the rendered triangle.</param>
            <param name="pen">The pen to use for stroking the triangle.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.AddSymbolRegion(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetBrush(System.Int32)">
            <summary>
            Brush information is retrieved from the style associated with the index of the point to be rendered.
            It is then changed for special cases such as when automatic highlighting is enabled.
            </summary>
            <param name="i">Index of the point for which the brush information is required.</param>
            <returns>Brush information to be used for filling elements displayed at this index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetLowerAnchorPointValue(System.Int32)">
            <summary>
            Calculates the point that is considered to be the low anchor point of a series. This
            value is used when rendering text below chart point elements.
            </summary>
            <param name="index">Index of the point for which the value is requested.</param>
            <returns>Calculated value to be used as the base anchor point.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetPointFromIndex(System.Int32,System.Int32)">
            <summary>
            Given a point index returns the point to be plotted on the chart.
            </summary>
            <param name="i">X Index</param>
            <param name="j">Y Index</param>
            <returns>Point to be plotted</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetPointFromIndex(System.Int32)">
            <summary>
            Given a point index returns the point to be plotted on the chart.
            </summary>
            <param name="i">X index. Y Index is taken as 0.</param>
            <returns>Point to be plotted.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetRegionFromCircle(System.Drawing.PointF,System.Single)">
            <summary>
            This method is called by several derived renderers to create a region from a 'Hit Test' circle. By overriding this
            method you can expand, contract or otherwise change this region.
            </summary>
            <param name="center">The anchor point.</param>
            <param name="radius">The radius of the circle to be used as the base for the region.</param>
            <returns>Region object that is commonly used for hit testing for display of tooltips and such.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetSideBySideInfo">
            <summary>
            Within a plot interval this method calculates and returns the offset of the currently rendered series
            from the edge of the interval.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetSideBySideInfo(System.Int32)">
            <summary>
            Within a plot interval this method calculates and returns the offset of the currently rendered series
            from the edge of the interval.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetSideBySideIntervalInfo">
            <summary>
            Within a plot interval this method calculates and returns the interval.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetStackInfo(System.Int32)">
            <summary>
            This method is used when series are rendered stacked. The value returned is a cummulative value of
            Y from all series that are below the series currently being rendered.
            </summary>
            <param name="i"></param>
            <returns>Value that gives the position from which this series should be rendered.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetStackInfo(System.Int32,System.Int32)">
            <summary>
            This method is used when series are rendered stacked. The value returned is a cummulative value of
            Y from all series that are below the series currently being rendered.
            </summary>
            <param name="i"></param>
            <param name="indexSeries"></param>
            <returns>Value that gives the position from which this series should be rendered.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetStyleAt(System.Int32)">
            <summary>
            Delegates to <see cref="M:Syncfusion.Windows.Forms.Chart.ChartSeries.GetOfflineStyle"/> to return the style associated with this index.
            You can use this override to specify additional style attributes on a renderer basis.
            </summary>
            <param name="index">Index of the point for which the style is required.</param>
            <returns>Offline composed copy of the style associated with the index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetSymbolPoint(System.Int32)">
            <summary>
            Returns the anchor point at which the symbol associated with an index is to be
            displayed.
            </summary>
            <param name="index">Index of the point for which the value is requested.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetXFromCoordinate(System.Double)">
            <summary>
            Given a X coordinate value, returns the display value.
            </summary>
            <param name="x"></param>
            <returns>Display value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetXFromCoordinateInverted(System.Double)">
            <summary>
            Given a Y coordinate value when inverted, returns the display value.
            </summary>
            <param name="y"></param>
            <returns>Display value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetXFromIndex(System.Int32,System.Int32)">
            <summary>
            Given a point index returns the X value to be plotted on the chart.
            </summary>
            <param name="i">X index</param>
            <param name="j">Y index</param>
            <returns>X value to be plotted.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetXFromIndex(System.Int32,System.Int32,System.Int32)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetYFromCoordinate(System.Double)">
            <summary>
            Given a Y coordinate value, returns the display value.
            </summary>
            <param name="y"></param>
            <returns>Display value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetYFromCoordinateInverted(System.Double)">
            <summary>
            Given a X coordinate value, returns the display value.
            </summary>
            <param name="x"></param>
            <returns>Display value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetYFromIndex(System.Int32,System.Int32)">
            <summary>
            Given a point index returns the Y value to be plotted on the chart.
            </summary>
            <param name="i">X index</param>
            <param name="j">Y index</param>
            <returns>Y value to be plotted</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetYFromIndex(System.Int32,System.Int32,System.Int32)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.DrawText(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Drawing.PointF,System.Drawing.Size,System.Int32)">
            <summary>
            Renders text. Performs positioning and delegates to the <see cref="T:Syncfusion.Windows.Forms.Chart.RenderingHelper"/> class.
            </summary>
            <param name="g">The graphics object to use.</param>
            <param name="style"></param>
            <param name="p">Point to use as the anchor.</param>
            <param name="sz">The display size of the string.</param>
            <param name="index">The index of the associated point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.RenderAdornments(System.Drawing.Graphics)">
            <summary>
            Renders elements such as Text and Point Symbols.
            </summary>
            <param name="g">The graphics object to use.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.SetBoundsAndRange(Syncfusion.Windows.Forms.Chart.IChartAreaHost,System.Drawing.RectangleF,Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
            
            </summary>
            <param name="chart"></param>
            <param name="bounds"></param>
            <param name="xAxis"></param>
            <param name="yAxis"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetYDelta(System.Double)">
            <summary>
            
            </summary>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetXDelta(System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Bounds">
            <summary>
            The bounds that this renderer operates in.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Chart">
            <summary>
            Reference to the <see cref="T:Syncfusion.Windows.Forms.Chart.IChartAreaHost"/> instance that uses this instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartArea">
            <summary>
            Reference to the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartArea"/> instance that uses this instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.CustomOriginX">
            <summary>
            X coordinate of the origin. This property will return the correct coordinate even if the X axis has a custom
            origin.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.CustomOriginY">
            <summary>
            Y coordinate of the origin. This property will return the correct coordinate even if the Y axis has a custom
            origin.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.IgnoreSeriesInversion">
            <summary>
            This settings allows chart types that are normally not rendered inverted to be combined with those that are
            normally rendered inverted. For example Bar charts are rendered inverted. The Bubble chart can be combined with
            Bar charts because it sets IgnoreSeriesInversion to true. When this property is set to true the renderer will ignore
            the inversion setting on the series being rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.IntervalSpace">
            <summary>
            Computes and returns the space occupied by each interval on the series being rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.OriginLocation">
            <summary>
            The location of the origin as used for rendering.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.OriginXLocation">
            <summary>
            The X coordinate of location of the origin as used for rendering.
            This method gives this coordinate with double accuracy. It was introdused for 
            fixing nugs with column jumping...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.XAxis">
            <summary>
            The axis object that the current renderer is tied to.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartAxis"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.YAxis">
            <summary>
            The axis object that the current renderer is tied to.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartAxis"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.YValuesPoints">
            <summary>
            YValuesPoints
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.DividedIntervalSpace">
            <summary>
            Calculates and returns the number of display units that are used per logical(value) unit.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.DividedAndMultipliedIntervalSpace">
            <summary>
            Calculates and returns the number of display units that are used for determining column width and bar height.
            This method is used during determining the width and height of colimns and bars.
            It calculates the correct width of columns when the axis X has DateTime values type and this range is not indexed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRenderer.Render(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRenderer.OnOneRender(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="g"></param>    
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRenderer.SideNearSideRender(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.LineRenderer">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.LineRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.LineRenderer.Render(System.Drawing.Graphics)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.LineRenderer.Render(System.Drawing.Graphics,System.Int32,System.Int32)">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.ChartPointAndFigureRenderer">
            <summary>
            Summary description for ChartPointAndFigureRenderer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ChartPointAndFigureRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            
            </summary>
            <param name="?"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ChartPointAndFigureRenderer.Render(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ChartPointAndFigureRenderer.GetRectangleF(Syncfusion.Windows.Forms.Chart.Renderers.ChartPointAndFigureRenderer.PNFColumn,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="column"></param>
            <param name="offsetX"></param>
            <param name="offsetY"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ChartPointAndFigureRenderer.DrawPointO(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.RectangleF)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="pen"></param>
            <param name="rect"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ChartPointAndFigureRenderer.DrawFigureX(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.RectangleF)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="pen"></param>
            <param name="rect"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.ChartPointAndFigureRenderer.PNFColumn">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.RenkoRenderer">
            <summary>
            Summary description for ChartRenkoRenderer.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.ChartThreeLineBreak">
            <summary>
            Summary description for ChartThreeLineBreak.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ChartThreeLineBreak.Render(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.ChartThreeLineBreak.TLBRectangle">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ChartThreeLineBreak.TLBRectangle.#ctor(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.ChartThreeLineBreak.TLBRectangle.MinY">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.ChartThreeLineBreak.TLBRectangle.MaxY">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.ChartThreeLineBreak.TLBRectangle.NegativeValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.ChartThreeLineBreak.TLBRectangle.RectangleF">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.ChartThreeLineBreak.TLBRectangle.FirstPoint">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.ChartThreeLineBreak.TLBRectangle.SecondPoint">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.ChartThreeLineBreak.TLBRectangle.Empty">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Scrolling.ChartHScrollBar">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar">
            <summary>
            This interface codifies interaction of scrollbars with the <see cref="P:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.ChartArea"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.SetOtherVisible(System.Boolean)">
            <summary>
                Informs this scroll bar that its complementary scroll bar's visibilty has changed.
            </summary>
            <param name="b" type="bool">
                <para>
                Visibility flag.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.SetPosition(System.Drawing.Rectangle)">
            <summary>
                Sets the position of this scroll bar if the scroll bar is contained within the chart.
            </summary>
            <param name="rect" type="System.Drawing.Rectangle">
                <para>
                Bounding rectangle.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.ResetScrollBar">
            <summary>
            Resets the scroll bar.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.ZoomButtonClicked">
            <summary>
                Event raised when the zoom buttom that is associated with this scroll bar is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.Dimension">
            <summary>
            The dimension of the scroll bar is the width for vertical scroll bars and the height for horizontal ones.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.LargeChange">
            <summary>
             Scroll bar large change value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.Maximum">
            <summary>
             Scroll bar maximum value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.Minimum">
            <summary>
             Scroll bar minimum value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.ScrollBar">
            <summary>
             Windows scrollbar instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.ShouldPosition">
            <summary>
             Indicates if the chart should attempt to position this scrollbar.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.SmallChange">
            <summary>
             Scroll bar small change value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.Value">
            <summary>
             Scroll bar current value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.Visible">
            <summary>
             Scroll bar visibility flag.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.ChartArea">
            <summary>
            For storing chart area reference.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.components">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.fsb">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.zoomButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.otherVisible">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.visibleInst">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.chartArea">
            <summary>
            Chart Area to dock to.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.SetOtherVisible(System.Boolean)">
            <summary>
            
            </summary>
            <param name="b"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.SetPosition(System.Drawing.Rectangle)">
            <summary>
            
            </summary>
            <param name="rect"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.CreateScrollBar">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.SizeZoomButton">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.SizeScrollBar">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.ResetScrollBar">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.OnZoomButtonClicked(Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBarZoomButtonClickedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.InitializeScrollBar">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.InitializeZoomButton">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.zoomButton_Click(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.LargeChange">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.Maximum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.Minimum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.ScrollBar">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.ShouldPosition">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.SmallChange">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.Value">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.Visible">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.ChartArea">
            <summary>
            
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.ZoomButtonClicked">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.Dimension">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartHScrollBar.#ctor">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartHScrollBar.CreateScrollBar">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartHScrollBar.SizeZoomButton">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartHScrollBar.SizeScrollBar">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartHScrollBar.ResetScrollBar">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.ChartHScrollBar.Dimension">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Scrolling.ChartVScrollBar">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartVScrollBar.#ctor">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartVScrollBar.CreateScrollBar">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartVScrollBar.SizeZoomButton">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartVScrollBar.SizeScrollBar">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartVScrollBar.ResetScrollBar">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.ChartVScrollBar.Dimension">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Scrolling.ChartZoomButton">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartZoomButton.#ctor">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartZoomButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBarValueChangedEventArgs">
            <summary>
            Placeholder for additional information. Currently does not hold any additional information.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBarValueChangedEventArgs.Empty">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBarValueChangedEventHandler">
            <summary>
                Delegate used when the chart scroll bar value changes.
                <seealso cref="T:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar"/>
            </summary>
            <param name="sender" type="object">
                <para>
                Sender.
                </para>
            </param>
            <param name="args" type="Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBarValueChangedEventArgs">
                <para>
                Argument.
                </para>
            </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBarZoomButtonClickedEventArgs">
            <summary>
            Placeholder for additional information. Currently does not hold any additional information.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBarZoomButtonClickedEventArgs.Empty">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBarZoomButtonClickedEventHandler">
            <summary>
                Delegate used when the zoom button associated with a chart scroll bar is clicked.
                <seealso cref="T:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar"/>
            </summary>
            <param name="sender" type="object">
                <para>
                Sender.
                </para>
            </param>
            <param name="args" type="Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBarZoomButtonClickedEventArgs">
                <para>
                Argument.
                </para>
            </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBaseStyleIdentity">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseStyleIdentity.Dispose">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseStyleIdentity.GetBaseStyles(Syncfusion.Styles.IStyleInfo)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseStyleIdentity.ToString">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseStyleIdentity.OnStyleChanged(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBaseStyleInfo">
            <summary>
            BaseStyles are styles that are used to uniformly affect an arbitrary set of styles that they are applied to.
            BaseStyles are applied to a style by associating them with a style using its BaseStyle property (<see cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.BaseStyle"/>).
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo">
            <summary>
            Contains appearance information for each ChartPoint <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Empty">
            <summary>
            An empty style object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.#ctor">
            <summary>
            Initializes a new style object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.#ctor(Syncfusion.Windows.Forms.Chart.ChartStyleInfo)">
            <summary>
            Initializes a new style object and copies all data from an existing style object.
            </summary>
            <param name="style">The style object that contains the original data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.#ctor(Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore)">
            <summary>
            Initializes a new style object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore"/>.
            </summary>
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/>.
            All changes in this style object will saved in the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore"/> object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.#ctor(Syncfusion.Styles.StyleInfoIdentityBase)">
            <summary>
            Initializes a new style object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.#ctor(Syncfusion.Styles.StyleInfoIdentityBase,Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore)">
            <summary>
            Initializes a new style object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/>.
            </param>
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/>.
            All changes in this style object will saved in the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.CreateSubObjectIdentity(Syncfusion.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.OnStyleChanged(Syncfusion.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.GetDefaultStyle">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetTextColor">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetBaseStyle">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetFont">
            <summary>
            Resets font information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetBorder">
            <summary>
            Resets line information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetInterior">
            <summary>
            Resets interior information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetText">
            <summary>
            Resets text information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetToolTip">
            <summary>
            Resets ToolTip information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetToolTipFormat">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetImageList">
            <summary>
            Resets ImageList information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetImageIndex">
            <summary>
            Resets image index information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetSymbol">
            <summary>
            Resets symbol information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetSystem">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetName">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetTextOrientation">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetDisplayShadow">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetShadowOffset">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetShadowInterior">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetHighlightOnMouseOver">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetHihglightInterior">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetHitTestRadius">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetLabel">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetTextFormat">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetDisplayText">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetPointWidth">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetTextOffset">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetElementBorders">
            <summary>
            Resets the borders information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetRelatedPoints">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.NodeIdentity">
            <summary>
            Holds identity information such as information to access the model for the current <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Store">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore"/> object that holds all the data for this style object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Default">
            <summary>
            Returns a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> with default settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.TextColor">
            <summary>
            The color of the text that is rendered at a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasTextColor">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.BaseStyle">
            <summary>
            The base style with default settings for appearance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasBaseStyle">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.GdipFont">
            <summary>
            Creates or returns a cached GDI+ font generated from font information of
            the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Font"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Font">
            <summary>
            The font used for drawing text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasFont">
            <summary>
            Determines if font information has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.GdipPen">
            <summary>
            Creates or returns a cached GDI+ font generated from font information of
            the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Font"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Border">
            <summary>
            Information used for drawing lines.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasBorder">
            <summary>
            Determines if line information has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Interior">
            <summary>
            Lets you specify a solid backcolor, gradient, or pattern style with both back and forecolor for a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>'s background.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasInterior">
            <summary>
            Determines if interior information has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.CustomProperties">
            <summary>
            Returns a collection of custom property objects that have
            at least one initialized value. The primary purpose of this
            collection is to support design-time code serialization of
            custom properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Text">
            <summary>
            The text associated with a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>. This text will be rendered at a position near the point if
            <see cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.DisplayText"/> is set to True.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasText">
            <summary>
            Determines if text information has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ToolTip">
            <summary>
            Specifies the ToolTip associated with the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasToolTip">
            <summary>
            Determines if ToolTip information has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ToolTipFormat">
            <summary>
            Formatting that is to be applied to values that are displayed as ToolTips.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasToolTipFormat">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ImageList">
            <summary>
            The imagelist associated with this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>. This property is used in conjunction with the
            <see cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ImageIndex"/> property to display images associated with this point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasImageList">
            <summary>
            Determines if ImageList information has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ImageIndex">
            <summary>
            Specifies the image index from the associated <see cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ImageList"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasImageIndex">
            <summary>
            Determines if image index information has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Symbol">
            <summary>
            Specifies the attributes of the symbol to be displayed at this point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasSymbol">
            <summary>
            Determines if symbol information has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.TextOrientation">
            <summary>
            The orientation of text that is displayed at this point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasTextOrientation">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.DisplayShadow">
            <summary>
            Specifies if a shadow should be rendered when this point is displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasDisplayShadow">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ShadowOffset">
            <summary>
            Specifies the offset to be used when a shadow is rendered for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasShadowOffset">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ShadowInterior">
            <summary>
            The interior attributes of the shadow displayed underneath this point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasShadowInterior">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HighlightOnMouseOver">
            <summary>
            Specifies if this point should be highlighted when the mouse moves over it.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasHighlightOnMouseOver">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HighlightInterior">
            <summary>
            The attributes of the brush that is used to highlight this point when the mouse moves over it and <see cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasHighlightOnMouseOver"/>
            is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasHighlightInterior">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HitTestRadius">
            <summary>
            Controls the circle around that this point that would be considered as being within the bounds of this
            point for hit-testing purposes.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasHitTestRadius">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Label">
            <summary>
            Label value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasLabel">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.TextFormat">
            <summary>
            Formatting that is to be applied to values that are displayed as text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasTextFormat">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.DisplayText">
            <summary>
            Specifies if text should be displayed at this point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasDisplayText">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.PointWidth">
            <summary>
            Controls the width of this point relative to the total width available. Is specially useful with Gantt charts to render
            series that overlap.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasPointWidth">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.TextOffset">
            <summary>
            The offset of text from the postion of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasTextOffset">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ElementBorders">
            <summary>
            Border settings for elements associated with the chart point. You can specify the inner and outer border. Is currently used
            only by symbols rendered by the ChartPoint.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasElementBorders">
            <summary>
            Determines if border information has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.RelatedPoints">
            <summary>
            The offset of text from the postion of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasRelatedPoints">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseStyleInfo.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="name" type="string">
                <para>
                The name of this base style.
                </para>
            </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBaseStyleInfo.System">
            <summary>
            Indicates if this base style is a system registered base style. System registered base styles are
            preregistered by the charting style system and are needed for the proper functioning of Essential
            Chart.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBaseStyleInfo.HasSystem">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBaseStyleInfo.Name">
            <summary>
            The name of this base style object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBaseStyleInfo.HasName">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBaseStyleInfo.BaseStylesMap">
            <summary>
            Base styles are registered with and managed by a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap"/> object at the chart level.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBorderStyle">
            <summary>
            	Specifies the style of a specific point border in the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorder"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderStyle.NotSet">
            <summary>
            	No edge style is set.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderStyle.None">
            <summary>
            	No border is drawn.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderStyle.Dashed">
            <summary>
            	Border style that consists of a dotted line: ...........
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderStyle.Dotted">
            <summary>
            	Border style that consists of a dash and a dot: _._._.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderStyle.DashDot">
            <summary>
            	Border style that consists of a series of dashed lines: --------
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderStyle.DashDotDot">
            <summary>
            	Border style that consists oof a dash and two dots: _.._.._..
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderStyle.Solid">
            <summary>
            	Border style that consists of a solid line: ___________
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderStyle.Standard">
            <summary>
            	Use border as specified in the Chart.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBorderWeight">
            <summary>
            	Specifies the weight of a specific point border in the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorder"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderWeight.Thin">
            <summary>
            	A thin line with 1 pixel.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderWeight.Medium">
            <summary>
            	A thin line with dots.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderWeight.Thick">
            <summary>
            	A thick line with 4 pixels.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBorder">
            <summary>
            The ChartBorder class holds formatting information for the border associated with a point.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfo"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorder.Empty">
            <summary>
            An empty <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorder"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.Clone">
            <summary>
            Creates an exact copy of this object.
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorder"/> object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.#ctor">
            <overload>
            	Initializes a new instance of the ChartBorder class.
            </overload>
            <summary>
            	Initializes a new instance of the ChartBorder class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.#ctor(Syncfusion.Windows.Forms.Chart.ChartBorderStyle)">
            <summary>
            	Initializes a new instance of the ChartBorder class with the specified <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorderStyle"/>.
            </summary>
            <param name="style">
            	The line style to be be applied to the border.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.#ctor(Syncfusion.Windows.Forms.Chart.ChartBorderStyle,System.Drawing.Color)">
            <summary>
            	Initializes a new instance of the ChartBorder class with the
            	specified <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorderStyle"/> and
            	<see cref="T:System.Drawing.Color"/>.
            </summary>
            <param name="style">
            	A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorderStyle"/> to be be applied to the specific border.
            </param>
            <param name="color">
            	A <see cref="T:System.Drawing.Color"/> specifying the color of the border.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.#ctor(Syncfusion.Windows.Forms.Chart.ChartBorderStyle,System.Drawing.Color,Syncfusion.Windows.Forms.Chart.ChartBorderWeight)">
            <summary>
            	Initializes a new instance of the ChartBorder class with the
            	specified <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorderStyle"/> and
            	<see cref="T:System.Drawing.Color"/>.
            </summary>
            <param name="style">
            	A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorderStyle"/> to be be applied to the specific border.
            </param>
            <param name="color">
            	A <see cref="T:System.Drawing.Color"/> specifying the color of the border.
            </param>
            <param name="weight">
            	A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorderWeight"/> specifying the thickness of the border.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorder"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorder"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.MakeBlackAndWhite">
            <summary>
            Returns a copy of this border object replacing the color with <see cref="P:System.Drawing.Color.Black"/>.
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorder"/> with black color.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.ToString">
            <overload>
            	Returns a compact string representation of the ChartBorder.
            	All information in ChartBorder will be encoded.
            </overload>
            <summary>
            	Returns a compact string representation of the ChartBorder.
            	All information in ChartBorder will be encoded.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.ToString(System.String)">
            <summary>
            	Returns a compact string representation of the ChartBorder.
            	All information in ChartBorder will be encoded.
            </summary>
            <param name="format">"compact" for compact text; default is full text version.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.Equals(System.Object)">
            <summary>
            	Return True if the ChartBorder object passed is equal.
            </summary>
            <param name="o">The object to compare to.</param>
            <returns>
            	bool
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.op_Equality(Syncfusion.Windows.Forms.Chart.ChartBorder,Syncfusion.Windows.Forms.Chart.ChartBorder)">
            <summary cref="M:Syncfusion.Windows.Forms.Chart.ChartBorder.Equals(System.Object)">
            	The basic == operator.
            </summary>
            <param name="lhs">The left-hand side of the operator.</param>
            <param name="rhs">The right-hand side of the operator.</param>
            <returns>
            	bool
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.op_Inequality(Syncfusion.Windows.Forms.Chart.ChartBorder,Syncfusion.Windows.Forms.Chart.ChartBorder)">
            <summary cref="M:Syncfusion.Windows.Forms.Chart.ChartBorder.Equals(System.Object)">
            	The basic != operator.
            </summary>
            <param name="lhs">The left-hand side of the operator.</param>
            <param name="rhs">The right-hand side of the operator.</param>
            <returns>
            	bool
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.Compare(Syncfusion.Windows.Forms.Chart.ChartBorder,Syncfusion.Windows.Forms.Chart.ChartBorder)">
            <summary cref="M:Syncfusion.Windows.Forms.Chart.ChartBorder.Equals(System.Object)">
            	The basic == operator.
            </summary>
            <param name="lhs">The left-hand side of the operator.</param>
            <param name="rhs">The right-hand side of the operator.</param>
            <returns>
            	bool
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.GetHashCode">
            <summary>
            	Returns the hash code for the current ChartBorder instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBorder.IsEmpty">
            <summary>
            	Specifies whether this ChartBorder is uninitialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBorder.Style">
            <summary>
                Indicates what type of border line this border has. This value
                comes from the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorderStyle"/> enumeration.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBorder.Weight">
            <summary>
                Indicates the weight of the border the cell has.  This value
                comes from the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorderWeight"/>  enumeration.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBorder.Color">
            <summary>
                Indicates the color to be used for the cell border. This value
                comes from the <see cref="T:System.Drawing.Color"/>  enumeration.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBorder.Width">
            <summary>
                Indicates the width in pixels for the cell border.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfoStore">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBordersInfoStore.OuterProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBordersInfoStore.InnerProperty">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfoStore.#ctor">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfoStore.Clone">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBordersInfoStore.StaticDataStore">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfo">
            <summary>
            Provides a <see cref="T:Syncfusion.Styles.StyleInfoSubObjectBase"/> object for borders in a symbol. The inner / outer border of
            the symbol can be configured individually with a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorder"/> value. Borders that
            have not been initialized will inherit default values from a base style.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.#ctor">
            <overload>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfo"/> object.
            </overload>
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfo"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfo"/>  object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity,Syncfusion.Windows.Forms.Chart.ChartBordersInfoStore)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfo"/> object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfo"/>.
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfo"/>.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfoStore"/> object.</param>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.MakeCopy(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.GetDefaultStyle">
            <summary>
            Returns <see cref="P:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.Default"/>.
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfo"/> object with default values.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.ResetAll">
            <summary>
            Resets the inner and outer border with one command.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.ResetInner">
            <summary>
            Resets the inner border.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.ResetOuter">
            <summary>
            Resets the outer border.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.Default">
            <summary>
            Returns a default <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfo"/> to be used with a default style.
            </summary>
            <remarks>
            The <see cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Default"/> of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> class
            will return the default border info that this method generates through its
            overridden version of <see cref="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.GetDefaultStyle"/>.
             </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.All">
            <summary>
            Allows you to set the inner and outer border with one command.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.Inner">
            <summary>
            The inner border
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.HasInner">
            <summary>
            Determines if the inner border has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.Outer">
            <summary>
            The outer border.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore">
            <summary>
            Implements the data store for the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object.
            </summary>
            <seealso cref="T:Syncfusion.Styles.StyleInfoStore"/>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.FacenameProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Facename"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.SizeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Size"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.BoldProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Bold"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.ItalicProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Italic"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.UnderlineProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Underline"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.StrikeoutProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Strikeout"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.OrientationProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Orientation"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.UnitProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Unit"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.FontFamilyTemplateProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.FontFamilyTemplate"/> property. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.#ctor">
            <overload>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore"/>.
            </overload>
            <summary>
            Initializes an empty <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.Clone">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.StaticDataStore">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo">
            <summary>
            Provides a <see cref="T:Syncfusion.Styles.StyleInfoSubObjectBase"/> object for font settings associated with a point.
            Each font property of the point can be configured individually. <para/>
            Font properties that have not been initialized will inherit default
            values from a base style.
            </summary>
            <example>
            The following code changes font information for a point:
            <code lang="C#">
            
                       this.chart.Series[0].Styles[0].Font.Facename = "Arial";
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Dispose">
            <summary>
            Releases the all resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.#ctor">
            <overload>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/>.
            </overload>
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObjectIdentity"/> that holds the indentity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity,Syncfusion.Windows.Forms.Chart.ChartFontInfoStore)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/>.
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/>.
            All changes in this style object will saved in the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore"/> object.</param>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.MakeCopy(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.SizeInWorldUnit(System.Drawing.Font)">
            <summary>
            Gets the em-size of the specified font object in world-units.
            </summary>
            <param name="font">The font object.</param>
            <returns>The size in world units.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.OnStyleChanged(Syncfusion.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.GetDefaultStyle">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ResetFacename">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Facename"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ShouldSerializeFacename">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ResetSize">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Size"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ShouldSerializeSize">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ResetOrientation">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Orientation"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ShouldSerializeOrientation">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ResetBold">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Bold"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ShouldSerializeBold">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ResetItalic">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Italic"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ShouldSerializeItalic">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ResetUnderline">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Underline"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ShouldSerializeUnderline">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ResetStrikeout">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Strikeout"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ShouldSerializeStrikeout">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ResetUnit">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Unit"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ShouldSerializeUnit">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ResetFontFamilyTemplate">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.FontFamilyTemplate"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ShouldSerializeFontFamilyTemplate">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Default">
            <summary>
            Returns a default <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> to be used with a default style.
            </summary>
            <remarks>
            The <see cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Default"/> of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> class
            will return the default border info that this method generates through its
            overridden version of <see cref="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.GetDefaultStyle"/>.
             </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.GdipFont">
            <summary>
            Creates or returns a cached GDI+ font generated from font information of
            this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.FontStyle">
            <summary>
            Specifies style information for the font.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Facename">
            <summary>
            Gets / sets the face name of this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.HasFacename">
            <summary>
            Determines if the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Facename"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Size">
            <summary>
            Gets / sets the size in pixels of this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.HasSize">
            <summary>
            Determines if the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Size"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Orientation">
            <summary>
            Gets / sets the orientation of this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.HasOrientation">
            <summary>
            Determines if the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Orientation"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Bold">
            <summary>
            Gets / sets a value that indicates whether this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object is bold.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.HasBold">
            <summary>
            Determines if the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Bold"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Italic">
            <summary>
            Gets / sets a value that indicates whether this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object is italic.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.HasItalic">
            <summary>
            Determines if the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Italic"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Underline">
            <summary>
            Gets / sets a value that indicates whether this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object is underlined.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.HasUnderline">
            <summary>
            Determines if the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Underline"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Strikeout">
            <summary>
            Gets / sets a value that indicates whether this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object
            should draw a horizontal line through the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.HasStrikeout">
            <summary>
            Determines if the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Strikeout"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Unit">
            <summary>
            Gets / sets the graphics unit of this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.HasUnit">
            <summary>
            Determines if the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Unit"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.FontFamilyTemplate">
            <summary>
            Gets / sets the font family of this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.HasFontFamilyTemplate">
            <summary>
            Determines if the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.FontFamilyTemplate"/> property has been initialized.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore">
            <summary>
            Implements the data store for the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object.
            </summary>
            <seealso cref="T:Syncfusion.Styles.StyleInfoStore"/>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore.ColorProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore.WidthProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore.AlignmentProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore.DashStyleProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore.DashPatternProperty">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore.#ctor">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore.Clone">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore.StaticDataStore">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLineInfo">
            <summary>
            Provides a <see cref="T:Syncfusion.Styles.StyleInfoSubObjectBase"/> object for border line settings associated with a point.
            Properties that have not been initialized will inherit default
            values from a base style.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.Dispose">
            <summary>
            Releases all the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.#ctor">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLineInfo"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLineInfo"/> object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLineInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity,Syncfusion.Windows.Forms.Chart.ChartLineInfoStore)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLineInfo"/> object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLineInfo"/>.
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLineInfo"/>.
            All changes in this style object will be saved in the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore"/> object.</param>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.MakeCopy(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.OnStyleChanged(Syncfusion.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.GetDefaultStyle">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.ResetColor">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.Color"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.ResetWidth">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.Width"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.ResetAlignment">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.Alignment"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.ResetDashStyle">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.DashStyle"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.ResetDashPattern">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.DashPattern"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.Default">
            <summary>
            Returns a default <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLineInfo"/> to be used with a default style.
            </summary>
            <remarks>
            The <see cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Default"/> of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> class
            will return the default line info that this method generates through its
            overridden version of <see cref="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.GetDefaultStyle"/>.
             </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.GdipPen">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.Color">
            <summary>
            Sets the color of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.HasColor">
            <summary>
            Determines if the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.Color"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.Width">
            <summary>
            Gets / sets the width in pixels of the line represented by this object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.HasWidth">
            <summary>
            Determines if the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.Width"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.Alignment">
            <summary>
            Gets / sets the pen alignment of the line represented by this object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.HasAlignment">
            <summary>
            Determines if the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.Alignment"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.DashStyle">
            <summary>
            Gets / sets the style of the line represented by this object.
            <seealso cref="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.DashStyle"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.HasDashStyle">
            <summary>
            Determines if the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.DashStyle"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.DashPattern">
            <summary>
            Gets / sets the dash pattern of the line represented by this object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.HasDashPattern">
            <summary>
            Determines if the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.DashPattern"/> property has been initialized.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointSymbolInfo">
            <summary>
               For certain chart types such as Gantt charts, it is required to have relationships between points.
               These are called 'Related Points'. This class represents symbol information that links such related points.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointSymbolInfo.#ctor(Syncfusion.Windows.Forms.Chart.ChartSymbolShape,System.Int32,System.Drawing.Color,System.Drawing.Size)">
            <summary>
            Constructor.
            </summary>
            <param name="shape" type="Syncfusion.Windows.Forms.Chart.ChartSymbolShape">
                <para>
                The shape of the symbol.
                </para>
            </param>
            <param name="imageIndex" type="int">
                <para>
                The image index associated with the symbol.
                </para>
            </param>
            <param name="color" type="System.Drawing.Color">
                <para>
                The color associated with the symbol.
                </para>
            </param>
            <param name="size" type="System.Drawing.Size">
                <para>
                The size of the symbol.
                </para>
            </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointSymbolInfo.Shape">
            <summary>
            The shape of the symbol.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointSymbolInfo.ImageIndex">
            <summary>
            The index of the image to be used by the symbol.
            <seealso cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ImageList"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointSymbolInfo.Color">
            <summary>
            The color of this symbol.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointSymbolInfo.Size">
            <summary>
            The size of this symbol.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.PointsProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.ColorProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.WidthProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.AlignmentProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.DashStyleProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.DashPatternProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.StartSymbolProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.EndSymbolProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.BorderProperty">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.#ctor">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.Clone">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.StaticDataStore">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo">
            <summary>
               For certain chart types such as Gantt charts, it is required to have relationships between points.
               These are called 'Related Points'. This class represents such related points.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Dispose">
            <summary>
            Releases all the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.#ctor">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo"/> object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity,Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo"/> object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo"/>.
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo"/>.
            All changes in this style object will saved in the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo"/> object.</param>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.MakeCopy(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.OnStyleChanged(Syncfusion.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.GetDefaultStyle">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ResetPoints">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Points"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ResetColor">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Color"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ResetWidth">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Width"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ResetAlignment">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Alignment"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ResetDashStyle">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.DashStyle"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ResetDashPattern">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.DashPattern"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ResetStartSymbol">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.StartSymbol"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ResetEndSymbol">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.EndSymbol"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ResetBorder">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Border"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Default">
            <summary>
            Returns a default <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo"/> to be used with a default style.
            </summary>
            <remarks>
            The <see cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Default"/> of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> class
            will return the default border info that this method generates through its
            overridden version of <see cref="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.GetDefaultStyle"/>.
             </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.GdipPen">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Count">
            <summary>
            Gets the number of points.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Points">
            <summary>
            Array of indices of related points.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.HasPoints">
            <summary>
            Determines if the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Points"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Color">
            <summary>
            Color to be used for any visual representation.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.HasColor">
            <summary>
            Determines if the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Color"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Width">
            <summary>
            Width to be used for any visual representation.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.HasWidth">
            <summary>
            Determines if the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Width"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Alignment">
            <summary>
            Pen alignment to be used for any visual representation.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.HasAlignment">
            <summary>
            Determines if the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Alignment"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.DashStyle">
            <summary>
            Dash style to be used for any visual representation.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.HasDashStyle">
            <summary>
            Determines if the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.DashStyle"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.DashPattern">
            <summary>
            Dash pattern to be used for any visual representation.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.HasDashPattern">
            <summary>
            Determines if the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.DashPattern"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.StartSymbol">
            <summary>
            Start symbol to be used for any visual representation linking this related point with others.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.HasStartSymbol">
            <summary>
            Determines if the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.StartSymbol"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.EndSymbol">
            <summary>
            End symbol to be used for any visual representation linking this related point with others.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.HasEndSymbol">
            <summary>
            Determines if the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.EndSymbol"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Border">
            <summary>
            Border to be used for any visual representation linking this related point with others.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.HasBorder">
            <summary>
            Determines if the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Border"/> property has been initialized.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo">
            <summary>
            This class contains border information to be used for any visual representation linking a related point with others.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo.#ctor(System.Drawing.Color,System.Single,System.Drawing.Drawing2D.PenAlignment,System.Drawing.Drawing2D.DashStyle,System.Single[])">
            <summary>
            Constructor.
            </summary>
            <param name="color" type="System.Drawing.Color">
                <para>
                Color of the border line.
                </para>
            </param>
            <param name="width" type="float">
                <para>
                Width of the line.
                </para>
            </param>
            <param name="alignment" type="System.Drawing.Drawing2D.PenAlignment">
                <para>
                Pen alignment to be used to render the line.
                </para>
            </param>
            <param name="dashStytle" type="System.Drawing.Drawing2D.DashStyle">
                <para>
                Dash style of the line.
                </para>
            </param>
            <param name="dashPattern" type="float[]">
                <para>
                Dash pattern of the line.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo.#ctor(System.Drawing.Color,System.Single)">
            <summary>
                Constructor.
            </summary>
            <param name="color" type="System.Drawing.Color">
                <para>
                Color of the line.
                </para>
            </param>
            <param name="width" type="float">
                <para>
                Width of the line.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo.#ctor(System.Drawing.Color)">
            <summary>
                Constructor.
            </summary>
            <param name="color" type="System.Drawing.Color">
                <para>
                Color of the line.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo.GdipPen">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo.Color">
            <summary>
            Color of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo.Width">
            <summary>
            Width of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo.Alignment">
            <summary>
            Pen alignment of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo.DashStyle">
            <summary>
            Dash style of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo.DashPattern">
            <summary>
            Dash pattern of the line.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IChartSeriesComposedStylesModel">
            <summary>
                This interface represents the 'composed' state of styles for a single series. When composed, styles have all their attributes
                initialized from their base styles and any other styles that form a part of their inheritance structure. Composed styles are used
                by the chart directly.
            </summary>
            <remarks>
            
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesComposedStylesModel.GetOfflineStyle">
            <summary>
                Returns an 'offline' version of the series style. Offline styles do not propagate changes made back to the data store.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesComposedStylesModel.GetOfflineStyle(System.Int32)">
            <summary>
               Returns an 'offline' version of the point style. Offline styles do not propagate changes made back to the data store.
            </summary>
            <param name="index" type="int">
                <para>
                Index of the style.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesComposedStylesModel.ResetCache">
            <summary>
                Remove any information that is cached.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesComposedStylesModel.GetBaseStyles(Syncfusion.Styles.IStyleInfo,System.Int32)">
            <summary>
                Look up base style information for any <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> object.
                <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap"/>
            </summary>
            <param name="chartStyleInfo" type="Syncfusion.Styles.IStyleInfo">
                <para>
                    The style for which base style information is to be retrieved.
                </para>
            </param>
            <param name="index" type="int">
                <para>
                    The index of the style.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesComposedStylesModel.ChangeStyle(Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Int32)">
            <summary>
              Change the style at the passed in index to be the same as the style passed in. Affects the data store.
            </summary>
            <param name="style" type="Syncfusion.Windows.Forms.Chart.ChartStyleInfo">
                <para>
                Style with information that is to be stored.
                </para>
            </param>
            <param name="index" type="int">
                <para>
                The index of the style.
                </para>
            </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartSeriesComposedStylesModel.Style">
            <summary>
             The style object that is common to the series (for which this model holds style information).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartSeriesComposedStylesModel.Item(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoIndexer">
            <summary>
            Indexer helper class to access individual point styles.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfoIndexer.Item(System.Int32)">
            <summary>
            Indexer to access individual point styles.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesModel">
            <summary>
               Represents the complete style information for a series in the chart.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesModel.GetStyleAt(System.Int32)">
            <summary>
                Style information at a given index. This is actual style information and not composed style information.
            </summary>
            <param name="index" type="int">
                <para>
                The index of the point for which style information is needed.
                </para>
            </param>
            <returns>
                Style information at the index passed in.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesModel.ChangeStyleAt(Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Int32)">
            <summary>
                Changes style information at the given index.
            </summary>
            <param name="style" type="Syncfusion.Windows.Forms.Chart.ChartStyleInfo">
                <para>
                 Style whose attributes are to be stored.
                </para>
            </param>
            <param name="index" type="int">
                <para>
                 Index where they need to be stored.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesModel.ChangeStyle(Syncfusion.Windows.Forms.Chart.ChartStyleInfo)">
            <summary>
                Changes series style information.
            </summary>
            <param name="style" type="Syncfusion.Windows.Forms.Chart.ChartStyleInfo">
                <para>
                Style whose attributes are to be stored in the series style.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesModel.GetBaseStyles(Syncfusion.Styles.IStyleInfo,System.Int32)">
            <summary>
                Access base style information for the style passed in.
            </summary>
            <param name="chartStyleInfo" type="Syncfusion.Styles.IStyleInfo">
                <para>
                 Style for which base style information is needed.
                </para>
            </param>
            <param name="index" type="int">
                <para>
                Index where the style is stored.
                </para>
            </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesModel.Style">
            <summary>
                Series style information.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesModel.ComposedStyles">
            <summary>
                Completely composed styles can be accessed using the interface returned by this property.
                Composed styles have all information initialized from base styles and any other styles along their
                inheritance hierarchy.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesModel.Changed">
            <summary>
            Event that will be raised when style information is changed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventHandler">
            <summary>
            	Delegate that is used for events that broadcast changes to <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/>.
            </summary>
            <param name="sender" type="object">
                <para>
            	Sender object.
                </para>
            </param>
            <param name="args" type="Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventArgs">
                <para>
                 Argument.
                </para>
            </param>
            <remarks>
            
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventArgs">
            <summary>
            Argument that is used in the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventHandler"/> delegate.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventArgs.InvalidIndex">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventArgs.CreateResetEventArgs">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventArgs.#ctor(Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventArgs.Type,System.Int32)">
            <summary>
                Constructor.
            </summary>
            <param name="type" type="Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventArgs.Type">
                <para>
                Type of event.
                </para>
            </param>
            <param name="xIndex" type="int">
                <para>
                Index of the changed style.
                </para>
            </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventArgs.EventType">
            <summary>
                Type of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventArgs.Index">
            <summary>
                Index of the changed style.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventArgs.Type">
            <summary>
            Types of changes.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventArgs.Type.Changed">
            <summary>
            Style has changed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventArgs.Type.Reset">
            <summary>
            Style has been reset to defaults.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomProperties">
            <summary>
            Class for holding arbitrary style information.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomProperties.style">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> that holds and
            gets the data for this custom property object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomProperties.#ctor(Syncfusion.Windows.Forms.Chart.ChartStyleInfo)">
            <summary>
            Initializes the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomPropertiesCollection"/> object
            with a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> that the properties of this
            class will belong to.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> that holds and
            gets the data for this custom property object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomProperties.#ctor">
            <summary>
            Initializes the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomPropertiesCollection"/> object
            with an empty <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> object. When you later
            set the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomProperties.StyleInfo"/> property, the changes in this object
            will be copied over to the new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomProperties.CreateStyleInfoProperty(System.Type,System.Type,System.String)">
            <overload>
            Registers a new custom property.
            </overload>&gt;
            <summary>
            Registers a new custom property.
            </summary>
            <param name="componentType">The type of your derived custom property class.</param>
            <param name="type">The type of the property.</param>
            <param name="propertyName">The name of the property. This must match a property member in your class.</param>
            <returns>A <see cref="T:Syncfusion.Styles.StyleInfoProperty"/> object that you should use for getting and setting
            values.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomProperties.CreateStyleInfoProperty(System.Type,System.String)">
            <summary>
            Registers a new custom property.
            </summary>
            <param name="componentType">The type of your derived custom property class.</param>
            <param name="propertyName">The name of the property. This must match a property member in your class.</param>
            <returns>A <see cref="T:Syncfusion.Styles.StyleInfoProperty"/> object that you should use for getting and setting
            values.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomProperties.StyleInfo">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> that holds and
            gets the data for this custom property object. When you
            set the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomProperties.StyleInfo"/> property all prior changes in this object
            will be copied over to the new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> object.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomPropertiesCollection">
            <summary>
            Implements a collection of custom property objects that have
            at least one initialized value. The primary purpose of this
            collection is to support design-time code serialization of
            custom properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomPropertiesCollection.#ctor(Syncfusion.Styles.StyleInfoBase)">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomPropertiesCollection"/> with a reference
            to the parent style object.
            </summary>
            <param name="styleInfo"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomPropertiesCollection.Add(Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomProperties)">
            <summary>
            Copies the initialized properties of the specified custom property
            to the parent style object and attaches the custom property object
            with the parent style object.
            </summary>
            <param name="value">A ChartStyleInfoCustomProperties with
            custom properties.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomPropertiesCollection.CopyTo(Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomProperties[],System.Int32)">
            <summary>
              <para>Copies the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomPropertiesCollection"/> elements to a one-dimensional <see cref="T:System.Array"/> at the specified index.</para>
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the object's from instance. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomPropertiesCollection.Count">
            <summary>
            The number of objects in this collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObject">
            <summary>
            <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObject"/> is an abstract base class for classes
            to be used as sub-objects in a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/>.
            </summary>
            <remarks>
            <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObject"/> is derived from <see cref="T:Syncfusion.Styles.StyleInfoBase"/>
            and thus provides the same easy way to provide properties that can inherit values
            from base styles at run-time.<para/>
            The differerence is that <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObject"/> supports this inheritance
            mechanism as a sub-object from a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/>. A sub-object needs to
            have knowledge about its parent object and be able to walk the base styles from the
            parent object.<para/>
            Examples for implementation of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObject"/> is the font
            class in Essential Chart.<para/>
            Programmers can derive their own style classes from <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObject"/>
            and add type-safe (and Intelli-sense)
            supported custom properties to the style class.
            <para/>
            See the overview of <see cref="T:Syncfusion.Styles.StyleInfoBase"/> for further discussion about style objects.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObject.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity,Syncfusion.Styles.StyleInfoStore)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObject"/> object and associates it with an existing <see cref="T:Syncfusion.Styles.StyleInfoStore"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Styles.StyleInfoBase"/>.
            <param name="store">A <see cref="T:Syncfusion.Styles.StyleInfoStore"/> that holds data for this object.</param>
            All changes in this style object will saved in the <see cref="T:Syncfusion.Styles.StyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObject.#ctor(Syncfusion.Styles.StyleInfoStore)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObject"/> object and associates it with an existing <see cref="T:Syncfusion.Styles.StyleInfoStore"/>.
            </summary>
            <param name="store">A <see cref="T:Syncfusion.Styles.StyleInfoStore"/> that holds data for this object.
            All changes in this style object will saved in the <see cref="T:Syncfusion.Styles.StyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObject.GetChartStyleInfo">
            <summary>
            Returns the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> this subobject belongs to.
            </summary>
            <returns>The parent style object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoIdentity.Dispose">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoIdentity.GetBaseStyles(Syncfusion.Styles.IStyleInfo)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoIdentity.ToString">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoIdentity.OnStyleChanged(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesStyleInfoIdentity.Dispose">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesStyleInfoIdentity.GetBaseStyles(Syncfusion.Styles.IStyleInfo)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesStyleInfoIdentity.ToString">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesStyleInfoIdentity.OnStyleChanged(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore.#ctor">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore.StaticDataStore">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObjectIdentity">
            <summary>
            Provides style identity information for nested objects of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObjectIdentity.#ctor(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObjectIdentity"/> object and associates it with a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/>.
            </summary>
            <param name="owner">The <see cref="T:Syncfusion.Styles.StyleInfoBase"/> that owns this subobject.</param>
            <param name="sip">The <see cref="T:Syncfusion.Styles.StyleInfoProperty"/> descriptor for this expandable sub object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObjectIdentity.GetBaseStyles(Syncfusion.Styles.IStyleInfo)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObjectIdentity.OnStyleChanged(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap">
            <summary>
            This class acts as a repository for common styles (base styles). Such styles are registered and held in this repository.
            This enables them to be referenced by their registered name. When changes are made to registered base styles, they are
            propagated through the system.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap.Register(Syncfusion.Windows.Forms.Chart.ChartBaseStyleInfo)">
            <summary>
                Registers a base style with the styles map.
            </summary>
            <param name="style" type="Syncfusion.Windows.Forms.Chart.ChartBaseStyleInfo">
                <para>
                The style to register. The <see cref="P:Syncfusion.Windows.Forms.Chart.ChartBaseStyleInfo.Name"/> property will be used as the registration name.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap.Lookup(System.String)">
            <summary>
                Look up and return a base style by name.
            </summary>
            <param name="name" type="string">
                <para>
                Name to look up.
                </para>
            </param>
            <returns>
                A base style if one is registed under that name; NULL otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap.Remove(System.String)">
            <summary>
               Removes the base style registered under the passed in name from this repository.
            </summary>
            <param name="name" type="string">
                <para>
                 Name of base style to remove.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap.Clear">
            <summary>
             Remove references to all registered styles.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap.GetBaseStyles(System.String,System.Int32@)">
            <summary>
                Helper function to look up base style information (to several levels).
            </summary>
            <param name="baseStyleName" type="string">
                <para>
                Base style name to look up.
                </para>
            </param>
            <param name="level" type="out int">
                <para>
                Number of recursive levels to which look up was performed.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap.GetBaseStyles(Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Int32@)">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap.Item(System.String)">
            <summary>
            ChartBaseStyleInfo object registered with the name passed in.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSymbolShape">
            <summary>
            Defines the various available symbols that may be displayed at a ChartPoint.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolShape.None">
            <summary>
            No symbol is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolShape.Circle">
            <summary>
            Circle is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolShape.Cross">
            <summary>
            Cross is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolShape.Diamond">
            <summary>
            Diamond is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolShape.Square">
            <summary>
            Square is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolShape.Triangle">
            <summary>
            Triangle is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolShape.InvertedTriangle">
            <summary>
            Inverted triangle is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolShape.Hexagon">
            <summary>
            Hexagon is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolShape.Pentagon">
            <summary>
            Pentagon is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolShape.Image">
            <summary>
            Image specified in ImageIndex is displayed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore">
            <summary>
            Implements the data store for the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/> object.
            </summary>
            <seealso cref="T:Syncfusion.Styles.StyleInfoStore"/>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore.ShapeProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore.ImageIndexProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore.ColorProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore.SizeProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore.OffsetProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore.MarkerProperty">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore.#ctor">
            <overload>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore"/>.
            </overload>
            <summary>
            Initializes an empty <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore.Clone">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore.StaticDataStore">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo">
            <summary>
            Provides a <see cref="T:Syncfusion.Styles.StyleInfoSubObjectBase"/> object for symbols associated with a ChartPoint.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.#ctor">
            <overload>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/> object.
            </overload>
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/> object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity,Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/> object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/>.
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/>.
            All changes in this style object will saved in the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore"/> object.</param>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.MakeCopy(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.GetDefaultStyle">
            <summary>
            Returns <see cref="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.Default"/>.
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/> object with default values.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.ResetShape">
            <summary>
            Resets the symbol style.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.ResetImageIndex">
            <summary>
            Resets the top border.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.ResetColor">
            <summary>
            Resets the symbol's color.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.ResetSize">
            <summary>
            Resets the top border.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.ResetOffset">
            <summary>
            Resets the offset.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.ResetMarker">
            <summary>
            Resets the offset.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.Default">
            <summary>
            Returns a default <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/> to be used with a default style.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.Shape">
            <summary>
            The style of the symbol to be displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.HasShape">
            <summary>
            Determines if the style has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.ImageIndex">
            <summary>
            The image index to be used to access the image from the associated <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> object's ImageList.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.HasImageIndex">
            <summary>
            Determines if the ImageIndex has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.Color">
            <summary>
            The color to be used with the symbol.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.HasColor">
            <summary>
            Determines if the symbol's color has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.Size">
            <summary>
            Specified the size of the symbol.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.HasSize">
            <summary>
            Determines if the size of the symbol has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.Offset">
            <summary>
            Specified the offset of the symbol.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.HasOffset">
            <summary>
            Determines if the offset of the symbol has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.Marker">
            <summary>
            Specified the offset of the symbol.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.HasMarker">
            <summary>
            Determines if the offset of the symbol has been initialized.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartToolBar">
            <summary>
            Summary description for ToolBar.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBar.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBar.AutoLocation">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBar.InitializeComponent">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBar.PaintControl(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBar.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBar.OnButtonSizeChange">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBar.OnButtonBkColorChange">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBar.OnButtonFrColorChange">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBar.OnButtonFlatStyleChange">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBar.MoveToolBar(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBar.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBar.OnSizeChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBar.OnDoubleClick(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBar.CheckLocation(System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="location"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBar.m_border_SettingsChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBar.Buttons_AddButton(System.Object,System.Windows.Forms.Button)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="button"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBar.Buttons_RemoveButton(System.Object,System.Windows.Forms.Button)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="button"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBar.Buttons_ClearButtons(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBar.ButtonSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBar.Orientation">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBar.Spacing">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBar.Info">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBar.Buttons">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBar.AutoSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBar.Header">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBar.ShowBorder">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBar.Border">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBar.ImageList">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBar.ButtonFlatStyle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBar.ButtonBackColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBar.ButtonForeColor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartToolBarInfo">
            <summary>
            Summary description for ToolBarInfo.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBarInfo.#ctor(Syncfusion.Windows.Forms.Chart.ChartToolBar)">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBarInfo.Location">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBarInfo.ButtonSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBarInfo.Orientation">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBarInfo.Spacing">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBarInfo.AutoSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBarInfo.Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBarInfo.BackColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBarInfo.Header">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBarInfo.Border">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBarInfo.ShowBorder">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBarInfo.Visible">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBarInfo.ButtonFlatStyle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBarInfo.ButtonBackColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBarInfo.ButtonForeColor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartToolBarButtonColection">
            <summary>
            Summary description for ToolBarButtonColection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBarButtonColection.#ctor">
            <summary>
            
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBarButtonColection.Remove(System.Windows.Forms.Button)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBarButtonColection.Contains(System.Windows.Forms.Button)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBarButtonColection.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBarButtonColection.IndexOf(System.Windows.Forms.Button)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBarButtonColection.Add(System.Windows.Forms.Button)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBarButtonColection.Item(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartToolBarButtonColection.Count">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartToolBarController">
            <summary>
            Summary description for ToolBarController.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBarController.#ctor(Syncfusion.Windows.Forms.Chart.IChartAreaHost)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBarController.SetToolBar(Syncfusion.Windows.Forms.Chart.ChartToolBar)">
            <summary>
            
            </summary>
            <param name="toolBar"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBarController.SaveChart">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBarController.CopyChart">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBarController.EditStyle(System.Windows.Forms.Control)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBarController.SetDefaultButtons">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBarController.SetSaveButton">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBarController.SetCopyButton">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBarController.SetEditStyleButton">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBarController.OnToolBarSet">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBarController.ButtonSaveClick(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBarController.ButtonCopyClick(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBarController.ButtonEditStyleClick(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartToolBarController.OnMenuClick(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ToolBarPropertyForm">
            <summary>
            Summary description for ToolBarPropertyForm.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ToolBarPropertyForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToolBarPropertyForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToolBarPropertyForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToolBarPropertyForm.SetInfo(Syncfusion.Windows.Forms.Chart.ChartToolBarInfo)">
            <summary>
            
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToolBarPropertyForm.bttnOK_Click(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToolBarPropertyForm.bttnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToolBarPropertyForm.bttnApply_Click(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ToolBarPropertyForm.ToolBarProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToolBarPropertyForm.ToolBarProperty.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToolBarPropertyForm.ToolBarProperty.SetInfo(Syncfusion.Windows.Forms.Chart.ChartToolBarInfo)">
            <summary>
            
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToolBarPropertyForm.ToolBarProperty.GetInfo(Syncfusion.Windows.Forms.Chart.ChartToolBarInfo)">
            <summary>
            
            </summary>
            <param name="info"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ToolBarPropertyForm.ToolBarProperty.Location">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ToolBarPropertyForm.ToolBarProperty.ButtonSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ToolBarPropertyForm.ToolBarProperty.Orientation">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ToolBarPropertyForm.ToolBarProperty.Spacing">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ToolBarPropertyForm.ToolBarProperty.AutoSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ToolBarPropertyForm.ToolBarProperty.Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ToolBarPropertyForm.ToolBarProperty.BackColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ToolBarPropertyForm.ToolBarProperty.Header">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ToolBarPropertyForm.ToolBarProperty.Border">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ToolBarPropertyForm.ToolBarProperty.ShowBorder">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartCustomPoint">
            <summary>
            The ChartCustomPoint class can be used to set text or symbols on the chart area.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.OnSettingsChanged(System.EventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.#ctor">
            <summary>
                Constructor.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.SettingsChanged">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.ImageList">
            <summary>
            Gets / sets the image list to use.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.Border">
            <summary>
            The border information associated with this custom point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.Interior">
            <summary>
            Interior brush information associated with this custom point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.Offset">
            <summary>
            The offset of text associated with this point from the rendering position of this point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.PointIndex">
            <summary>
            The index of the point to be followed.
            <seealso cref="F:Syncfusion.Windows.Forms.Chart.ChartCustomPointType.PointFollow"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.SeriesIndex">
            <summary>
            The index of the series that holds the point to be followed.
            <see cref="F:Syncfusion.Windows.Forms.Chart.ChartCustomPointType.PointFollow"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.DateXValue">
            <summary>
            The X value of the custom point when the primary X axis of the chart is DateTime.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.DateYValue">
            <summary>
            The Y value of the custom point when the primary Y axis of the chart is DateTime.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.Symbol">
            <summary>
            The symbol information associated with the custom point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.Color">
            <summary>
            The color of the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.Font">
            <summary>
            The font of the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.Alignment">
            <summary>
            The alignment of the text in relation to the point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.Text">
            <summary>
            The text of the custom point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.YValue">
            <summary>
            The X value of the custom point when the primary X axis of the chart is of type double.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.XValue">
            <summary>
            The Y value of the custom point when the primary Y axis of the chart is of type double.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.CustomType">
            <summary>
            Indicates how the XValue and YValue will be used.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPointD">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointD.#ctor(System.Int32,System.Int32)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointD.#ctor(System.Single,System.Single)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointD.#ctor(System.Double,System.Double)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointD.ToPointF">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointD.X">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointD.Y">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointD.Empty">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSizeD">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSizeD.#ctor(System.Int32,System.Int32)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSizeD.#ctor(System.Single,System.Single)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSizeD.#ctor(System.Double,System.Double)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSizeD.ToSizeF">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSizeD.Width">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSizeD.Height">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSizeD.Empty">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRectangleD">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRectangleD.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRectangleD.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRectangleD.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRectangleD.#ctor(System.Drawing.Point,System.Drawing.Size)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRectangleD.#ctor(System.Drawing.PointF,System.Drawing.SizeF)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRectangleD.#ctor(System.Drawing.Point,Syncfusion.Windows.Forms.Chart.ChartSizeD)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRectangleD.ToRectangleF">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRectangleD.Union(Syncfusion.Windows.Forms.Chart.ChartRectangleD,Syncfusion.Windows.Forms.Chart.ChartRectangleD)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRectangleD.Union(Syncfusion.Windows.Forms.Chart.ChartRectangleD)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRectangleD.Union(System.Double,System.Double,System.Double,System.Double)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRectangleD.op_Equality(Syncfusion.Windows.Forms.Chart.ChartRectangleD,Syncfusion.Windows.Forms.Chart.ChartRectangleD)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRectangleD.op_Inequality(Syncfusion.Windows.Forms.Chart.ChartRectangleD,Syncfusion.Windows.Forms.Chart.ChartRectangleD)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRectangleD.Equals(System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRectangleD.GetHashCode">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRectangleD.X">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRectangleD.Y">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRectangleD.Width">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRectangleD.Height">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRectangleD.Top">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRectangleD.Bottom">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRectangleD.Left">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRectangleD.Right">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRectangleD.Empty">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLabelIntersectionActionEffect">
            <summary>
                Options to control what happens if chart labels intersect each other due to lack of space. Used in conjunction with
                <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLabelIntersectAction"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLabelIntersectionActionEffect.All">
            <summary>
             <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLabelIntersectAction"/> related changes affect all label text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLabelIntersectionActionEffect.Specific">
            <summary>
             <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLabelIntersectAction"/> related changes affect only specific labels that may need to be changed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType">
            <summary>
             The representation symbol used inside the legend box for a series.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType.SeriesType">
            <summary>
            A visual representation of the series type will be rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType.SeriesImage">
            <summary>
            The image associated with the series type will be rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType.Rectangle">
            <summary>
            A rectangle will be rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType.Line">
            <summary>
            A line will be rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType.Circle">
            <summary>
            A circle will be rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType.Diamond">
            <summary>
            A diamond will be rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType.Hexagon">
            <summary>
            A hexagon will be rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType.Pentagon">
            <summary>
            A pentagon will be rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType.Triangle">
            <summary>
            A triangle will be rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType.InvertedTriangle">
            <summary>
            An inverted triangle will be rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType.Cross">
            <summary>
            A cross will be rendered.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartCustomPointType">
            <summary>
            Options that specify how a custom point is positioned on the chart.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCustomPointType.Percent">
            <summary>
            Coordinates of the custom point are taken as a percentage of the chart area.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCustomPointType.Pixel">
            <summary>
            Coordinates of the custom point are taken to be in pixels.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCustomPointType.ChartCoordinates">
            <summary>
            Coordinates of the custom point are taken as a percentage of the chart area.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCustomPointType.PointFollow">
            <summary>
            The custom point will follow the regular point of any series it is assigned to.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLabelIntersectAction">
            <summary>
             Control options that specify action to be taken when labels intersect each other.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLabelIntersectAction.None">
            <summary>
            No special action is taken. Labels may intersect.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLabelIntersectAction.Wrap">
            <summary>
            When labels would intersect each other, they are wrapped to avoid intersection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLabelIntersectAction.MultipleRows">
            <summary>
            When labels would intersect each other, they are wrapped into multiple rows to avoid intersection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLabelIntersectAction.Rotate">
            <summary>
            When labels would intersect each other, they are rotated to avoid intersection.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLegendItemType">
            <summary>
                The actual symbol rendered inside the legend box for a series based on hints / specifications given with
                <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.Line">
            <summary>
             Visual representation is a line.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.Rectangle">
            <summary>
             Visual representation is a rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.Spline">
            <summary>
             Visual representation is a spline.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.Area">
            <summary>
             Visual representation is line an area chart.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.PieSlice">
            <summary>
             Visual representation is a pie slice.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.Image">
            <summary>
             Visual representation is an image.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.Circle">
            <summary>
             Visual representation is a circle.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.Diamond">
            <summary>
             Visual representation is a diamond.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.Hexagon">
            <summary>
             Visual representation is a hexagon.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.Pentagon">
            <summary>
             Visual representation is a pentagon.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.Triangle">
            <summary>
             Visual representation is a triangle.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.InvertedTriangle">
            <summary>
             Visual representation is an inverted triangle.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.Cross">
            <summary>
             Visual representation is a cross.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.SplineArea">
            <summary>
             Visual representation is a spline area.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartTextPosition">
            <summary>
                Options for positioning of the Chart's text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextPosition.Top">
            <summary>
             Text is positioned at the top of the chart area.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextPosition.Bottom">
            <summary>
             Text is positioned at the bottom of the chart area.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextPosition.Left">
            <summary>
             Text is positioned to the left of the chart area.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextPosition.Right">
            <summary>
             Text is positioned to the right of the chart area.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLegendPosition">
            <summary>
             Legend positioning options:
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendPosition.Top">
            <summary>
             Legend is positioned at the top of the chart area.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendPosition.Bottom">
            <summary>
             Legend is positioned at the bottom of the chart area.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendPosition.Left">
            <summary>
             Legend is positioned to the left of the chart area.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendPosition.Right">
            <summary>
             Legend is positioned to the right of the chart area.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendPosition.Floating">
            <summary>
             Legend floats over the chart area. Can be positioned anywhere.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartValueType">
            <summary>
                The different values that are natively used:
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartValueType.Double">
            <summary>
             Double value
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartValueType.DateTime">
            <summary>
             DateTime value
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartValueType.Custom">
            <summary>
             Custom value
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartValueType.Logarithmic">
            <summary>
             Logarithimic value
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesBaseType">
            <summary>
             Representation classification. Generally used only when you are writing custom renderers.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesBaseType.SideBySide">
            <summary>
             Values are plotted side by side.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesBaseType.Stacking">
            <summary>
             Values are stacked.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesBaseType.Independent">
            <summary>
             Values are independently rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesBaseType.Other">
            <summary>
             Other non-standard rendering.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesType">
            <summary>
             Different chart types:
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Line">
            <summary>
             Line chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Spline">
            <summary>
             Spline chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Scatter">
            <summary>
             Scatter chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Column">
            <summary>
             Column chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Bar">
            <summary>
             Bar chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Gantt">
            <summary>
             Gantt chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.StackingBar">
            <summary>
             Stacking bar chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Area">
            <summary>
             Area chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.SplineArea">
            <summary>
             Area chart with spline connectors
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.StackingArea">
            <summary>
             Stacking area chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.StackingColumn">
            <summary>
             Stacking column chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Pie">
            <summary>
             Pie chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.HiLo">
            <summary>
             HiLo chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.HiLoOpenClose">
            <summary>
             HiLoOpenClose chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Candle">
            <summary>
             Candle chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Bubble">
            <summary>
             Bubble chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.StepLine">
            <summary>
             StepLine chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.StepArea">
            <summary>
             StepArea chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Radar">
            <summary>
            Radar chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Kagi">
            <summary>
            Kagi chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Renko">
            <summary>
            Renko chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Polar">
            <summary>
            Polar chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.ThreeLineBreak">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.PointAndFigure">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Custom">
            <summary>
             Custom chart. Rendering is done by user.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisRangeType">
            <summary>
                Chart axis ranges configuration options.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisRangeType.Auto">
            <summary>
             Bounds are automatically calculated based on values.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisRangeType.Set">
            <summary>
             Bounds and interval are explicitly set.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartTextOrientation">
            <summary>
             The orientation of text when rendered with a value point.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextOrientation.Up">
            <summary>
             Text is rendered above the point.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextOrientation.Down">
            <summary>
             Text is rendered below the point.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextOrientation.Left">
            <summary>
             Text is rendered to the left of the point.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextOrientation.Right">
            <summary>
             Text is rendered to the right of the point.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextOrientation.Center">
            <summary>
             Text is rendered centered on the point.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextOrientation.Smart">
            <summary>
             Text is rendered in a manner that is appropriate for the situation.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextOrientation.RegionUp">
            <summary>
             Text is rendered above the region that represents the point (Example: above the bar in a bar chart).
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextOrientation.RegionDown">
            <summary>
             Text is rendered below the region that represents the point (Example: below the bar in a bar chart).
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextOrientation.RegionCenter">
            <summary>
             Text is centered in the region that represents the point (Example: centered inside the bar in a bar chart).
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextOrientation.SymbolCenter">
            <summary>
             Text is centered to the symbol if one is associated with the point.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRadarAxisStyle">
            <summary>
            Indicates the style of the radar chart.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRadarAxisStyle.Polygon">
            <summary>
            Axes are rendered polygonal.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRadarAxisStyle.Circle">
            <summary>
            Axes are rendered as circles.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartColumnWidthMode">
            <summary>
            Indicates the style of the radar chart.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColumnWidthMode.RelativeWidthMode">
            <summary>
            Width of columns are relative to the range of X axis.
            Width always corresponds to 1.0 on range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColumnWidthMode.FixedWidthMode">
            <summary>
            If width of columns aren't given in point YValues[1] then
            it is calculated to fill all the room between columns.
            Otherwise the width should given in Series.Points[i].YValues[1]
            in measure units of X axis.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartColumnDrawMode">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.LineInfo">
            <summary>
            Holds information on lines rendered as part of the chart's rendering system.
            <seealso cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.GridLineType"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.LineType"/>
            <seealso cref="!:ChartLegendInfo.Border"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LineInfo.#ctor">
            <summary>
                Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LineInfo.OnSettingsChanged(System.EventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LineInfo.ResetBackColor">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LineInfo.ResetForeColor">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LineInfo.ShouldSerializeBackColor">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LineInfo.ShouldSerializeForeColor">
            <internalonly/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.LineInfo.SettingsChanged">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LineInfo.BackColor">
            <summary>
            Backcolor associated with the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LineInfo.Brush">
            <summary>
             Brush information used with the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LineInfo.DashStyle">
            <summary>
            Style of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LineInfo.ForeColor">
            <summary>
            Forecolor of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LineInfo.Pen">
            <summary>
            Pen used to render the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LineInfo.PenType">
            <summary>
            Type of pend used with the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LineInfo.Width">
            <summary>
            Width of the line.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartMarker">
            <summary>
            ChartMarker is used in association with <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/>.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMarker.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartMarker.LineCap">
            <summary>
            The line cap to use with this marker.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartMarker.LineInfo">
            <summary>
                Line information associated with this marker.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Double1DRange">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Double1DRange.#ctor">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Double1DRange.#ctor(System.Double,System.Double)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Double1DRange.Union(Syncfusion.Windows.Forms.Chart.Double1DRange,System.Double)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Double1DRange.Union(Syncfusion.Windows.Forms.Chart.Double1DRange,Syncfusion.Windows.Forms.Chart.Double1DRange)">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Double1DRange.HasMax">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Double1DRange.HasMin">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Double1DRange.Max">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Double1DRange.Min">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Double1DRange.Width">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDateTime1DRange">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTime1DRange.#ctor">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTime1DRange.#ctor(System.DateTime,System.DateTime)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTime1DRange.Union(Syncfusion.Windows.Forms.Chart.ChartDateTime1DRange,Syncfusion.Windows.Forms.Chart.ChartDateTime1DRange)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTime1DRange.Union(Syncfusion.Windows.Forms.Chart.ChartDateTime1DRange,System.DateTime)">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTime1DRange.Max">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTime1DRange.Min">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStripLine">
            <summary>
            Information on rendering a strip line. A strip line is a band rendered on the background of a chart.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLine.#ctor">
            <summary>
                Constructor.
            </summary>
            
            <returns>
                A void value.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.DateOffset">
            <summary>
            The offset of the strip line if the chart's Primary X axis is of type DateTime and StartAtAxisPosition is True.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.Offset">
            <summary>
            The offset of the strip line if the chart's Primary X axis is of type double and StartAtAxisPosition is True.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.StartAtAxisPosition">
            <summary>
            Indicates if the strip line will start at the start of the axis range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.Vertical">
            <summary>
            Indicates if the strip line is vertical.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.TextAlignment">
            <summary>
            Specifies the alignment of text rendered within a strip line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.Font">
            <summary>
            Specifies the font with which text associated with this strip line is rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.TextColor">
            <summary>
            Color of the text rendered with this strip line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.Text">
            <summary>
            The text associated with this strip line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.Enabled">
            <summary>
            Controls if the strip line is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.BackImage">
            <summary>
            The background image associated with this strip line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.Interior">
            <summary>
            Interior brush information for this strip line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.Period">
            <summary>
            The period over which this strip line appears.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.PeriodDate">
            <summary>
            The period over which this strip line appears when the value is DateTime.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.WidthDate">
            <summary>
            Indicates the width of each strip line as a TimeSpan.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.Width">
            <summary>
            Indicates the width of each strip line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.StartDate">
            <summary>
            Indicates date from which the strip line is to start.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.EndDate">
            <summary>
            Indicates the date after which the strip line should not be displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.Start">
            <summary>
            Indicates the start of this strip line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.End">
            <summary>
            Indicates the end range of this strip line.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.EnumEditComboBox">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.EnumEditComboBox.OnDropDown(System.EventArgs)">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.EnumEditComboBox.Items">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.EnumEditListBox">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.EnumEditListBox.Items">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.InteriorEditor">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.OffsetEditor">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.FontEditor">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.TextEditor">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SymbolEditor">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.UnEmptyRange">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.UnEmptyRange.#ctor">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.UnEmptyRange.#ctor(System.Int32,System.Int32)">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.UnEmptyRange.From">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.UnEmptyRange.To">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartMargins">
            <summary>
            Specifies Chart margin information.    
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMargins.OnChanged">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMargins.#ctor">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartMargins"/> instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMargins.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartMargins"/> instance.
            </summary>
            <param name="top">Top.</param>
            <param name="left">Left.</param>
            <param name="bottom">Bottom.</param>
            <param name="right">Right.</param>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartMargins.Changed">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartMargins.Top">
            <summary>
            Gets / sets the top value.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartMargins.Left">
            <summary>
            Gets / sets the left value.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartMargins.Bottom">
            <summary>
            Gets / sets the bottom value.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartMargins.Right">
            <summary>
            Gets / sets the right value.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartZooming">
            <summary>
            Specifies Zooming options.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartZooming.#ctor">
            <summary>
                Constructor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartZooming.Line">
            <summary>
                Information on line drawn during interactive zooming.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SeriesStyleEditorForm">
            <summary>
            Summary description for SeriesStyleEditorForm.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SeriesStyleEditorForm.#ctor(Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.String,Syncfusion.Drawing.BrushInfo)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SeriesStyleEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SeriesStyleEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SeriesStyleEditorForm.SeriesStyle">
            <internalonly/>
        </member>
    </members>
</doc>
