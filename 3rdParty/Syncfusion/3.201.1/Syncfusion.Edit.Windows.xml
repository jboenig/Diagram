<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.Edit.Windows</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.Windows.Forms.Edit.Designer.KeyBingingsDesigner">
            <summary>
            Designer for language.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Designer.KeyBingingsDesigner.edSvc">
            <summary>
            Active editor service.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Designer.KeyBingingsDesigner.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Shows a dropdown icon in the property editor
            </summary>
            <param name="context">The context of the editing control</param>
            <returns>Returns <c>UITypeEditorEditStyle.DropDown</c></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Designer.KeyBingingsDesigner.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Overrides the method used to provide basic behaviour for selecting editor.
            Shows our custom control for editing the value.
            </summary>
            <param name="context">The context of the editing control</param>
            <param name="provider">A valid service provider</param>
            <param name="value">The current value of the object to edit</param>
            <returns>The new value of the object</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Designer.LanguageDescriptor">
            <summary>
            Summary description for LanguageDescriptor.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Designer.LanguageDescriptor.DEF_DEFAULT_LANGUAGE_NAME">
            <summary>
            User-friendly name for default language.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Designer.LanguageDescriptor.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Checks wheather object can be converted from some type.
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Designer.LanguageDescriptor.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Designer.LanguageDescriptor.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Designer.LanguageDescriptor.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Designer.LanguageSelector">
            <summary>
            Designer for language.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Designer.LanguageSelector.edSvc">
            <summary>
            Active editor service.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Designer.LanguageSelector.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Shows a dropdown icon in the property editor
            </summary>
            <param name="context">The context of the editing control</param>
            <returns>Returns <c>UITypeEditorEditStyle.DropDown</c></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Designer.LanguageSelector.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Overrides the method used to provide basic behaviour for selecting editor.
            Shows our custom control for editing the value.
            </summary>
            <param name="context">The context of the editing control</param>
            <param name="provider">A valid service provider</param>
            <param name="value">The current value of the object to edit</param>
            <returns>The new value of the object</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Designer.LanguageSelector.list_Click(System.Object,System.EventArgs)">
            <summary>
            Closes dropdown on any click.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Designer.LanguageSelector.ListItem">
            <summary>
            Single item in list.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Designer.LanguageSelector.ListItem.m_text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Designer.LanguageSelector.ListItem.m_language">
            <summary>
            Language.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Designer.LanguageSelector.ListItem.#ctor(Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage)">
            <summary>
            Initializes instance by language.
            </summary>
            <param name="language"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Designer.LanguageSelector.ListItem.ToString">
            <summary>
            Converts to text representation.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Designer.LanguageSelector.ListItem.Language">
            <summary>
            GET language;
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Designer.CodeEditDesigner">
            <summary>
            Designer for StreamEditControl
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Designer.CodeEditDesigner.PostFilterProperties(System.Collections.IDictionary)">
            <summary>
            Filters properties.
            </summary>
            <param name="properties"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Designer.CodeEditDesigner.PreFilterProperties(System.Collections.IDictionary)">
            <summary>
            Filters properties.
            </summary>
            <param name="properties"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Dialogs.ContextChoiceItem">
            <summary>
            TreeNode with tooltip text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.ContextChoiceItem.m_strToolTip">
            <summary>
            ToolTip string.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ContextChoiceItem.RaiseSelectedEvent">
            <summary>
            Raises Selected event.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Dialogs.ContextChoiceItem.Selected">
            <summary>
            Event, that is raised when node gets selected.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.ContextChoiceItem.ToolTip">
            <summary>
            GET, SET string to be shown in tooltip.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt">
            <summary>
            Context Prompt form.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.DEF_FIRST_LINE_HEIGHT">
            <summary>
            Height of the first line.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.m_ctrlParent">
            <summary>
            Editor, prompt belongs to.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.m_iCurrentPrompt">
            <summary>
            Index of the current prompt.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.m_listPrompts">
            <summary>
            List of the prompts.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.m_iLeftMargin">
            <summary>
            Size of the left margin.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.m_iTopMargin">
            <summary>
            Size of the top margin.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.#ctor(System.Windows.Forms.Control)">
            <summary>
            Creates and initializes new instance of then Context Prompt.
            </summary>
            <param name="parent">Editor, prompt belongs to.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.Close">
            <summary>
            Cancels selection and closes form.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draws the whole popup prompt object.
            </summary>
            <param name="pe">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Processes arrow keys.
            </summary>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.ProcessKey(System.Windows.Forms.Keys)">
            <summary>
            Processes key combination.
            </summary>
            <param name="keyData">Key combination.</param>
            <returns>True, if combination can be processed, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.ContextPrompt_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseDown event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.ContextPrompt_LostFocus(System.Object,System.EventArgs)">
            <summary>
            Hides the popup selection when focus is lost.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.parent_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handler of the KeyDown event of the parent.
            </summary>
            <param name="sender">Parent control.</param>
            <param name="e">KeyEventArgs instance with key specified.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.NextChoice">
            <summary>
            Displays the next choice.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.PreviousChoice">
            <summary>
            Displays the previous choice.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.MeasureCurrentItem">
            <summary>
            Measures current item.
            </summary>
            <returns>Size of the window.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.OnCurrentPromptChanged">
            <summary>
            Raises SelectedPromptChanged event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.SetPrompts(System.Collections.ICollection)">
            <summary>
            Sets the items for the listBoxChoices.
            </summary>
            <param name="al"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.SelectedPrompt">
            <summary>
            GET currently selected prompt.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.TextIndex">
            <summary>
            GET text with the index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.CurrentPrompt">
            <summary>
            Index of the currently selected prompt.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.SelectedPromptChanged">
            <summary>
            Event, that is raised when selected context prompt is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt.TotalChoices">
            <summary>
            Gets the total number of choices.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice">
            <summary>
            This form used for auto complete functionality representation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.DEF_PAGE_LINES">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.AddImage(System.Drawing.Image)">
            <summary>
            Adds image to image list.
            </summary>
            <param name="image">Image that should be added to image list.</param>
            <returns>Index of the added image in the list.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.AddImage(System.Drawing.Image,System.Drawing.Color)">
            <summary>
            Adds image to image list.
            </summary>
            <param name="image">Image that should be added to image list.</param>
            <param name="transparentColor">Transparent color of the image.</param>
            <returns>Index of the added image in the list.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.AddItem(System.String,System.String)">
            <summary>
            Adds item to list.
            </summary>
            <param name="text">Text of the item.</param>
            <param name="tooltip">Tooltip for the item.</param>
            <returns>Newly created item.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.AddItem(System.String,System.String,System.Int32)">
            <summary>
            Adds item to list.
            </summary>
            <param name="text">Text of the item.</param>
            <param name="tooltip">Tooltip for the item.</param>
            <param name="iImage">Index of the image to be used.</param>
            <returns>Newly created item.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.AddItem(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Adds item to list.
            </summary>
            <param name="text">Text of the item.</param>
            <param name="iImage">Index of the image to be used in unselected state.</param>
            <param name="tooltip">Tooltip for the item.</param>
            <param name="iImageSelected">Index of the image to be used in selected state.</param>
            <returns>Newly created item.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.NextItem">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.PreviousItem">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.NextPage">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.PreviousPage">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.ProccessKeys(System.Windows.Forms.KeyEventArgs)">
            <summary>
            
            </summary>
            <param name="keys"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.ProccessKeys(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.Dismiss">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.BeginUpdate">
            <summary>
            Locks update of the control.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.EndUpdate">
            <summary>
            Unlocks update of the control.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.Close">
            <summary>
            Cancels selection and closes form.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.CheckSelection">
            <summary>
            Checks if control has some item selected.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.CloseOk">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.CloseCancel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.SetItemToolTip(Syncfusion.Windows.Forms.Edit.Dialogs.ContextChoiceItem)">
            <summary>
            Sets active tooltip`s text.
            </summary>
            <param name="item">Item with text to be set.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.SetNodeToolTip(System.Windows.Forms.TreeNode)">
            <summary>
            Sets active tooltip`s text.
            </summary>
            <param name="item">Item with text to be set.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.lstItems_AfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Updates tooltip with information about currently selected item.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.lstItems_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Updates tooltip.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.lstItems_DoubleClick(System.Object,System.EventArgs)">
            <summary>
            Closes dialog with modal result OK.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.lstItems_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Processes key presses.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.SelectedItem">
            <summary>
            GET, SET currently selected item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.ContextChoiceList">
            <summary>
            
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice.ItemSelected">
            <summary>
            Event, that is raised when some item gets selected.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog">
            <summary>
            Summary description for frmConfigDialog.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.DEF_NEW_LANGUAGE">
            <summary>
            Item in language list for creating new configuration.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.DEF_CHANGED_TEXT">
            <summary>
            Language changed text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.DER_CHANGED_CAPTION">
            <summary>
            Language changed caption.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.DEF_FORMAT_SAMPLE">
            <summary>
            Text for format sample.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.DEF_EMPTY_COLOR">
            <summary>
            Name of empty color.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.DEF_LEXEM_ROOT">
            <summary>
            Root of lexems tree.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.PREVIEW_BOX_WIDTH">
            <summary>
            Width of the preview box.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.ARROW_WIDTH">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.m_colors">
            <summary>
            holds all names of Colors
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.m_hatchStyle">
            <summary>
            Holds fields of HatchStyle enumeration.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.m_underlineStyle">
            <summary>
            Holds fields of UnderlineStyle enumeration.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.m_underlineWeight">
            <summary>
            Holds fields of UnderlineWeight enumeration.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.m_formatType">
            <summary>
            Holds Format Type enum fields.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.m_config">
            <summary>
            Configurator instance.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.m_newLanguages">
            <summary>
            Array of created new languages.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.m_activeIndex">
            <summary>
            Active index of list of languages.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.m_info">
            <summary>
            Information for drawing format sample.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.m_formatState">
            <summary>
            Default state of formats.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.m_activeLexem">
            <summary>
            Index of selected lexem.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.m_activeLang">
            <summary>
            Active language of control.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.#ctor(Syncfusion.Windows.Forms.Edit.Implementation.Config.Config,Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage)">
            <summary>
            Main constructor.
            </summary>
            <param name="configurator"><see cref="T:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config"/> class instance.</param>
            <param name="activeLang">Active configuration language.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.tabsConfiguration_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Tab page changed. Load all settings into controls.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.comboLanguages_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Raises when item was selected from list of languages.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.btnSaveAs_Click(System.Object,System.EventArgs)">
            <summary>
            Raises whent SavAs button pressed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            Saves all changes on language configurations.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.btnDelete_Click(System.Object,System.EventArgs)">
            <summary>
            Removes language from collection.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.lstExtensions_OnAddClick(System.Object,System.EventArgs)">
            <summary>
            Add button for extension added.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.lsbFormats_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Selected Format in list changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.pnlSample_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints sample on panel.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.btnFontFormat_Click(System.Object,System.EventArgs)">
            <summary>
            Opens Font Dialog for selecting font.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.Format_Changed(System.Object,System.EventArgs)">
            <summary>
            Color for format in list changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.btnRestore_Click(System.Object,System.EventArgs)">
            <summary>
            Restores changed format.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.btnAddFormat_Click(System.Object,System.EventArgs)">
            <summary>
            Adds new format.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.btnRemoveFormat_Click(System.Object,System.EventArgs)">
            <summary>
            Removes format from the list.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.treeLexems_AfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Selected lexem has been changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.btnAddSubLexem_Click(System.Object,System.EventArgs)">
            <summary>
            Add sub lexem to collection.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.btnAddLexem_Click(System.Object,System.EventArgs)">
            <summary>
            Adds new lexem.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.btnRemoveLexem_Click(System.Object,System.EventArgs)">
            <summary>
            Removes selected lexem.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.DrawComboItem(System.Windows.Forms.ComboBox,System.Drawing.Brush,System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Draws combo item for combobox with color rectangles.
            </summary>
            <param name="combo"></param>
            <param name="currentBrush"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.comboFontColor_DrawItem(System.Object,System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Draws combo item for combobox with font color.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.comboHatchStyle_DrawItem(System.Object,System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Draws combo item for combobox with hatch style.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.btnSetFonts_Click(System.Object,System.EventArgs)">
            <summary>
            Sets new font and draws sample.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.InfillLanguageList">
            <summary>
            Infills list pf loaded languages.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.GetActiveLanguage">
            <summary>
            Returns active language.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.GetLanguage(System.Int32)">
            <summary>
            Returns language by defined index.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.LoadLanguage(Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage)">
            <summary>
            Loads all properties of selected language to controls.
            </summary>
            <param name="lang">Configuration language to load.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.SaveLanguage(Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage)">
            <summary>
            Saves defined language.
            </summary>
            <param name="lang"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.Save">
            <summary>
            Saves results.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.SaveAll">
            <summary>
            Saves all languages to config.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.ToggleControls">
            <summary>
            Enables/disables buttons Save and Delete for languages.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.CreateNewConfiguration">
            <summary>
            Creates new language configuration.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.CreateConfigFromXml(System.Xml.XmlElement)">
            <summary>
            Creates new configuration language from Xml Document.
            </summary>
            <param name="element">XML element with language configuration..</param>
            <returns>ConfigLanguage from document.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.AddConfigLanguage(Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage)">
            <summary>
            Adds language to collection.
            </summary>
            <param name="language">New language.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.SavePreviousLanguage(System.Int32)">
            <summary>
            Saves previous active language from the list.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.EnableDoubleBuffering">
            <summary>
            Enables double buffering.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.InitTabPage(System.Windows.Forms.TabPage)">
            <summary>
            Initializes all control on defined Tab Page.
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.InitFormatPage">
            <summary>
            Initializes Formats tab page.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.InitLexemPage">
            <summary>
            Initializes Lexems tab page.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.InfillFormatsList(Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage)">
            <summary>
            Infills formats list.
            </summary>
            <param name="language">Language configuration, witch's data have to be used to fill lists.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.InfillsSplitsList(Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage)">
            <summary>
            Fills in lists on first tab page by data from given language.
            </summary>
            <param name="lang">Language configuration, witch's data have to be used to fill lists.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.InfillLexemsList(Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage)">
            <summary>
            Adds nodes to tree.
            </summary>
            <param name="lang">Language configuration, witch's data have to be used to fill lists.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.InfillLexemsSubList(System.Windows.Forms.TreeNode,Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem)">
            <summary>
            Infills sub lexems in lexems tree.
            </summary>
            <param name="parent">Parent node.</param>
            <param name="lexem">Lexem configuration, witch's data have to be used.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.GetActiveFormat">
            <summary>
            Returns selected format.
            </summary>
            <returns>Active format or NULL.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.DrawFormatSample">
            <summary>
            Draws format sample.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.LoadFormat(Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format)">
            <summary>
            Loads all settings from active format.
            </summary>
            <param name="format">Format to be loaded.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.ToggleFormatControls">
            <summary>
            Enables/disables controls on format tab page.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.GetFormatNameRegex">
            <summary>
            Returns Regex for format names.
            </summary>
            <returns><see cref="T:System.Text.RegularExpressions.Regex"/> with list of all existing format names.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.AddFormat(System.String)">
            <summary>
            Creates new format and adds to collection.
            </summary>
            <param name="name">Name of the format.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.GetActiveLexem">
            <summary>
            Returns active lexem.
            </summary>
            <returns>Lexem configuration or NULL if there 
            is no lexem configuration currently selected.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.ToggleLexemControls">
            <summary>
            Enables/disables controls on lexem edit page.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.LoadLexem(Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem)">
            <summary>
            Loads lexem info to controls. 
            </summary>
            <param name="lexem">Lexem configuration to be loaded.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.RestoreLexemControls">
            <summary>
            Restores controls to their default values.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.GetLexemNameRegex(Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem)">
            <summary>
            Bulids regex for checking name of new lexem.
            </summary>
            <param name="lexem"></param>
            <returns>
            <see cref="T:System.Text.RegularExpressions.Regex"/> with list of names of lexems 
            that belongs to the parent of the given one.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.AddLexem(Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem,System.String,System.Boolean)">
            <summary>
            Adds new lexem to collection..
            </summary>
            <param name="lexemName">Name of the lexem configuration..</param>
            <param name="parentLexem">Parent of the lexem configuration.</param>
            <param name="subLexem"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.ClearDataBindings">
            <summary>
            Cleares all DataBindings.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.SavePreviousLexem">
            <summary>
            Saves previous lexem.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.Configurator">
            <summary>
            Gets Config instanse with all edited languages.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.FormatState">
            <summary>
            Structure for saving start format settings.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.FormatState.m_name">
            <summary>
            Name of the format.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.FormatState.m_fontColor">
            <summary>
            Color of the font.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.FormatState.m_foreColor">
            <summary>
            Color of the borders.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.FormatState.m_backColor">
            <summary>
            Bg color.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.FormatState.m_lineColor">
            <summary>
            Lines color.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.FormatState.m_hatchStyle">
            <summary>
            Hatch Style of the font.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.FormatState.m_undStyle">
            <summary>
            Underline Style.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.FormatState.m_undWeight">
            <summary>
            Underline Weight.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.FormatState.m_font">
            <summary>
            Font of the format.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.FormatState.#ctor(System.String)">
            <summary>
            Creates new format state.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.FormatState.SaveState(Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format)">
            <summary>
            Saves all settings from format to this object.
            </summary>
            <param name="format"></param>
            <returns>TRUE - if settings saved, FLASE - otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.FormatState.RestoreState(Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format)">
            <summary>
            Restores all settings of format.
            </summary>
            <param name="format"></param>
            <returns>TRUE - if restored, FALSE - otherwise.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmConfigDialog.FormatState.Empty">
            <summary>
            Returns default state of the format.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Dialogs.frmCreateLangDialog">
            <summary>
            Summary description for frmCreateLangDialog.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmCreateLangDialog.DEF_XPATH_LANG_NAME">
            <summary>
            XPath for slecting name of languages.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmCreateLangDialog.DEF_XPATH_LANG">
            <summary>
            Selects all configuration languages.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmCreateLangDialog.DEF_ERROR">
            <summary>
            Error message when name dublicates.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmCreateLangDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmCreateLangDialog.m_filePath">
            <summary>
            Path to source configuration file.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmCreateLangDialog.m_config">
            <summary>
            Configurator instance.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmCreateLangDialog.m_inheritName">
            <summary>
            Inheritance configuration language name.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmCreateLangDialog.m_confName">
            <summary>
            Name of new configuration.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmCreateLangDialog.m_regName">
            <summary>
            Regex for validating name.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmCreateLangDialog.#ctor">
            <summary>
            Constuctor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmCreateLangDialog.#ctor(Syncfusion.Windows.Forms.Edit.Implementation.Config.Config)">
            <summary>
            Constructor.
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmCreateLangDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmCreateLangDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmCreateLangDialog.btnFilePath_Click(System.Object,System.EventArgs)">
            <summary>
            Choose source configuration file.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmCreateLangDialog.comboLanguages_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Inheritance name of language.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmCreateLangDialog.txtName_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Name of configuration changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmCreateLangDialog.txtName_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Validating Name of language.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmCreateLangDialog.InfillLanguageList">
            <summary>
            Infills list of defind configurations.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmCreateLangDialog.InfillDefaultLanguages">
            <summary>
            Infills default languages list.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmCreateLangDialog.InfillCustomLanguages">
            <summary>
            Infills list of languages from custom source file.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmCreateLangDialog.GenerateRegex">
            <summary>
            Creates regex instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmCreateLangDialog.EnableDoubleBuffering">
            <summary>
            Enables double buffering.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmCreateLangDialog.FilePath">
            <summary>
            Gets path to source config file. if NULL - from resources.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmCreateLangDialog.ConfigurationName">
            <summary>
            Gets name of new configuration.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmCreateLangDialog.InheritanceName">
            <summary>
            Gets inheritance configuration language name.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog">
            <summary>
            Find text tool window.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.DEF_REGEXP">
            <summary>
            Regexp symbols for inserting in text searching field.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.m_control">
            <summary>
            Control instance.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.m_bInSelection">
            <summary>
            Indicates if search in selected text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.m_attributes">
            <summary>
            Indicates features for searching.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.m_searchType">
            <summary>
            Type of searching.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.m_searchText">
            <summary>
            Text for searching.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.m_history">
            <summary>
            History of searched text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.m_bIndexChaged">
            <summary>
            Indicates if we must change history because selectee index in combobox
            has been changed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.m_activeCombo">
            <summary>
            Instance on active comboBox.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.#ctor">
            <summary>
            Protected constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.#ctor(Syncfusion.Windows.Forms.Edit.StreamEditControl)">
            <summary>
            Constructor.
            </summary>
            <param name="parent">Instance of control class.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.FindNext">
            <summary>
            Invokes searching process.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.CreateSearchRegex">
            <summary>
            Creates regular expression object that can be used for search.
            </summary>
            <returns>Regular expression object or null if there 
            is no sufficient information for search.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.cmbFind_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Reacts on changing finding text.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.btnClose_Click(System.Object,System.EventArgs)">
            <summary>
            Hides dialog.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.radioButton_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Changes searching source.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.SearchAttr_Changed(System.Object,System.EventArgs)">
            <summary>
            Changes seraching attributes.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.Find_Text(System.Object,System.EventArgs)">
            <summary>
            Defines search type and invokes searching process.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.cmbFind_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Raises when slected item from history.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.btnTempaltes_Click(System.Object,System.EventArgs)">
            <summary>
            Shows context menu.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.Regexp_Insert(System.Object,System.EventArgs)">
            <summary>
            Inserts Regexp template to combo box.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Overriden. Hides dialog.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.OnLoad(System.EventArgs)">
            <summary>
            Overriden. Invokes when dialog shows first time.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.OnActivated(System.EventArgs)">
            <summary>
            Overriden. Raises when dialog shows.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.ToggleButtons">
            <summary>
            Enables or disables Regexp button.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.GetActiveComboBox">
            <summary>
            Returns ComboBox for data inserting.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.ToggleElementsEnable">
            <summary>
            Disables or enables elements which depends from searching text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.HideDialog">
            <summary>
            Hides dialog.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.EnableDoubleBuffering">
            <summary>
            Enables double buffering.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.SearchText">
            <summary>
            Gets searching text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmFindDialog.History">
            <summary>
            Gets searching history.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Dialogs.frmGoDialog">
            <summary>
            Dialog for jumping to defined line in the code.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmGoDialog.DEF_FORMAT">
            <summary>
            Default text on the dialog.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmGoDialog.m_iMinNumber">
            <summary>
            Minimum number line.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmGoDialog.m_iMaxNumber">
            <summary>
            Maximum line number.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmGoDialog.m_strLabel">
            <summary>
            Text on the dialog.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmGoDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmGoDialog.#ctor">
            <summary>
            Default constructor. ( Required for designer )
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmGoDialog.#ctor(System.Windows.Forms.Form)">
            <summary>
            Creates new go dialog.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmGoDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmGoDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmGoDialog.UpdateLabel">
            <summary>
            Changes label text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmGoDialog.OnLoad(System.EventArgs)">
            <summary>
            Loads dialog.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmGoDialog.EnableDoubleBuffering">
            <summary>
            Enables double buffering.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmGoDialog.txtNumber_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Raises when text text box is cnagned.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmGoDialog.LineLabelFormat">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmGoDialog.MaxLine">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmGoDialog.MinLine">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmGoDialog.LineNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmGoDialog.IsValidNumber">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Dialogs.frmKeysBinding">
            <summary>
            Summary description for frmKeysBinding.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmKeysBinding.m_parent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmKeysBinding.m_convert">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmKeysBinding.m_keysList">
            <summary>
            List of the keys, used in current key-sequence.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmKeysBinding.m_container">
            <summary>
            Key-bindings container.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmKeysBinding.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmKeysBinding.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmKeysBinding.#ctor(Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor,Syncfusion.Shared.Utils.KeyBinding.IKeyBinderContainer)">
            <summary>
            
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmKeysBinding.EnableDoubleBuffering">
            <summary>
            Enables double buffering.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmKeysBinding.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmKeysBinding.InitializeListCommands">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmKeysBinding.InitializeComboList(Syncfusion.Shared.Utils.KeyBinding.IKeyCommandBinder[])">
            <summary>
            
            </summary>
            <param name="keys"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmKeysBinding.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmKeysBinding.UpdateControlsInfill">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmKeysBinding.lstCommands_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmKeysBinding.btnRemove_Click(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmKeysBinding.btnAssign_Click(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmKeysBinding.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmKeysBinding.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmKeysBinding.frmKeysBinding_Load(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmKeysBinding.txtShortcut_TextChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmKeysBinding.KeyBinder">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Dialogs.frmNotificationDialog">
            <summary>
            Result Dialog window.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmNotificationDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmNotificationDialog.m_bHideCancel">
            <summary>
            Indicates if hide Cancel button.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmNotificationDialog.m_okLocation">
            <summary>
            Ok button location.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmNotificationDialog.m_parent">
            <summary>
            Parent window for this dialog,
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmNotificationDialog.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmNotificationDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmNotificationDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmNotificationDialog.Show(System.Windows.Forms.Form,System.String,System.String,System.String,System.Boolean,System.Drawing.Image)">
            <summary>
            Shows modal dialog.
            </summary>
            <param name="parent">Parent for this dialog. ( Can be NULL )</param>
            <param name="captionText">Caption text of dialog. ( Can be NULL )</param>
            <param name="noticeText">Notification Text. ( Can be NULL )</param>
            <param name="checkText">Text near CheckBox. ( Can be NULL )</param>
            <param name="hideCancel">if TRUE - hides Cancel button.</param>
            <param name="icon">Icon on dialog. ( Can be NULL )</param>
            <returns>TRUE - if CheckBox was checked, FALSE - Otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmNotificationDialog.ShowDialog">
            <summary>
            Shows modal dialog.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmNotificationDialog.ToggleCancelButton(System.Boolean)">
            <summary>
            Hides or shows Cancel button.
            </summary>
            <param name="hideButton"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmNotificationDialog.EnableDoubleBuffering">
            <summary>
            Enables double buffering.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmNotificationDialog.DialogIcon">
            <summary>
            Gets or sets icon on the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmNotificationDialog.NotifyText">
            <summary>
            Gets or sets notice message for dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmNotificationDialog.CheckText">
            <summary>
            Gets or sets string text near Check box on the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmNotificationDialog.DialogCaption">
            <summary>
            Gets or sets caption text of the dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmNotificationDialog.HideCancel">
            <summary>
            Gets or sets if hide cancel button or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmNotificationDialog.DialogParent">
            <summary>
            Gets or sets parent form for this dialog.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Dialogs.frmReplaceDialog">
            <summary>
            Dialog for replacing defined text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmReplaceDialog.m_replaceHistory">
            <summary>
            History of searched text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmReplaceDialog.m_replaceText">
            <summary>
            Text on which defined can be replaced.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmReplaceDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmReplaceDialog.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmReplaceDialog.#ctor(Syncfusion.Windows.Forms.Edit.StreamEditControl)">
            <summary>
            
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmReplaceDialog.Dispose(System.Boolean)">
            <summary>
            Disposes all resources.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmReplaceDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmReplaceDialog.ReplaceNext">
            <summary>
            Invokes replacing process.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmReplaceDialog.ToggleButtons">
            <summary>
            Overriden. Disables/enables regexp buttons.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmReplaceDialog.ToggleElementsEnable">
            <summary>
            Overriden. Enables/disables eplace buttons.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmReplaceDialog.GetActiveComboBox">
            <summary>
            Returns active comboBox for editing data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmReplaceDialog.OnActivated(System.EventArgs)">
            <summary>
            Overriden. Raises when dialog shows.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmReplaceDialog.btnReplaceTemplates_Click(System.Object,System.EventArgs)">
            <summary>
            Shows context menu.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmReplaceDialog.Replace_Text(System.Object,System.EventArgs)">
            <summary>
            Defines search type and invokes replacing process.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmReplaceDialog.cmbReplace_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Raises when slected item from replace history.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmReplaceDialog.cmbReplace_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Enables/disables replace buttons.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmReplaceDialog.ReplaceHistory">
            <summary>
            Gets history of replacing text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmReplaceDialog.ReplaceText">
            <summary>
            Gets or sets text for replacing.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Dialogs.frmSimpleAdd">
            <summary>
            Class for adding simple text item somewhere.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmSimpleAdd.DEF_STEP">
            <summary>
            Step between control
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmSimpleAdd.DEF_ERROR">
            <summary>
            Error message.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmSimpleAdd.m_validator">
            <summary>
            Regex validator for checking input.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmSimpleAdd.m_clrValid">
            <summary>
            Color for valid text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmSimpleAdd.m_clrInvalid">
            <summary>
            Color for invalid text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmSimpleAdd.m_bReverse">
            <summary>
            Reverse validation.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmSimpleAdd.m_bSuccess">
            <summary>
            Text is valid or not.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.frmSimpleAdd.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmSimpleAdd.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmSimpleAdd.#ctor(System.String,System.String,System.Text.RegularExpressions.Regex)">
            <summary>
            Creates new dialog object.
            </summary>
            <param name="value"></param>
            <param name="example"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmSimpleAdd.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmSimpleAdd.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmSimpleAdd.ShouldSerializeValidColor">
            <summary>
            Method check is for property ValidColor code serialization required.
            Method used by IDE for code Dom serialization.
            </summary>
            <returns>True - serialization required, otherwise False</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmSimpleAdd.UpdateFormSize">
            <summary>
            According to user setting update size of form
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmSimpleAdd.UpdateControlColor">
            <summary>
            According to validation options update control font color
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmSimpleAdd.EnableDoubleBuffering">
            <summary>
            Enables double buffering.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmSimpleAdd.txtValue_TextChanged(System.Object,System.EventArgs)">
            <summary>
            On text enter check is value correct or not
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.frmSimpleAdd.txtValue_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Validating value by regexp.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmSimpleAdd.Value">
            <summary>
            Get or Set form input control value
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmSimpleAdd.Example">
            <summary>
            Get or set example of inputed value for better understanding how to
            enter value. Needed for better user GUI.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmSimpleAdd.Validator">
            <summary>
            GET or SET Regular exspression which validate input control data
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmSimpleAdd.ValidColor">
            <summary>
            Color of font in input control for valid value
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmSimpleAdd.InvalidColor">
            <summary>
            Color of font in input control for invalid value
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.frmSimpleAdd.ReverseValidation">
            <summary>
            Gets or sets value which indicates if validation is reverse.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.DEF_REGEX">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.DEF_VALIDATION">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.DEF_EXAMPLE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.DEF_STEP">
            <summary>
            Step between controls
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.m_arrItems">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.m_validation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.m_strExample">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.m_bReverse">
            <summary>
            Reverse validation.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.btnAdd_Click(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.btnRemove_Click(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.ListItemsEditor_Resize(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.Add(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.AddRange(System.String[])">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.Remove(System.String)">
            <summary>
            Removes item from list.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.Clear">
            <summary>
            Deletes all items from the list.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.UpdateItems">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.EnableDoubleBuffering">
            <summary>
            Enables double buffering.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.ItemsList">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.Validator">
            <summary>
            GET or SET Regular exspression which validate input control data
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.Example">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.ReverseValidation">
            <summary>
            Gets or sets value which indicates if validation is reverse.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.OnAddClick">
            <summary>
            On Add button click
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Dialogs.ListItemsEditor.OnRemoveClick">
            <summary>
            On Remove Button click
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Dialogs.RegexConverter">
            <summary>
            Designer tool. Allows edit reges as string.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.RegexConverter.DEF_REGEX">
            <summary>
            Regex options.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.RegexConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.RegexConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.RegexConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.RegexConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Dialogs.ShortcutTextBox">
            <summary>
            Summary description for ShortcutTextBox.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.ShortcutTextBox.DEF_NUMBERS">
            <summary>
            Numbers regular expression.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.ShortcutTextBox.DEF_MODIFIER">
            <summary>
            Key modifiers regular expression.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.ShortcutTextBox.DEF_REGEX">
            <summary>
            RegEx default options.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.ShortcutTextBox.m_keys">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.ShortcutTextBox._numbers">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.ShortcutTextBox._modifier">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.ShortcutTextBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ShortcutTextBox.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ShortcutTextBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ShortcutTextBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ShortcutTextBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ShortcutTextBox.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            
            </summary>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ShortcutTextBox.ResetSequence">
            <summary>
            Resets key sequence.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ShortcutTextBox.UpdateText">
            <summary>
            Updates text according to the currently entered sequence.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ShortcutTextBox.FriendlyNamedKeys(System.Windows.Forms.Keys)">
            <summary>
            
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ShortcutTextBox.IsDigit(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ShortcutTextBox.IsModifierKey(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.ShortcutTextBox.EnteredKeys">
            <summary>
            GET entered sequence.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Dialogs.UpdateTooltipEventArgs">
            <summary>
            Helper class that keeps data about some hint when UpdateTooltip event is raised.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.UpdateTooltipEventArgs.Text">
            <summary>
            Text of the tooltip.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.UpdateTooltipEventArgs.HintedArea">
            <summary>
            Rectangle, that represents an object which has this tooltip.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.UpdateTooltipEventArgs.X">
            <summary>
            Mouse X coordinate in client coordinates.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.UpdateTooltipEventArgs.Y">
            <summary>
            Mouse Y coordinate in client coordinates.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.UpdateTooltipEventArgs.#ctor">
            <summary>
            Creates and initializes UpdateTooltipEventArgs.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.UpdateTooltipEventArgs.#ctor(System.String)">
            <summary>
            Creates and initializes UpdateTooltipEventArgs.
            </summary>
            <param name="text">Text of the tooltip.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.UpdateTooltipEventArgs.#ctor(System.String,System.Drawing.Rectangle)">
            <summary>
            Creates and initializes UpdateTooltipEventArgs.
            </summary>
            <param name="text">Text of the tooltip.</param>
            <param name="rect">Hinted rectangle.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Dialogs.UpdateTooltipEventHandler">
            <summary>
            Handler for the UpdateTooltip event.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Dialogs.ToolTipEx">
            <summary>
            Custom tooltip.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.ToolTipEx.DEF_TEXT_OFFSET">
            <summary>
            Offset of the text from the borders.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.ToolTipEx.m_strText">
            <summary>
            Text of the tooltip.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.ToolTipEx.m_parent">
            <summary>
            Parent of the control.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.ToolTipEx.m_timer">
            <summary>
            Timer, that have to wait for specified delay time.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.ToolTipEx.m_rectHintedRectangle">
            <summary>
            Area, that contains object to be hinted with the current text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Dialogs.ToolTipEx.m_graphicsTemp">
            <summary>
            Temporary graphics object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ToolTipEx.#ctor">
            <summary>
            Hides default constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ToolTipEx.#ctor(System.Windows.Forms.Control)">
            <summary>
            Creates new tootlip control and sets his parent.
            </summary>
            <param name="parent">Parent control of the tooltip.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ToolTipEx.Dispose">
            <summary>
            Disposes all used resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ToolTipEx.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints background of the tooltip.
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ToolTipEx.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints tooltip itself.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ToolTipEx.m_timer_Tick(System.Object,System.EventArgs)">
            <summary>
            Updates text of the tooltip, shows it and stops timer.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ToolTipEx.m_parent_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes mouse movement.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ToolTipEx.m_parent_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Hides tooltip when mouse button is pressed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ToolTipEx.ResetTimer">
            <summary>
            Hides tooltip and resets timer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ToolTipEx.ResetText">
            <summary>
            Resets text and hinted area.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Dialogs.ToolTipEx.UpdateTooltipSize">
            <summary>
            Updates size of the toolbar.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Dialogs.ToolTipEx.ShowDelay">
            <summary>
            GET, SET delay in miliseconds before show.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Dialogs.ToolTipEx.UpdateTooltip">
            <summary>
            Event, that is raised when text should be updated.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config">
            <summary>
            class - configurator  :  responsible for
            reading xml - config, creating array of ConfigLanguage
            [ ConfigLanguage - obj which describes
            concrete programming language : how to parse current source ]
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.IConfig">
            <summary>
            Interface provide base functionality for reading and writting configuration
            needed for coloring.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IConfig.Create(System.String)">
            <summary>
            Create in configuration new language formatter
            </summary>
            <param name="name">unique name of language</param>
            <returns>New instance of language config object</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IConfig.Open(System.String)">
            <summary>
            Open config file by it file path
            </summary>
            <param name="configFile">file path to config file</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IConfig.Open(System.IO.Stream)">
            <summary>
            Read config from stream
            </summary>
            <param name="configFile">stream which contains configruration for
            parsers</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IConfig.Open(System.Xml.XmlDocument)">
            <summary>
            XML Document which contains configuration rules for parsers
            </summary>
            <param name="configFile">XML Document</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IConfig.AppendConfig(System.String)">
            <summary>
            If config file devided by user on many small one for each language then
            this methods will help him to load them in one call.
            </summary>
            <param name="configFile">file path to config file</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IConfig.AppendConfig(System.IO.Stream)">
            <summary>
            If config file devided by user on many small one for each language then
            this methods will help him to load them in one call.
            </summary>
            <param name="configFile">Stream with XML config</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IConfig.AppendConfig(System.Xml.XmlDocument)">
            <summary>
            If config file devided by user on many small one for each language then
            this methods will help him to load them in one call.
            </summary>
            <param name="configFile">XML document which contains formatting data</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IConfig.Reset">
            <summary>
            Reset to default configuration
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IConfig.Save(System.String)">
            <summary>
            Save current configuration to file
            </summary>
            <param name="fileName">output file name</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IConfig.Save(System.IO.Stream)">
            <summary>
            Save configuration to output stream
            </summary>
            <param name="config">stream for config saving</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IConfig.Save(System.Xml.XmlDocument)">
            <summary>
            Save configuration to XML Document
            </summary>
            <param name="config">XML document to which data must be saved</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfig.Item(System.Int32)">
            <summary>
            Get configuration for language by index
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfig.Item(System.String)">
            <summary>
            Get configuration for language by specified name
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfig.KnownLanguages">
            <summary>
            Get list of known to configuration languages
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfig.DefaultLanguage">
            <summary>
            GET default language configuration that is stored in embebbed resource.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Interfaces.IConfig.ConfigurationChanged">
            <summary>
            Event, that is raised when 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.DEF_CONFIG1">
            <summary>
            Reference on default config file provided with control as embedded resource
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.DEF_DEFAULT_LANGUAGE_NAME">
            <summary>
            Default language name.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.DEF_CONF_FILE">
            <summary>
            Path to default configuration file.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config._configStream">
            <summary>
            Stream of default configuration file.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.m_InDesign">
            <summary>
            Design mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.m_strFileName">
            <summary>
            Config file name which we read from.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.m_arrCL">
            <summary>
            Storage for array of IConfigLanguage.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.m_hashLanguages">
            <summary>
            Return  IConfigLaguage by it's name [ like "Delphi" ].
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.m_hashExtentsion">
            <summary>
            Return  IConfigLaguage by extension
            like( .pas return  Delphi IConfigLaguage, .cpp or .c CPP IConfigLaguage )
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.m_serializer">
            <summary>
            XML Serialization provider.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.Create(System.String)">
            <summary>
            Create in configuration new language formatter
            </summary>
            <param name="name">unique name of language</param>
            <returns>New instance of language config object</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.GetLanguage(System.String)">
            <summary>
            Detect language by file name extension.
            </summary>
            <param name="strExt"></param>
            <returns> IConfigLanguage - config obj for parsing. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.#ctor(System.Boolean)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.#ctor(System.String)">
            <summary>
            Creates config using file name.
            </summary>
            <param name="strFileName">Xml file name.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.#ctor(System.IO.Stream)">
            <summary>
            Creates config using stream.
            </summary>
            <param name="cfgStream">Stream which filled with data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.#ctor(System.Xml.XmlDocument)">
            <summary>
            Creates config using xmlDocument.
            </summary>
            <param name="xmlDoc">Obj wich represents xml file.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.Open(System.String)">
            <summary>
            Open config file by  path.
            </summary>
            <param name="configFile">File name of config.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.Open(System.IO.Stream)">
            <summary>
            Reads config from stream.
            </summary>
            <param name="configFile">stream which contains configruration for
            parsers.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.Open(System.Xml.XmlDocument)">
            <summary>
            XML Document which contains configuration rules for parsers.
            </summary>
            <param name="configFile">XML Document.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.AppendConfig(System.String)">
            <summary>
            If config file devided by user on many small one for each language then
            this methods will help him to load them in one call.
            </summary>
            <param name="configFile">File path to config file.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.AppendConfig(System.String,Syncfusion.Windows.Forms.Edit.Enums.DuplicatesOptions)">
            <summary>
            If config file devided by user on many small one for each language then
            this methods will help him to load them in one call.
            </summary>
            <param name="configFile">file path to config file</param>
            <param name="duplicatesProcessing">Application`s behaviour on duplicates occurence.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.AppendConfig(System.IO.Stream)">
            <summary>
            If config file devided by user on many small one for each language then
            this methods will help him to load them in one call.
            </summary>
            <param name="configFile">Stream with XML config</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.AppendConfig(System.IO.Stream,Syncfusion.Windows.Forms.Edit.Enums.DuplicatesOptions)">
            <summary>
            If config file devided by user on many small one for each language then
            this methods will help him to load them in one call.
            </summary>
            <param name="configFile">Stream with XML config</param>
            <param name="duplicatesProcessing">Application`s behaviour on duplicates occurence.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.AppendConfig(System.Xml.XmlDocument)">
            <summary>
            If config file devided by user on many small one for each language then
            this methods will help him to load them in one call.
            </summary>
            <param name="configFile">XML document which contains formatting data</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.AppendConfig(System.Xml.XmlDocument,Syncfusion.Windows.Forms.Edit.Enums.DuplicatesOptions)">
            <summary>
            If config file devided by user on many small one for each language then
            this methods will help him to load them in one call.
            </summary>
            <param name="configFile">XML document which contains formatting data</param>
            <param name="duplicatesProcessing">Application`s behaviour on duplicates occurence.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.Reset">
            <summary>
            Reset to default configuration
            read default config from resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.Save(System.String)">
            <summary>
            Save current configuration to file
            </summary>
            <param name="fileName">output file name</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.Save(System.IO.Stream)">
            <summary>
            Save configuration to output stream
            </summary>
            <param name="config">stream for config saving</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.Save(System.Xml.XmlDocument)">
            <summary>
            Save configuration to XML Document
            </summary>
            <param name="config">XML document to which data must be saved</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.Add(Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage,Syncfusion.Windows.Forms.Edit.Enums.DuplicatesOptions)">
            <summary>
            Adds configuration language to config.
            </summary>
            <param name="language">Language for adding.</param>
            <param name="duplicatesProcessing"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.ProcessAndAppend(Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage[],Syncfusion.Windows.Forms.Edit.Enums.DuplicatesOptions)">
            <summary>
            Appends languages to the configuration.
            </summary>
            <param name="languages">Array of languages to append.</param>
            <param name="duplicatesProcessing">Specifies how to process duplicates.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.CreateLangHash">
            <summary>
            util method for config hashes sync.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.AppendDefaultLanguage">
            <summary>
            Appends default language from embebed resource.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.Remove(Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage)">
            <summary>
            Removes language from collection.
            </summary>
            <param name="language">Language which must be removed.</param>
            <returns>TRUE - if language deleted, FALSE - otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.OnConfigurationChanged">
            <summary>
            Raises ConfigurationChanged event.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.ConfigurationChanged">
            <summary>
            Event, that is raised when 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.DefConfigStream">
            <summary>
            Gets stream of default configuration document.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.Item(System.Int32)">
            <summary>
            Get configuration for language by index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.Item(System.String)">
            <summary>
            Get configuration for language by specified name
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.KnownLanguageNames">
            <summary>
            Get list of known to configuration language names.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.KnownLanguages">
            <summary>
            Gets list of known languages.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.Config.DefaultLanguage">
            <summary>
            GET default language configuration that is stored in embebbed resource.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConditionState">
            <summary>
            State of the condition.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigCondition">
            <summary>
            Class which indicates state of condition.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigCondition.m_ConditionState">
            <summary>
            State of the condition: ON or OFF
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigCondition.m_Name">
            <summary>
            Name of the condition.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigCondition.State">
            <summary>
            State of the condition: ON or OFF
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigCondition.Name">
            <summary>
            Name of the condition.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage">
            <summary>
            Class will describe how to parse source file of this type.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager">
            <summary>
            Operates by formats.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection">
            <summary>
            Summary description for EventBaseCollection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection.m_bSkipEvents">
            <summary>
            If TRUE then class must skip all event raising code, otherwise FALSE
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection.OnClear">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection.OnClearComplete">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection.OnRemove(System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection.QuietMode">
            <summary>
            get or set does collection work in silent mode without raising any event
            to user or in normal mode.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection.OnChanged">
            <summary>
            Raised on any collection change
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection.Clearing">
            <summary>
            Raised by <see cref="!:OnCleal"/> method
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection.Cleared">
            <summary>
            Raised by <see cref="M:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection.OnClearComplete"/> method
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection.Inserting">
            <summary>
            Raised by <see cref="M:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection.OnInsert(System.Int32,System.Object)"/> method
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection.Inserted">
            <summary>
            Raised by <see cref="M:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection.OnInsertComplete(System.Int32,System.Object)"/> method
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection.Removing">
            <summary>
            Raised by <see cref="M:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection.OnRemove(System.Int32,System.Object)"/> method
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection.Removed">
            <summary>
            Raised by <see cref="M:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection.OnRemoveComplete(System.Int32,System.Object)"/> method
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection.Setting">
            <summary>
            Raised by <see cref="M:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection.OnSet(System.Int32,System.Object,System.Object)"/> method
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection.Set">
            <summary>
            Raised by <see cref="M:Syncfusion.Windows.Forms.Edit.Utils.EventBaseCollection.OnSetComplete(System.Int32,System.Object,System.Object)"/> method
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.IFormatManager">
            <summary>
            Formats Manager declaration interface
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IFormatManager.Add(System.String)">
            <summary>
            Create new format with unique name. FormatType will be set to
            Custom value.
            </summary>
            <param name="formatName">new format unique name</param>
            <returns>Created and added into collection format reference</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IFormatManager.Add(System.String,Syncfusion.Windows.Forms.Edit.Interfaces.ISnippetFormat)">
            <summary>
            Create new format inherited from source format
            </summary>
            <param name="formatName">unique format name</param>
            <param name="source">format which setting must be inherited</param>
            <returns>Created and added into collection format reference</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IFormatManager.Add(System.String,System.String)">
            <summary>
            Create new format inherited from source format
            </summary>
            <param name="formatName">unique format name</param>
            <param name="sourceName">Get source format by it unique name</param>
            <returns>Created and added into collection format reference</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IFormatManager.Remove(Syncfusion.Windows.Forms.Edit.Interfaces.ISnippetFormat)">
            <summary>
            Remove formmat from collection by it reference
            </summary>
            <param name="format">reference on format</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IFormatManager.Remove(System.String)">
            <summary>
            Remove format from collection by it unique name
            </summary>
            <param name="formatName">unique format name</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IFormatManager.Reset">
            <summary>
            Collection reset default formats settings and remove from
            collection all user specified formats.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IFormatManager.Item(System.String)">
            <summary>
            Get format by name
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IFormatManager.Item(Syncfusion.Windows.Forms.Edit.Enums.FormatType)">
            <summary>
            Get format by type, does not work for FormatType.Custom
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IFormatManager.Item(System.Int32)">
            <summary>
            Get format by index
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IFormatManager.MaxLineHeight">
            <summary>
            This is calculated value and it hold maximum heigh of line according to
            known to object formats.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IFormatManager.MinLineHeight">
            <summary>
            This is calculated value an it hold minimal size of line according to
            known for object formats
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IFormatManager.MaxCharWidth">
            <summary>
            This is calculated value and it hold maximum char width according to
            known for object formats.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IFormatManager.MinCharWidth">
            <summary>
            This is calcualted value and it hold minimum char width according to
            formats known by object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IFormatManager.TabReplaceString">
            <summary>
            String, to be placed instead of tab.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IFormatManager.ShowWhiteSpaces">
            <summary>
            GET, SET sing of showing whitespaces as bullets.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.IObjectInitialize">
            <summary>
            Interface publish intialize functionality of object
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IObjectInitialize.Initialize">
            <summary>
            Initializes object.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.IXMLDataProvider">
            <summary>
            Interface for saving data to XML.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IXMLDataProvider.AppendToXML(System.Xml.XmlElement)">
            <summary>
            Attaches it`s data to some XML element.
            </summary>
            <param name="parent">Parent elements, data have to be saved to.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IXMLDataProvider.AppendToXML(System.Xml.XmlTextWriter)">
            <summary>
            Writes data to XML.
            </summary>
            <param name="writer">Writer, data have to be saved to.</param>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.DEF_DEFAULT_FORMAT_NAME">
            <summary>
            Default name of the format.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.DEF_FONT_NAME">
            <summary>
            Default name of the font.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.defFormat">
            <summary>
            Default Format.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.m_hashNames">
            <summary>
            store name-to-format object
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.m_iMaxLineHeight">
            <summary>
            This is calculated value and it hold maximum heigh of line according to
            known to object formats.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.m_iMinLineHeight">
            <summary>
            This is calculated value an it hold minimal size of line according to
            known for object formats
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.m_iMaxCharWidth">
            <summary>
            This is calculated value and it hold maximum char width according to
            known for object formats.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.m_iMinCharWidth">
            <summary>
            This is calcualted value and it hold minimum char width according to
            formats known by object.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.m_BrushesHash">
            <summary>
            Hash of the preallocated brushes.
            Key - Style, Value - hashtable ( Key - Color, Value - Brush )
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.m_SolidBrushesHash">
            <summary>
            Hash of the preallocated solid brushes.
            Key - Color, Value - Brush
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.m_PensHash">
            <summary>
            Hashtable of the pens.
            Key - color. Value - Pen.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.m_standartFormatNames">
            <summary>
            Hashtable of standart format names.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.m_iSpacesInTab">
            <summary>
            Count of space characters, the tab 
            character is to be replaced with.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.m_textInsteadTab">
            <summary>
            Text( array of spaces ), the tab 
            character is to be replaced with.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.m_bShowWhiteSpaces">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.Add(Syncfusion.Windows.Forms.Edit.Interfaces.ISnippetFormat)">
            <summary>
            Adds format to collection.
            </summary>
            <param name="format"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.Add(System.String)">
            <summary>
            Creates new format and adds it to collection.
            </summary>
            <param name="formatName"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.Add(System.String,Syncfusion.Windows.Forms.Edit.Interfaces.ISnippetFormat)">
            <summary>
            Adds new format to collection.
            </summary>
            <param name="formatName"></param>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.Add(System.String,System.String)">
            <summary>
            Adds new format to collection.
            </summary>
            <param name="formatName"></param>
            <param name="sourceName"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.Remove(Syncfusion.Windows.Forms.Edit.Interfaces.ISnippetFormat)">
            <summary>
            Removes format from the collection.
            </summary>
            <param name="format"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.Remove(System.String)">
            <summary>
            Removes format from the collection.
            </summary>
            <param name="formatName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.GetBrush(System.Drawing.Color)">
            <summary>
            Creates or get`s from the cache solid brush.
            </summary>
            <param name="color">Color of the needed brush.</param>
            <returns>Solid brush.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.GetBrush(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Creates or get`s from the cache brush with a needed hatch style.
            </summary>
            <param name="style">HatchStyle of the needed brush.</param>
            <param name="color">Color of the needed brush.</param>
            <returns>Brush. You do not have to dispose it later,
            it will be done automatically.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.GetPen(System.Drawing.Color)">
            <summary>
            Creates or get`s from the cache pen with a needed color.
            </summary>
            <param name="penColor">Color of the needed pen.</param>
            <returns>Pen. You do not have to dispose this pen later,
            it will be done automatically.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.AppendToXML(System.Xml.XmlElement)">
            <summary>
            Append it`s data to given XML.
            </summary>
            <param name="parent">Parent element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.AppendToXML(System.Xml.XmlTextWriter)">
            <summary>
            Append it`s data to given XML.
            </summary>
            <param name="writer">Parent element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.Initialize">
            <summary>
            Initializes object.
            Rebuilds hashes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.RebuildHashes">
            <summary>
            Rebuilds hash of the name:format pairs.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.Recalculation">
            <summary>
            Recalcualtes Min/Max line heights.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.WriteXml(System.Xml.XmlWriter)">
            <summary>
            I need this method for custom serialiation
            to write my own complex object.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.GetSchema">
            <summary>
            Gets XSD shema for serialization.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.ReadXml(System.Xml.XmlReader)">
            <summary>
            i need this method for custom serialiation
            to read my own complex object
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.Dispose">
            <summary>
            Disposes all used resources: Brushes, Fonts.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.Item(System.String)">
            <summary>
            get format by name
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.Item(Syncfusion.Windows.Forms.Edit.Enums.FormatType)">
            <summary>
            Gets format by TormatType.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.Item(System.Int32)">
            <summary>
            get format by index
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.MaxLineHeight">
            <summary>
            This is calculated value and it hold maximum heigh of line according to
            known to object formats.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.MinLineHeight">
            <summary>
            This is calculated value an it hold minimal size of line according to
            known for object formats
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.MaxCharWidth">
            <summary>
            This is calculated value and it hold maximum char width according to
            known for object formats.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.MinCharWidth">
            <summary>
            This is calcualted value and it hold minimum char width according to
            formats known by object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.SpacesInTab">
            <summary>
            GET, SET count of space characters, the tab 
            character is to be replaced with.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.TabReplaceString">
            <summary>
            GET text( array of spaces ), the tab 
            character is to be replaced with.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.FormatManager.ShowWhiteSpaces">
            <summary>
            GET, SET sing of showing whitespaces as bullets.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage">
            <summary>
            This interface publish lexem-parser configuration functionality.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage.FindConfig(System.Int32)">
            <summary>
            GET lexem configuration by it`s ID.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage.ResetCaches">
            <summary>
            Resets all cached data. Must be called after every change of the configuration inside the language.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage.Language">
            <summary>
            Language friendly name
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage.OneCharTokenSplits">
            <summary>
            GET, SET commaon splitters.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage.Lexems">
            <summary>
            GET list of lexem configurations.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage.Splits">
            <summary>
            Array of multichar splitters (ex. ++, --, /*, */, //, /// )
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage.KnownFormats">
            <summary>
            Known for object formats. Here is list of defined in config file
            formats. If format not defined, but it belong to default formats
            specified by FormatType enum then will be used default configuration
            for it. Each string hold one extension.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage.Extensions">
            <summary>
            file extensions by which this language can be automaticaly linked
            to source file.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage.CaseInsensitive">
            <summary>
            Case insensitivity of the language.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem">
            <summary>
            This is lexem which control parsing of input stream
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.IsEqualToEnd(System.String)">
            <summary>
            Checks string to the equalition to end block.
            If end block is regular expression, input string will be checked by RegExp
            </summary>
            <param name="str">String to be checked</param>
            <returns>True if it can be treated as end block.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.IsEqualToContinue(System.String)">
            <summary>
            Checks string to the equalition to continue block.
            If continue block is regular expression, input string will be checked by RegExp
            </summary>
            <param name="str">String to be checked</param>
            <returns>True if it can be treated as continue block.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.IsEqualToBegin(System.String)">
            <summary>
            Checks string to the equalition to begin block.
            If begin block is regular expression, input string will be checked by RegExp
            </summary>
            <param name="str">String to be checked</param>
            <returns>True if it can be treated as begin block.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.FindConfigs(System.String)">
            <summary>
            Searches for configs in sub-lexems.
            Current lexem config is not tested for equalition.
            If config was not found in sub-lexems,
            it will be searched in parent.
            </summary>
            <param name="str">String to find.</param>
            <returns>List of config lexems.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.BeginBlock">
            <summary>
            Begin symbol or word for lexem.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.EndBlock">
            <summary>
            If lexem has begin symbol and end symbol then use this property for
            setting end symbol. if lemex is "keyword" then this property must be
            set to null value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.ContinueBlock">
            <summary>
            If lexem can be devided on multi lines or has some special rules
            which can continue lexem then us this setting.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.Priority">
            <summary>
            If many lexems has the same begin string then on parsing
            must be controled order in which lexem parser will try to
            interpret input as lexem...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.Type">
            <summary>
            Format which must be used for coloring. If format is Custom then
            used FormatName property for format identification
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.FormatName">
            <summary>
            FormatName which must be used for coloring.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.IsBeginRegex">
            <summary>
            Is BeginBlock property contains Regular expression or not
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.IsEndRegex">
            <summary>
            Is EndBlock property contains Regular expression or not
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.IsContinueRegex">
            <summary>
            Is ContinueBlock property contains Regular expression or not
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.IsPseudoEnd">
            <summary>
            Is the end-block just the way to exit higher by stack, or it is real ending of lexem.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.IsComplex">
            <summary>
            this flag indicate must parser parse lexem internals or not. For
            complex constructions data between begin and end blocks can have own
            formats.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.SubLexems">
            <summary>
            Specific sublexems for complex lexem.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.ParentConfig">
            <summary>
            Link to the parent, who keeps current lexem.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.OnlyLocalSublexems">
            <summary>
            This flag indicates, wheather parser should look for lexem`s config just in local array,
            or also look in parents
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.Format">
            <summary>
            GET format by Type and FormatName.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.VirtualConfig">
            <summary>
            GET link to the virtual config for current lexem.
            </summary>
            <remarks>
            Virtual configs does not support collapsed state.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.Condition">
            <summary>
            Condition, needed to pass chech. Format: name=ON|OFF
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.ConditionChanges">
            <summary>
            List of condition`s state changes after processing lexem.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.References">
            <summary>
            List of references.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.ID">
            <summary>
            Static uneque ID of configuration node.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.Language">
            <summary>
            Language, lexem belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.Indent">
            <summary>
            GET sign of auto-indenting after lexem with such config.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.NextID">
            <summary>
            GET ID of the lexem configuration, that follows right after current 
            one is parsed. Such lexem must be complex and "OnlyLocalSublexems",
            without beginblock and with endblock.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.DropContextChoiceList">
            <summary>
            GET sign of dropping down context choise list after entering text of the current lexem.
            </summary>
            <remarks>
            Can be set only on non-complex lexems.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem.DropContextPrompt">
            <summary>
            Get value, that shows whether context prompt should be shown after typing text of the current lexem.
            </summary>
            <remarks>
            Can be set only on non-complex lexems.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.m_strLanguage">
            <summary>
            Language friendly name ( like "Delphi" ).
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.m_arrExtensions">
            <summary>
            file extensions by which this language can be automaticaly linked
            to source file.
            ( like .cpp .c it's for c plus plus etc. )
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.m_arrLexem">
            <summary>
            storage of some comlplex constructions for this language
            like comments , string etc.
            ILexem represets each complex construction
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.m_arrSplitters">
            <summary>
            Storage of some  very small comlplex constructions for this language
            like ++ at cpp.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.m_strOneCharToken">
            <summary>
            One char token.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.m_arrKnownFormats">
            <summary>
            Known for object formats. Here is list of defined in config file
            formats. If format not defined, but it belong to default formats
            specified by FormatType enum then will be used default configuration
            for it. Each string hold one extension.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.m_keeper">
            <summary>
            Config search manager.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.m_format">
            <summary>
            Cache of the default format.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.m_ConditionChanges">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.m_emptyReferencesList">
            <summary>
            Empty list of references.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.m_bCaseInsensetive">
            <summary>
            Case insensetivity of the language.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.#ctor(System.String)">
            <summary>
            create config laguage using onle name
            </summary>
            <param name="name">name - of language ( like "Delphi" )</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.#ctor(System.String,System.String[])">
            <summary>
            create config laguage using name and extensions array
            </summary>
            <param name="name">name of language</param>
            <param name="extensions"> file's extension which CL supports </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.#ctor(System.String,System.String[],Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem[])">
            <summary>
            create config laguage using name and extensions array
             , lexem array
            </summary>
            <param name="name">language name</param>
            <param name="arrExt">  file's extension which CL supports </param>
            <param name="arrLexem"> lexem's array  </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.#ctor(System.String,System.String[],Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem[],System.String[])">
            <summary>
            create config laguage using name and extensions array
             , lexem array and splits array
            </summary>
            <param name="name">language name</param>
            <param name="arrExt">  file's extension which CL supports </param>
            <param name="arrLexem"> lexem's array  </param>
            <param name="arrSplits"> splits array </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.RaiseLanguageChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            Raises change language event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.RaiseMaxLineHeightChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            Raises change MaxLineHeight event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.RaiseMinLineHeightChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            Raises change MinLineHeight event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.RaiseMaxCharWidthChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            Raises change MaxCharWidth event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.RaiseMinCharWidthChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            Raises change MinCharWidth event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.OnLanguageChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            Call raiser for language.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.OnMaxLineHeightChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            Call raiser for MaxLineHeight.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.OnMinLineHeightChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            Call raiser for MinLineHeight.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.OnMaxCharWidthChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            Call raiser for MaxCharWidth.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.OnMinCharWidthChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            Call raiser for MinCharWidth.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.ToString">
            <summary>
            Represents string representation of the object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.FindConfig(System.Int32)">
            <summary>
            Gets lexem configuration by it`s ID.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.ResetCaches">
            <summary>
            Resets all cached data. Must be called after every change of the configuration inside the language.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.GetConfigLexem(Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem,System.Int32)">
            <summary>
            Searches lexem configuration by it`s ID in
            given configuration and it`s sub-configurations.
            </summary>
            <param name="root">Root of the search.</param>
            <param name="iID">ID if the configuration to be found.</param>
            <returns>Lexem configuration with given ID, or null if nothing was found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.Initialize">
            <summary>
            Initialize some objects
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.WriteXml(System.Xml.XmlWriter)">
            <summary>
            i need this method for custom serialiation
            to write my own complex object
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.ReadXml(System.Xml.XmlReader)">
            <summary>
            /// i need this method for custom serialiation
            to read my own complex object
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.ReadConfigLanguage(System.Xml.XmlReader)">
            <summary>
            
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.WriteConfigLanguage(System.Xml.XmlWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.ReadExtension(System.Xml.XmlReader)">
            <summary>
             read extensions from config
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.ReadLexems(System.Xml.XmlReader)">
            <summary>
            read lexems from config
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.ReadSplits(System.Xml.XmlReader)">
            <summary>
            read splits from config
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.IsEqualToEnd(System.String)">
            <summary>
            Checks string to the equalition to begin block.
            If begin block is regular expression, input string will be checked by RegExp
            </summary>
            <param name="str">String to be checked</param>
            <returns>True if it can be treated as begin block.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.IsEqualToContinue(System.String)">
            <summary>
            Checks string to the equalition to continue block.
            If continue block is regular expression, input string will be checked by RegExp
            </summary>
            <param name="str">String to be checked</param>
            <returns>True if it can be treated as continue block.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.IsEqualToBegin(System.String)">
            <summary>
            Checks string to the equalition to end block.
            If end block is regular expression, input string will be checked by RegExp
            </summary>
            <param name="str">String to be checked</param>
            <returns>True if it can be treated as end block.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.FindConfigs(System.String)">
            <summary>
            Searches for configs in sub-lexems.
            Current lexem config is not tested for equalition.
            If config was not found in sub-lexems,
            it will be searched in parent.
            </summary>
            <param name="str">String to find.</param>
            <returns>List of config lexems.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.Language">
            <summary>
            Language friendly name ( like "Delphi" ).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.OneCharTokenSplits">
            <summary>
            one char token
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.Lexems">
            <summary>
            storage of some comlplex constructions for this language
            like comments , string etc.
            ILexem represets each complex construction
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.Splits">
            <summary>
            storage of some  very small complex constructions for this language
            like ++ at cpp
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.Extensions">
            <summary>
            file extensions by which this language can be automaticaly linked
            to source file.
            ( like .cpp .c it's for c plus plus etc. )
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.KnownFormats">
            <summary>
            Known for object formats. Here is list of defined in config file
            formats. If format not defined, but it belong to default formats
            specified by FormatType enum then will be used default configuration
            for it. Each string hold one extension.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.CaseInsensitive">
            <summary>
            Case insensitivity of the language.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.LanguageChanged">
            <summary>
            Someone changed language
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.MaxLineHeightChanged">
            <summary>
            Someone changed MaxLineHeight
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.MinLineHeightChanged">
            <summary>
            Someone changed MinLineHeight
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.MaxCharWidthChanged">
            <summary>
            Someone changed MaxCharWidth
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.MinCharWidthChanged">
            <summary>
            Someone changed MinCharWidth
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.SubLexems">
            <summary>
            List of sub lexems.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.References">
            <summary>
            List of references.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.OnlyLocalSublexems">
            <summary>
            This flag indicates, wheather parser should look for lexem`s config just in local array,
            or also look in parents
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.Format">
            <summary>
            GET, SET format by Type and FormatName.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.VirtualConfig">
            <summary>
            GET link to the virtual config for current lexem.
            </summary>
            <remarks>
            Virtual configs does not support collapsed state.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.Condition">
            <summary>
            Condition, needed to pass chech. Format: name=ON|OFF
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.ConditionChanges">
            <summary>
            List of condition`s state changes after processing lexem.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.ID">
            <summary>
            Static uneque ID of configuration node.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.Syncfusion#Windows#Forms#Edit#Interfaces#IConfigLexem#Language">
            <summary>
            Language, lexem belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.IsPseudoEnd">
            <summary>
            GET, SET sign wheather the end-block is just the way to exit higher by stack, or it is real ending of lexem.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.Indent">
            <summary>
            GET sign of auto-indenting after lexem with such config.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.NextID">
            <summary>
            GET ID of the lexem configuration, that follows right after current
            one is parsed. Such lexem must be complex and "OnlyLocalSublexems",
            without beginblock and with endblock.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.DropContextChoiceList">
            <summary>
            GET sign of dropping down context choise list after entering text of the current lexem.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLanguage.DropContextPrompt">
            <summary>
            GET value, that shows whether context prompt should be shown after typing text of the current lexem.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem">
            <summary>
            class represents complex construction( like comment , keyword )
            ( how it must be parsed and rendered )
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.ICollapsableConfigLexem">
            <summary>
            Interface, that must be supported by lexem configurations.
            It describes behaviour of the lexem, that can be collapsed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ICollapsableConfigLexem.IsCollapsable">
            <summary>
            GET checks wheather this config supports collapsing.
            </summary>
            <remarks>
            If lexem is not collapsabe, all other properties does not have
            any influence to it`s behaviour.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ICollapsableConfigLexem.IsCollapseAutoNamed">
            <summary>
            GET flag, that specifies, wheather lexem
            can read it`s text from sub-lexems.
            </summary>
            <remarks>
            <para>
            If this property is false, then CollapseName will
            be used to name the region.
            </para>
            <para>
            Note: you should know that is this property is true, then on
            by-lexem reading you`ll have to wait while sub-lexems will be loaded,
            then processed by RegEx and only then you`ll have your collapsable lexem.
            </para>
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Windows.Forms.Edit.Interfaces.ICollapsableConfigLexem.AutoNameExpression" -->
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ICollapsableConfigLexem.AutoNameTemplate">
            <summary>
            Template of resulting text for auto-naming of collapse.
            </summary>
            <remarks>
            To specifie "$" symbol you must use $$.
            To use result of some named group, use ${name}.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ICollapsableConfigLexem.AutoNameRegex">
            <summary>
            Regular expression instance for AutoNameExpression.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ICollapsableConfigLexem.CollapseName">
            <summary>
            Name of the collapsed region.
            </summary>
            <remarks>
            If <see cref="P:Syncfusion.Windows.Forms.Edit.Interfaces.ICollapsableConfigLexem.IsCollapseAutoNamed"/> is true, then
            this property`s value will be used just when
            found name is empty.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.DEF_REGEX_NEWLINE_REPLACEMENT">
            <summary>
            Regular expression, that will substitute new line checks.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_lastIndex">
            <summary>
            Last autoassigned index.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_strBeginBlock">
            <summary>
            Begin symbol or word for lexem.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_strEndBlock">
            <summary>
             If lexem has begin symbol and end symbol then use this property for
            setting end symbol. if lemex is "keyword" then this property must be
            set to null value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_strContinueBlock">
            <summary>
            If lexem can be devided on multi lines or has some special rules
            which can continue lexem then us this setting.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_iPriority">
            <summary>
            If many lexems has the same begin string then on parsing
            must be controled order in which lexem parser will try to
            interpret input as lexem...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_Type">
            <summary>
            Format which must be used for coloring. If format is Custom then
            used FormatName property for format identification
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_strFormatName">
            <summary>
            FormatName which must be used for coloring.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_bIsBeginRegex">
            <summary>
            Is BeginBlock property contains Regular expression or not
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_bIsEndRegex">
            <summary>
            Is EndBlock property contains Regular expression or not
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_bIsContinueRegex">
            <summary>
            Is ContinueBlock property contains Regular expression or not
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_bIsComplex">
            <summary>
            this flag indicate must parser parse lexem internals or not. For
            complex constructions data between begin and end blocks can have own
            formats.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_arrSubLexems">
            <summary>
            sub-lexems which must be skipped if they found after BeginBlock
            string till EndBock string.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_arrReferences">
            <summary>
            List of references. If config was not found in sub lexems, then search is done in this list.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_bOnlyLocalSublexems">
            <summary>
            This flag indicates, wheather parser should look for lexem`s config just in local array,
            or also look in parents
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_ParentConfig">
            <summary>
            Parent of the config.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_beginRegExp">
            <summary>
            RegExp for begin block
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_middleRegExp">
            <summary>
            RegExp for middle block
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_endRegExp">
            <summary>
            RegExp for end block
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_keeper">
            <summary>
            Config search manager.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_bIsCollapsable">
            <summary>
            Flag, that determines wheather lexem can be collapsed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_format">
            <summary>
            Format of the lexem config.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_virtualConfig">
            <summary>
            Link to the virtual config for current lexem;
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_bIsCollapseAutoNamed">
            <summary>
            Flag, that specifies, wheather name of the collapsed region lexem
            sould read by itself.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_CollapseName">
            <summary>
            Static name of the collapsing.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_Condition">
            <summary>
            Specified condition for be present.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_ConditionChanges">
            <summary>
            List of changes of conditions.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_ID">
            <summary>
            ID of the configuration.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_AutoNameExpression" -->
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_AutoNameTemplate">
            <summary>
            Template of resulting text for auto-naming of collapse.
            </summary>
            <remarks>
            To specifie "$" symbol you must use $$.
            To use result of some named group, use ${name}.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_AutoNameRegex">
            <summary>
            Regex for autonaming.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_language">
            <summary>
            Language configuration, this instance belongs to.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_bPseudoEnd">
            <summary>
            Sign of pseudo-ending.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_bIndent">
            <summary>
            Auto-Indent lexem sign.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_iNextID">
            <summary>
            ID of the next lexem.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_nextLexem">
            <summary>
            Resolved next lexem.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_bDropContextChoise">
            <summary>
            If true, choise list must be shown after entering this lexem.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.m_bDropContextPrompt">
            <summary>
            If true, context prompt must be shown after typing this lexem.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.#ctor(System.String,System.String,Syncfusion.Windows.Forms.Edit.Enums.FormatType,System.Boolean)">
            <summary>
            Create Lexem based on begin , end , format
            </summary>
            <param name="begin">Begin of lexem configuration.</param>
            <param name="end">End of lexem configuration.</param>
            <param name="format">Format of the lexem configuration.</param>
            <param name="isComplex"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.RaiseBeginBlockChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            raise property changed event for BeginBlock
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.RaiseEndBlockChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            raise property changed event for EndBlock
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.RaiseContinueBlockChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            raise property changed event for ContinueBlock
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.RaisePriorityChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            raise property changed event for Priority
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.RaiseTypeChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            raise property changed event for Type
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.RaiseFormatNameChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            raise property changed event for FormatName
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.RaiseIsBeginRegexChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            raise property changed event for IsBeginRegex
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.RaiseIsEndRegexChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            raise property changed event for IsEndRegex
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.RaiseIsContinueRegexChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            raise property changed event for IsContinue
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.RaiseIsComplexChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            raise property changed event for IsComplex
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.RaiseSubLexemsChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            raise property changed event for SubLexems
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.RaiseIsCollapsableChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            raise property changed event for IsCollapsable
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.RaiseOnlyLocalSublexemsChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            raise property changed event for OnlyLocalSublexems
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.OnBeginBlockChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            call raiser for BeginBlock
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.OnEndBlockChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            call raiser for EndBlock
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.OnContinueBlockChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            call raiser for ContinueBlock
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.OnPriorityChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            call raiser for Priority
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.OnTypeChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            call raiser for Type
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.OnFormatNameChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            call raiser for FormatName
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.OnIsBeginRegexChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            call raiser for IsBeginRegex
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.OnIsEndRegexChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            call raiser for IsEndRegex
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.OnIsContinueRegexChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            call raiser for IsContinueRegex
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.OnIsComplexChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            call raiser for IsComplex
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.OnOnlyLocalSublexemsChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            call raiser for OnlyLocalSublexems
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.OnSubLexemsChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            call raiser for SubLexems
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.OnIsCollapsableChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            call raiser for IsCollapsable
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.ToString">
            <summary>
            Gets description of the configuration.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.ReplaceNewLine(System.String)">
            <summary>
            Replaces all newline symbols in regex to the unified pattern.
            </summary>
            <param name="str">Regular expression.</param>
            <returns>String with changes.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.UpdateSublexems">
            <summary>
            Updates ParentConfig property of all sublexems.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.IsEqualToBegin(System.String)">
            <summary>
            Checks string to the equalition to begin block.
            If begin block is regular expression, input string will be checked by RegExp
            </summary>
            <param name="str">String to be checked</param>
            <returns>True if it can be treated as begin block.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.IsEqualToContinue(System.String)">
            <summary>
            Checks string to the equalition to continue block.
            If continue block is regular expression, input string will be checked by RegExp
            </summary>
            <param name="str">String to be checked</param>
            <returns>True if it can be treated as continue block.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.IsEqualToEnd(System.String)">
            <summary>
            Checks string to the equalition to end block.
            If end block is regular expression, input string will be checked by RegExp
            </summary>
            <param name="str">String to be checked</param>
            <returns>True if it can be treated as end block.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.FindConfigs(System.String)">
            <summary>
            Searches for configs in sub-lexems.
            Current lexem config is not tested for equalition.
            If config was not found in sub-lexems,
            it will be searched in parent.
            </summary>
            <param name="str">String to find.</param>
            <returns>List of config lexems.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.VirtualConfig">
            <summary>
            GET link to the virtual config for current lexem.
            </summary>
            <remarks>
            Virtual configs does not support collapsed state.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.Format">
            <summary>
            GET, SET format by Type and FormatName.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.ParentConfig">
            <summary>
            Parent of the config.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.BeginBlock">
            <summary>
            Begin symbol or word for lexem.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.EndBlock">
            <summary>
             If lexem has begin symbol and end symbol then use this property for
            setting end symbol. if lemex is "keyword" then this property must be
            set to null value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.ContinueBlock">
            <summary>
            If lexem can be devided on multi lines or has some special rules
            which can continue lexem then us this setting.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.Priority">
            <summary>
            If many lexems has the same begin string then on parsing
            must be controled order in which lexem parser will try to
            interpret input as lexem...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.Type">
            <summary>
            Format which must be used for coloring. If format is Custom then
            used FormatName property for format identification
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.FormatName">
            <summary>
            FormatName which must be used for coloring.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.IsBeginRegex">
            <summary>
            Is BeginBlock property contains Regular expression or not
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.IsEndRegex">
            <summary>
            Is EndBlock property contains Regular expression or not
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.IsContinueRegex">
            <summary>
            Is ContinueBlock property contains Regular expression or not
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.IsComplex">
            <summary>
            this flag indicate must parser parse lexem internals or not. For
            complex constructions data between begin and end blocks can have own
            formats.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.OnlyLocalSublexems">
            <summary>
            This flag indicates, wheather parser should look for lexem`s config just in local array,
            or also look in parents
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.SubLexems">
            <summary>
            sub-lexems which must be skipped if they found after BeginBlock
            string till EndBock string.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.References">
            <summary>
            List of references.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.IsCollapsable">
            <summary>
            Is BeginBlock property contains Regular expression or not
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.AutoNameExpression" -->
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.AutoNameTemplate">
            <summary>
            Template of resulting text for auto-naming of collapse.
            </summary>
            <remarks>
            To specifie "$" symbol you must use $$.
            To use result of some named group, use ${name}.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.AutoNameRegex">
            <summary>
            Regular expression instance for AutoNameExpression.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.IsCollapseAutoNamed">
            <summary>
            GET flag, that specifies, wheather lexem
            can read it`s text from sub-lexems.
            </summary>
            <remarks>
            <para>
            If this property is false, then CollapseName will
            be used to name the region.
            </para>
            <para>
            Note: you should know that is this property is true, then on
            by-lexem reading you`ll have to wait while sub-lexems will be loaded,
            then processed by RegEx and then only then you`ll have your collapsable lexem.
            </para>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.CollapseName">
            <summary>
            Name of the collapsed region.
            </summary>
            <remarks>
            If <see cref="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.IsCollapseAutoNamed"/> is true, then
            this property`s value will be used just when
            found name is empty.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.Condition">
            <summary>
            Condition, needed to pass chech. Format: name=ON|OFF
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.ConditionChanges">
            <summary>
            List of condition`s state changes after processing lexem.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.ID">
            <summary>
            Static uneque ID of configuration node.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.Language">
            <summary>
            Language, lexem belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.IsPseudoEnd">
            <summary>
            GET, SET sign wheather the end-block is just the way to exit higher by stack, or it is real ending of lexem.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.Indent">
            <summary>
            GET sign of auto-indenting after lexem with such config.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.NextID">
            <summary>
            GET ID of the lexem configuration, that follows right after current
            one is parsed. Such lexem must be complex and "OnlyLocalSublexems",
            without beginblock and with endblock.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.NextLexem">
            <summary>
            GET resolved next-lexem.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.DropContextChoiceList">
            <summary>
            GET, SET sign of dropping down context choise list after entering text of the current lexem.
            </summary>
            <remarks>
            Can be set only on non-complex lexems.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.DropContextPrompt">
            <summary>
            GET, SET value, that shows whether context prompt should be shown after typing text of the current lexem.
            </summary>
            <remarks>
            Can be set only on non-complex lexems.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.BeginBlockChanged">
            <summary>
            someone changed BeginBlock
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.EndBlockChanged">
            <summary>
             someone changed EndBlock
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.ContinueBlockChanged">
            <summary>
             someone changed ContinueBlock
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.PriorityChanged">
            <summary>
             someone changed Priority
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.TypeChanged">
            <summary>
             someone changed Type
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.FormatNameChanged">
            <summary>
             someone changed FormatName
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.IsBeginRegexChanged">
            <summary>
             someone changed IsBeginRegex
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.IsEndRegexChanged">
            <summary>
             someone changed IsEndRegex
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.IsContinueRegexChanged">
            <summary>
             someone changed IsContinueRegex
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.IsComplexChanged">
            <summary>
             someone changed IsComplex
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.SubLexemsChanged">
            <summary>
             someone changed SubLexems
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.IsCollapsableChanged">
            <summary>
             someone changed IsCollapsable
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Config.ConfigLexem.OnlyLocalSublexemsChanged">
            <summary>
            OnlyLocalSublexems changed
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Config.LexemConfigsKeeper">
            <summary>
            Keeps configuration of Config lexems.
            Used to search configuration for some token.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.LexemConfigsKeeper.DEF_REGEX_GROUP_PREFIX">
            <summary>
            Regex group names prefix.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.LexemConfigsKeeper.m_Priorities">
            <summary>
            Table of configuration parts, grouped by priorities.
            Key - Priority. Value - OnePriorityConfigs instance.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.LexemConfigsKeeper.m_KeepedConfig">
            <summary>
            Lexem Configuration, the keeper is related to.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.LexemConfigsKeeper.m_KnownConfigs">
            <summary>
            Hashtable of the configs for token, already known.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.LexemConfigsKeeper.AddConfigToHashtable(System.Collections.Hashtable,System.Object,Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem)">
            <summary>
            Adds configuration to the hashtable.
            </summary>
            <param name="table">Distination hashtable.</param>
            <param name="key">Key in hashtable.</param>
            <param name="config">Configuration.</param>
            <remarks>If such key is not present, configuration will be added as a new item, 
            if configuration is already present, it will be changed to ArrayList with two configurations,
            If item with specified key is present and it is ArrayList, configuration will be added to that list.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.LexemConfigsKeeper.#ctor(Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem)">
            <summary>
            Creates and initializes new instance of the class by config`s data.
            </summary>
            <param name="parentLexem">Owner of the LexemConfigsKeeper.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.LexemConfigsKeeper.GetConfigs(System.String)">
            <summary>
            Looks for lexem configuration by the token.
            </summary>
            <remarks>
            Search process is entirely based on rules, specified by owner lexem configuration.
            If owner is complex, search is done within it`s sub-lexems first, then it is done for 
            it`s parent and so on. If there is no appropriate configuration for given token found, 
            languages configuration is used, or the configuration of the first parent with 
            "OnlyLocalSubLexems" set to true.
            </remarks>
            <param name="token">Token, configuration is needed for.</param>
            <returns>Lexem configuration for given token.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Config.LexemConfigsKeeper.OnePriorityConfigs">
            <summary>
            Structure, used to keep information about one priority.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.LexemConfigsKeeper.OnePriorityConfigs.NonRegExps">
            <summary>
            Hashtable of non-regex lexem configs.
            Key - string, value - IConfigLexem or ICollection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.LexemConfigsKeeper.OnePriorityConfigs.GroupedRegExps">
            <summary>
            Regular expression, that contains all reg-exps.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.LexemConfigsKeeper.OnePriorityConfigs.RegExpGroups">
            <summary>
            Hash table of the regular expression groups.
            Key - Group name, value - IConfigLexem or ICollection.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Config.ReferenceConfig">
            <summary>
            Summary description for ReferenceConfig.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.IReferenceConfig">
            <summary>
            Reference description.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IReferenceConfig.RefID">
            <summary>
            ID of the configuration, reference is linked to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IReferenceConfig.ReferencedLexem">
            <summary>
            Referenced lexem.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ReferenceConfig.m_ID">
            <summary>
            ID of the configuration, reference is linked to.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ReferenceConfig.m_lexemConfig">
            <summary>
            Referenced lexem.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.ReferenceConfig.m_parent">
            <summary>
            Parent of the reference.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ReferenceConfig.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.ReferenceConfig.SetParent(Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem)">
            <summary>
            Sets parent of the reference.
            </summary>
            <param name="parent">Parent to be set.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ReferenceConfig.RefID">
            <summary>
            GET, SET ID of the configuration, reference is linked to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.ReferenceConfig.ReferencedLexem">
            <summary>
            Referenced lexem.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem">
            <summary>
            Virtual lexem configuration.
            </summary>
            <remarks>
            Virtual lexem configuration is such kind of <see cref="T:Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem"/>
            implementaion, when just link to real configuration is kept
            in memory. Virtual configurations does not support collapsing.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.m_parent">
            <summary>
            Config, this instance is linked to.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.IsEqualToEnd(System.String)">
            <summary>
            Checks string to the equalition to end block.
            If end block is regular expression, input string will be checked by RegExp
            </summary>
            <param name="str">String to be checked</param>
            <returns>True if it can be treated as end block.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.IsEqualToContinue(System.String)">
            <summary>
            Checks string to the equalition to continue block.
            If continue block is regular expression, input string will be checked by RegExp
            </summary>
            <param name="str">String to be checked</param>
            <returns>True if it can be treated as continue block.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.IsEqualToBegin(System.String)">
            <summary>
            Checks string to the equalition to begin block.
            If begin block is regular expression, input string will be checked by RegExp
            </summary>
            <param name="str">String to be checked</param>
            <returns>True if it can be treated as begin block.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.FindConfigs(System.String)">
            <summary>
            Searches for configs in sub-lexems.
            Current lexem config is not tested for equalition.
            If config was not found in sub-lexems,
            it will be searched in parent.
            </summary>
            <param name="str">String to find.</param>
            <returns>List of config lexems.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.#ctor(Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem)">
            <summary>
            Creates new instance of the class.
            </summary>
            <param name="parent">Parent config.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.VirtualConfig">
            <summary>
            GET link to the virtual config for current lexem.
            </summary>
            <remarks>
            Virtual configs does not support collapsed state.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.Parent">
            <summary>
            Parent of the virtual lexem configuration.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.BeginBlock">
            <summary>
            Begin symbol or word for lexem.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.EndBlock">
            <summary>
             If lexem has begin symbol and end symbol then use this property for
            setting end symbol. if lemex is "keyword" then this property must be
            set to null value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.ContinueBlock">
            <summary>
            If lexem can be devided on multi lines or has some special rules
            which can continue lexem then us this setting.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.Priority">
            <summary>
            If many lexems has the same begin string then on parsing
            must be controled order in which lexem parser will try to
            interpret input as lexem...
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.Type">
            <summary>
            Format which must be used for coloring. If format is Custom then
            used FormatName property for format identification
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.FormatName">
            <summary>
            FormatName which must be used for coloring.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.IsBeginRegex">
            <summary>
            Is BeginBlock property contains Regular expression or not
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.IsEndRegex">
            <summary>
            Is EndBlock property contains Regular expression or not
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.IsContinueRegex">
            <summary>
            Is ContinueBlock property contains Regular expression or not
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.IsComplex">
            <summary>
            this flag indicate must parser parse lexem internals or not. For
            complex constructions data between begin and end blocks can have own
            formats.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.SubLexems">
            <summary>
            sub-lexems which must be skipped if they found after BeginBlock
            string till EndBock string.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.References">
            <summary>
            List of references.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.ParentConfig">
            <summary>
            Parent of the config.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.OnlyLocalSublexems">
            <summary>
            This flag indicates, wheather parser should look for lexem`s config just in local array,
            or also look in parents
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.Format">
            <summary>
            GET, SET format by Type and FormatName.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.IsCollapsable">
            <summary>
            Is BeginBlock property contains Regular expression or not
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.Condition">
            <summary>
            Condition, needed to pass chech. Format: name=ON|OFF
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.ConditionChanges">
            <summary>
            List of condition`s state changes after processing lexem.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.ID">
            <summary>
            Static uneque ID of configuration node.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.Language">
            <summary>
            Language, lexem belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.IsPseudoEnd">
            <summary>
            GET sign wheather the end-block is just the way to exit higher by stack, or it is real ending of lexem.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.Indent">
            <summary>
            GET sign of auto-indenting after lexem with such config.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.NextID">
            <summary>
            GET ID of the lexem configuration, that follows right after current 
            one is parsed. Such lexem must be complex and "OnlyLocalSublexems",
            without beginblock and with endblock.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.DropContextChoiceList">
            <summary>
            GET sign of dropping down context choise list after entering text of the current lexem.
            </summary>
            <remarks>
            Can be set only on non-complex lexems.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Config.VirtualConfigLexem.DropContextPrompt">
            <summary>
            GET value, that shows whether context prompt should be shown after typing text of the current lexem.
            </summary>
            <remarks>
            Can be set only on non-complex lexems.
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormat">
            <summary>
            Corresponing for special formating for selecetion, etc.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.IDynamicFormat">
            <summary>
            Interface for dynamic formattings.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IDynamicFormat.Start">
            <summary>
            Start point of the formatting.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IDynamicFormat.End">
            <summary>
            End point of the formatting.
            It is not included into formatting range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IDynamicFormat.Format">
            <summary>
            Format to be used to draw text.
            Just FontColor, ForeColor and BackColor must be used.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormat._DefaultStartComparer">
            <summary>
            Default comparer for dynamic formats.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormat._DefaultEndComparer">
            <summary>
            Default comparer for dynamic formats.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormat.m_start">
            <summary>
            Start point of the format.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormat.m_end">
            <summary>
            End point of the format.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormat.m_format">
            <summary>
            Format.
            Just FontColor, ForeColor and BackColor will be used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormat.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormat.#ctor(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Interfaces.ISnippetFormat)">
            <summary>
            Creates new instance of the class and initializes it.
            </summary>
            <param name="start">Start point.</param>
            <param name="end">End point.</param>
            <param name="format">Format to be used.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormat.CompareTo(System.Object)">
            <summary>
            Compares current DynamicFormat with other DynamicFormat.
            </summary>
            <param name="obj">ParsePoint</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormat.DefaultStartComparer">
            <summary>
            Default comparer for dynamic formats. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormat.DefaultEndComparer">
            <summary>
            Default comparer for dynamic formats. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormat.Start">
            <summary>
            Start point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormat.End">
            <summary>
            End point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormat.Format">
            <summary>
            Format to be used.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormat.CoordinatePointStartSearcher">
            <summary>
            Comparer, used for search of dynamic format by the coordinate point, 
            that is treated like the start of dymanic format region.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormat.CoordinatePointStartSearcher.Compare(System.Object,System.Object)">
            <summary>
            Compares dynamic format object with coordinates point. 
            Coordinate point is treated as start coordinate of the new region.
            </summary>
            <param name="x">Dynamic format.</param>
            <param name="y">Coordinate point. </param>
            <returns>Standart comparition results.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormat.CoordinatePointEndSearcher">
            <summary>
            Comparer, used for search of dynamic format by the coordinate point, 
            that is treated like the end of dymanic format region.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormat.CoordinatePointEndSearcher.Compare(System.Object,System.Object)">
            <summary>
            Compares dynamic format object with coordinates point. 
            Coordinate point is treated as end coordinate of the new region.
            </summary>
            <param name="x">Dynamic format.</param>
            <param name="y">Coordinate point. </param>
            <returns>Standart comparition results.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatLayer">
            <summary>
            Manages dynamic formats. Dyniamic formattings can be applied to any part of text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IDynamicFormatsLayer.Add(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Interfaces.ISnippetFormat)">
            <summary>
            Creates new dynamic format object and adds it to the list.
            All existing dynamic formattings in specified range will be deleted or trimmed.
            </summary>
            <param name="start">Starting positions.</param>
            <param name="end">End positions.</param>
            <param name="format">Format to be added.</param>
            <returns>Newly created format.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IDynamicFormatsLayer.Remove(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint)">
            <summary>
            Removes all formatting in specified range.
            </summary>
            <param name="start">Start of the range.</param>
            <param name="end">End of the range.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IDynamicFormatsLayer.Remove(Syncfusion.Windows.Forms.Edit.Interfaces.IDynamicFormat)">
            <summary>
            Removes given formatting.
            </summary>
            <param name="format">Formatting to be deleted.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IDynamicFormatsLayer.RemoveAt(System.Int32)">
            <summary>
            Removes formatting by given index.
            </summary>
            <param name="index">Index of the formatting to be removed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IDynamicFormatsLayer.IndexOf(Syncfusion.Windows.Forms.Edit.Interfaces.IDynamicFormat)">
            <summary>
            Returns index of the dynamic formatting.
            </summary>
            <param name="format">Formatting to be found.</param>
            <returns>Index of the formatting in the internal list.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IDynamicFormatsLayer.Hidden">
            <summary>
            Gets value that specifies wether this layer is hidden.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IDynamicFormatsLayer.Item(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint)">
            <summary>
            GET list of dynamic formattings, that intersepts with given range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IDynamicFormatsLayer.Item(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint)">
            <summary>
            GET dynamic formatting by ParsePoint.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IDynamicFormatsLayer.Item(System.Int32)">
            <summary>
            GET formatting by index.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Interfaces.IDynamicFormatsLayer.DataChanged">
            <summary>
            Event that is raised when data somethins is changed whithin the layer.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatLayer.m_list">
            <summary>
            List of formattings.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatLayer.m_bHidden">
            <summary>
            Specifies if this layer is hidden for layers marge.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatLayer.#ctor">
            <summary>
            Creates new instance of the class and initializes it.
            </summary>
            <param name="wrapper">Streams wrapper to be used for search of ParsePoints.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatLayer.Split(System.Int32,Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint)">
            <summary>
            Splits existing format.
            </summary>
            <param name="index">Index of the format to be splitted.</param>
            <param name="divisionPoint">Point of division.</param>
            <returns>True if split was successfully done, 
            false if there was no split operation done.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatLayer.RaiseDataChangedEvent">
            <summary>
            Raises DataChanged event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatLayer.PhysicalPoint_OffsetChanged(System.Object,Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            Raises DataChanges event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatLayer.PointDeleted(System.Object,System.EventArgs)">
            <summary>
            Deletes range, the coordinate point belongs to.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatLayer.Add(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Interfaces.ISnippetFormat)">
            <summary>
            Creates new dynamic format object and adds it to the list.
            All existing dynamic formattings in specified range will be deleted or trimmed.
            </summary>
            <param name="start">Starting positions.</param>
            <param name="end">End positions.</param>
            <param name="format">Format to be added.</param>
            <returns>Newly created format.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatLayer.Remove(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint)">
            <summary>
            Removes all formatting in specified range.
            </summary>
            <param name="start">Start of the range.</param>
            <param name="end">End of the range.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatLayer.Remove(Syncfusion.Windows.Forms.Edit.Interfaces.IDynamicFormat)">
            <summary>
            Removes given formatting.
            </summary>
            <param name="format">Formatting to be deleted.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatLayer.RemoveAt(System.Int32)">
            <summary>
            Removes formatting by given index.
            </summary>
            <param name="index">Index of the formatting to be removed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatLayer.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies list to array.
            </summary>
            <param name="array">Destination array, </param>
            <param name="index">Start index in destination array.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatLayer.GetEnumerator">
            <summary>
            Returns enumerator of the list of formats.
            </summary>
            <returns>Enumerator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatLayer.IndexOf(Syncfusion.Windows.Forms.Edit.Interfaces.IDynamicFormat)">
            <summary>
            Returns index of the dynamic formatting.
            </summary>
            <param name="format">Formatting to be found.</param>
            <returns>Index of the formatting in the internal list.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatLayer.Hidden">
            <summary>
            Gets value that specifies wether this layer is hidden.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatLayer.Item(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint)">
            <summary>
            GET dynamic formatting by ParsePoint.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatLayer.Item(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint)">
            <summary>
            GET list of dynamic formattings, that intersepts with given range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatLayer.IsSynchronized">
            <summary>
            GET returns false, list is not thread safe.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatLayer.Count">
            <summary>
            GET count of items in internal collection of formattings.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatLayer.SyncRoot">
            <summary>
            Returns synchronization object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatLayer.Item(System.Int32)">
            <summary>
            GET formatting by index.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatLayer.DataChanged">
            <summary>
            Event that is raised when data somethins is changed whithin the layer.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatManager">
            <summary>
            Summary description for DynamicFormatManager.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatManager.m_layers">
            <summary>
            Hashtable with layers.
            Keys - names of the layers, Values - Layers.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatManager.#ctor">
            <summary>
            Creates new instance of the dynamic formats manager.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatManager.RegisterLayer(System.String)">
            <summary>
            Creates new layer and adds it to the list.
            </summary>
            <param name="name">Name of the layer.</param>
            <returns>Newly created layer.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatManager.RegisterLayer(System.String,System.Boolean)">
            <summary>
            Creates new layer and adds it to the list.
            </summary>
            <param name="name">Name of the layer.</param>
            <param name="hidden">Specifies wether this layer is hidden.</param>
            <returns>Newly created layer.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatManager.Item(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint)">
            <summary>
            GET list of dynamic formattings, that intersepts with given range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatManager.Layers">
            <summary>
            GET collection of layers.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatManager.Names">
            <summary>
            GET collection of layer names.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.DynamicFormatManager.Item(System.String)">
            <summary>
            GET registered dynamic formatting layer by name.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format">
            <summary>
            This class will describe how each snippet will be printed : Font, Color etc.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.ISnippetFormat">
            <summary>
            Format is rendering utility object. It hold settings needed for proper rendering
            one or more snippets on user screen.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ISnippetFormat.Name">
            <summary>
            Unique format name
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ISnippetFormat.Font">
            <summary>
            Font which must be used for rendering
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ISnippetFormat.ForeColor">
            <summary>
            Color of backgroud border.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ISnippetFormat.FontColor">
            <summary>
            Color of snippet text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ISnippetFormat.BackColor">
            <summary>
            Background color of snippet. If you want to draw rectangle over the snippet
            set Background Color.Empty value and Foreground property to needed rectangle
            border color. If both properties Background and Foreground set to not Empty
            value then for drawing used hatch brush according to BackStyle property value.
            If Foreground set to Color.Empty value then will be filled snippet rectangle
            by Background color.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ISnippetFormat.LineColor">
            <summary>
            Get or set color of line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ISnippetFormat.HatchStyle">
            <summary>
            Style of background brush. This property used only when Background and
            Foreground colors set to not Empty values.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ISnippetFormat.UnderlineWeight">
            <summary>
            Weight of snippet text underline drawing
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ISnippetFormat.UnderlineStyle">
            <summary>
            Style of snippet text underline drawing
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Interfaces.ISnippetFormat.OnCustomDraw">
            <summary>
            This event is raised by renderer when paint works started.
            user
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.DEF_RESOURCE">
            <summary>
            Resource name.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.DEF_NAME">
            <summary>
            Default Name of format.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.m_strName">
            <summary>
            Format name.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.m_clrFore">
            <summary>
            BackGround border color.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.m_clrFont">
            <summary>
            Snippet's font's color.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.m_clrBack">
            <summary>
            Background color of snippet. If you want to draw rectangle over the snippet
            set Background Color.Empty value and Foreground property to needed rectangle
            border color. If both properties Background and Foreground set to not Empty
            value then for drawing used hatch brush according to BackStyle property value.
            If Foreground set to Color.Empty value then will be filled snippet rectangle
            by Background color.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.m_clrLine">
            <summary>
            Color of Line.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.m_HatchStyle">
            <summary>
            Style of background brush. This property used only when Background and
            Foreground colors set to not Empty values.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.m_UnderlineWeight">
            <summary>
            Weight of snippet text underline drawing.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.m_UnderlineStyle">
            <summary>
            Style of snippet text underline drawing.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.m_Parent">
            <summary>
            Parent of the format.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.m_font">
            <summary>
            Snippet's font.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.m_brushFont">
            <summary>
            Brush, used to draw text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.m_penBackGround">
            <summary>
            Pen, used to draw rectangle arround text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.m_brushBackGround">
            <summary>
            Brush, used to draw background under text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.m_brushUnderline">
            <summary>
            Brush, used to draw underlining.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.m_penUnderline">
            <summary>
            Pen, used to draw underlining.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.m_tempFormattingsList">
            <summary>
            List, used to keep dynamic formattings.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.m_formatID">
            <summary>
            ID of the format.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.FormatLastID">
            <summary>
            ID of the last format.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.m_imgAttrWaveLineColorRemap">
            <summary>
            ImageAttributes, used for remapping of the colors.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format._imgWaveLine">
            <summary>
            Static storage for all Formats of resource image.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.#ctor(System.String)">
            <summary>
            Create obj. using format name
            all settings will be default.
            </summary>
            <param name="name">format name</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.#ctor(System.String,System.Drawing.Font)">
            <summary>
             Creates obj. using name and Font
            </summary>
            <param name="name">name of this format</param>
            <param name="font">snippet's font at this format </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.#ctor(System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)">
            <summary>
            create obj. using font and Colors
            </summary>
            <param name="foreColor">snippet's font's color</param>
            <param name="backColor">snippet's background</param>
            <param name="font"> snippet's font's size</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.#ctor(System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.String,System.Single)">
            <summary>
            create obj. using font[ + size ] and Colors
            </summary>
            <param name="foreColor">snippet's font's color </param>
            <param name="backColor">snippet's background</param>
            <param name="font"> snippet's font</param>
            <param name="iFontSize">snippet's font's size</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.#ctor(System.String,Syncfusion.Windows.Forms.Edit.Interfaces.ISnippetFormat)">
            <summary>
            create obj. using name and another existing format
            </summary>
            <param name="name"></param>
            <param name="inherit"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.Finalize">
            <summary>
            Finalizer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.Dispose">
            <summary>
            Disposes all used resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.RaiseNameChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            raise  property_changed event for Name
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.RaiseFontNameChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            raise  property_changed event for FontName
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.RaiseFontSizeChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            raise  property_changed event for FontSize
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.RaiseForeColorChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            raise  property_changed event for ForeColor
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.RaiseFontColorChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            raise  property_changed event for FontColor
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.RaiseBackColorChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            raise  property_changed event for BackColor
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.RaiseHatchStyleChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            raise  property_changed event for HatchStyle
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.RaiseUnderlineWeightChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            raise  property_changed event for
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.RaiseUnderlineStyleChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            raise  property_changed event for UnderlineStyle
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.RaiseOnCustomDraw(Syncfusion.Windows.Forms.Edit.CustomSnippetDrawEventArgs)">
            <summary>
            Method raise Custom draw event
            </summary>
            <param name="args">Parameters of custom draw event</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.RaiseFontChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            raise  property_changed event for Font
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.RaiseLineColorChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.OnCustomDrawNeeds(Syncfusion.Windows.Forms.Edit.CustomSnippetDrawEventArgs)">
            <summary>
            Raise to OnCustomDraw event to user with specified parameters
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.OnNameChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            call raiser for Name
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.OnFontNameChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            call raiser for FontName
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.OnFontSizeChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            call raiser for FontSize
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.OnForeColorChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            call raiser for ForeColor
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.OnFontColorChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            call raiser for FontColor
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.OnBackColorChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            call raiser for BackColor
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.OnHatchStyleChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            call raiser for HatchStyle
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.OnUnderlineWeightChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            call raiser for UnderlineWeight
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.OnUnderlineStyleChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            call raiser for UnderlineStyle
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.OnFontChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            call raiser for Font
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.OnLineColorChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.ToString">
            <summary>
            use this to see object like string
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.SetUnderlineBrush">
            <summary>
            Sets underline brush.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.SetUnderlinePen">
            <summary>
            Sets underline pen.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.DrawUnderlines(System.Drawing.Graphics,System.Drawing.RectangleF)">
            <summary>
            Draws underlines.
            </summary>
            <param name="g">Graphics object, underlines should be drawn on.</param>
            <param name="textRect">Rectangle with text, that should be underlined.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.DrawUnderlines(System.Drawing.Graphics,System.Single,System.Single,System.Single)">
            <summary>
            Draws underlines.
            </summary>
            <param name="g"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.DrawSingleUnderline(System.Drawing.Graphics,System.Single,System.Single,System.Single)">
            <summary>
            Draws single underlining line.
            </summary>
            <param name="g">Graphics object.</param>
            <param name="x">X coordinate of the underline start.</param>
            <param name="y">Y coordinate of the underline start.</param>
            <param name="width">Width of the underlining.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.MeasureText(System.Drawing.Graphics,System.String,System.Boolean)">
            <summary>
            Measures text using current font.
            </summary>
            <param name="text"></param>
            <param name="bMeasureWholeWord"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.CompleteFormattingsList(Syncfusion.Windows.Forms.Edit.Utils.AdditionalFormatting[]@,System.Int32)">
            <summary>
            
            </summary>
            <param name="formattings"></param>
            <param name="textLength"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.DrawText(System.Drawing.Graphics,Syncfusion.Windows.Forms.Edit.Utils.TextDrawInfo@)">
            <summary>
            Draws text on specified Graphics object using current format settings.
            </summary>
            <param name="g">Graphics, the text is to be drawn on.</param>
            <param name="text">Text, to be drawn.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.AppendToXML(System.Xml.XmlElement)">
            <summary>
            Append it`s data to given XML.
            </summary>
            <param name="parent">Parent element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.AppendToXML(System.Xml.XmlTextWriter)">
            <summary>
            Append it`s data to given XML.
            </summary>
            <param name="parent">Parent element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.ResetForeColor">
            <summary>
            Disposes brush which depends from ForeColor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.ResetFontColor">
            <summary>
            Disposes brush which depends from FontColor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.ResetBackColor">
            <summary>
            Disposes brush which depends from BackColor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.ResetUnderline">
            <summary>
            Disposes Underline Style and Weight.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.ResetLineColor">
            <summary>
            Disposes Line color cache.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.WaveImage">
            <summary>
            Get wave image used for underline drawing.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.Name">
            <summary>
            Name of the format.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.Parent">
            <summary>
            Manager of the format.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.Font">
            <summary>
            Current format's font
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.XmlFont">
            <summary>
            Font presentation  for XmlSerialization.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.ForeColor">
            <summary>
            BackGround border color.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.XmlForeColor">
            <summary>
            Color presantation for XmlSerialization.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.FontColor">
            <summary>
            Color of the font.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.XmlFontColor">
            <summary>
            Color presantation for XmlSerialization
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.BackColor">
            <summary>
            Background color of snippet. If you want to draw rectangle over the snippet
            set Background Color.Empty value and Foreground property to needed rectangle
            border color. If both properties Background and Foreground set to not Empty
            value then for drawing used hatch brush according to BackStyle property value.
            If Foreground set to Color.Empty value then will be filled snippet rectangle
            by Background color.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.XmlBackColor">
            <summary>
            BackColor presantation for XmlSerialization
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.HatchStyle">
            <summary>
            Style of background brush. This property used only when Background and
            Foreground colors set to not Empty values.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.UnderlineWeight">
            <summary>
            Weight of snippet text underline drawing
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.UnderlineStyle">
            <summary>
            Style of snippet text underline drawing
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.LineColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.LineWidth">
            <summary>
            Get line pen width
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.IsDoubleLine">
            <summary>
            True - line has Double style
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.TextBrush">
            <summary>
            Brush, used to draw text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.BackGroundPen">
            <summary>
            Pen, used to draw rectangle arround text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.BackGroundBrush">
            <summary>
            Brush, used to draw background under text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.UnderlineBrush">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.UnderlinePen">
            <summary>
            
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.NameChanged">
            <summary>
            someone changed Name
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.FontNameChanged">
            <summary>
            someone changed FontName
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.FontSizeChanged">
            <summary>
            someone changed FontSize
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.ForeColorChanged">
            <summary>
            someone changed ForeColor
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.FontColorChanged">
            <summary>
            someone changed ForeColor
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.BackColorChanged">
            <summary>
            someone changed BackColor
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.HatchStyleChanged">
            <summary>
            someone changed HatchStyle
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.UnderlineWeightChanged">
            <summary>
            someone changed UnderlineWeight
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.UnderlineStyleChanged">
            <summary>
            someone changed UnderlineStyle
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.OnCustomDraw">
            <summary>
            This event is raised by renderer when paint works started.
            user
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.FontChanged">
            <summary>
            someone changed Font
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Formatting.Format.LineColorChanged">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.IO.BufferedStreamEx">
            <summary>
            Special wrapper which allow us to control access to stream
            and cache data. Our implementation fix bug of NET BufferedStream
            class: on Position property set class reset internal cache.
            Our class detect situations when reset of cache not needed.
            </summary>
        </member>
        <member name="F:Syncfusion.IO.BufferedStreamEx._DefaultBufferSize">
            <summary>
            Default buffer allocation size
            </summary>
        </member>
        <member name="F:Syncfusion.IO.BufferedStreamEx._s">
            <summary>
            Underlying stream.  Close sets _s to null.
            </summary>
        </member>
        <member name="F:Syncfusion.IO.BufferedStreamEx._buffer">
            <summary>
            Shared read/write buffer.  Alloc on first use.
            </summary>
        </member>
        <member name="F:Syncfusion.IO.BufferedStreamEx._readPos">
            <summary>
            Read pointer within shared buffer.
            </summary>
        </member>
        <member name="F:Syncfusion.IO.BufferedStreamEx._readLen">
            <summary>
            Number of bytes read in buffer from _s.
            </summary>
        </member>
        <member name="F:Syncfusion.IO.BufferedStreamEx._writePos">
            <summary>
            Write pointer within shared buffer.
            </summary>
        </member>
        <member name="F:Syncfusion.IO.BufferedStreamEx._bufferSize">
            <summary>
            Length of internal buffer, if it's allocated.
            </summary>
        </member>
        <member name="F:Syncfusion.IO.BufferedStreamEx._streamPos">
            <summary>
            Stream position on moment of buffer read
            </summary>
        </member>
        <member name="M:Syncfusion.IO.BufferedStreamEx.#ctor">
            <summary>
            Default constructor. hidden to class users.
            </summary>
        </member>
        <member name="M:Syncfusion.IO.BufferedStreamEx.#ctor(System.IO.Stream)">
            <summary>
            Initialize class by stream and DefaultBufferSize == 4096.
            </summary>
            <param name="stream">Stream which our class must wrap</param>
        </member>
        <member name="M:Syncfusion.IO.BufferedStreamEx.#ctor(System.IO.Stream,System.Int32)">
            <summary>
            Initialize class by instance of stream and user defined cache size
            </summary>
            <param name="stream">Stream which our class must wrap</param>
            <param name="bufferSize">User defined cache size</param>
            <exception cref="T:System.ArgumentException">stream does not support Read and Write operations</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">bufferSize is equel or less of zero</exception>
        </member>
        <member name="M:Syncfusion.IO.BufferedStreamEx.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read data from stream. If data is cached then class will not call wrapped
            stream and simple returned copy of cached data.
            </summary>
            <param name="array">Output buffer</param>
            <param name="offset">offset in output buffer where data from stream must be placed</param>
            <param name="count">count of bytes which class must return</param>
            <returns>quantity of read bytes</returns>
        </member>
        <member name="M:Syncfusion.IO.BufferedStreamEx.ReadByte">
            <summary>
            Reads a byte from the underlying stream.  Returns the byte cast to an int
            or -1 if reading from the end of the stream.
            </summary>
            <returns>read byte</returns>
        </member>
        <member name="M:Syncfusion.IO.BufferedStreamEx.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Write portion of data into wrapped stream. If data can be placed into
            cache then it will be there and only on Flush operation data will be
            saved to wrapped stream.
            </summary>
            <param name="array">array containing data </param>
            <param name="offset">offset to the beginning of the portion of data</param>
            <param name="count">number of bytes in the portion of data</param>
            <exception cref="T:System.ArgumentNullException">
            If array or stream is null
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If offset or count is less than zero
            </exception>
            <exception cref="T:System.ArgumentException">
            If array does not contain required elements count
            </exception>
        </member>
        <member name="M:Syncfusion.IO.BufferedStreamEx.WriteByte(System.Byte)">
            <summary>
            Write on byte of information into stream.
            </summary>
            <param name="value">Value which must be written</param>
            <exception cref="T:System.ArgumentNullException">
            If stream is null
            </exception>
            <exception cref="T:System.ArgumentException">
            If can't write into stream
            </exception>
        </member>
        <member name="M:Syncfusion.IO.BufferedStreamEx.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Seek operation. On any seek operation not written data from cache will be
            flushed to wrapped stream. Better use Position property it optimized for
            cache use.
            </summary>
            <param name="offset">New offset of stream</param>
            <param name="origin">Start point of seek operation</param>
            <returns>Current position</returns>
            <exception cref="T:System.ArgumentNullException">
            If stream is null
            </exception>
            <exception cref="T:System.ArgumentException">
            If can't seek in the stream
            </exception>
        </member>
        <member name="M:Syncfusion.IO.BufferedStreamEx.Close">
            <summary>
            Save all data from cache and Close stream.
            </summary>
        </member>
        <member name="M:Syncfusion.IO.BufferedStreamEx.Flush">
            <summary>
            Flush data. reset cache.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            When stream is null
            </exception>
        </member>
        <member name="M:Syncfusion.IO.BufferedStreamEx.FlushRead">
            <summary>
            Reading is done by blocks from the file, but someone could read
            1 byte from the buffer then write.  At that point, the OS's file
            pointer is out of sync with the stream's position.  All write
            functions should call this function to preserve the position in the file.
            </summary>
        </member>
        <member name="M:Syncfusion.IO.BufferedStreamEx.FlushWrite">
            <summary>
            Writes are buffered.  Anytime the buffer fills up
            (_writePos + delta > _bufferSize) or the buffer switches to reading
            and there is dirty data (_writePos > 0), this function must be called.
            </summary>
        </member>
        <member name="M:Syncfusion.IO.BufferedStreamEx.SetLength(System.Int64)">
            <summary>
            Set length of wrapped stream
            </summary>
            <param name="value">new Length of stream</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            When value is less than zero
            </exception>
            <exception cref="T:System.ArgumentNullException">
            When stream is null
            </exception>
            <exception cref="T:System.ArgumentException">
            If can't seek or can't write into stream
            </exception>
        </member>
        <member name="P:Syncfusion.IO.BufferedStreamEx.CanRead">
            <summary>
            Indicate can be data readed from wrapped stream.
            TRUE - data can be readed.
            </summary>
            <exception cref="T:System.ArgumentNullException">class instance was disposed</exception>
        </member>
        <member name="P:Syncfusion.IO.BufferedStreamEx.CanWrite">
            <summary>
            Indicate can data be written to wrapped stream.
            </summary>
            <exception cref="T:System.ArgumentNullException">class instance was disposed</exception>
        </member>
        <member name="P:Syncfusion.IO.BufferedStreamEx.CanSeek">
            <summary>
            Indicate does wrapped stream support Seek operations or not
            </summary>
            <exception cref="T:System.ArgumentNullException">class instance was disposed</exception>
        </member>
        <member name="P:Syncfusion.IO.BufferedStreamEx.Length">
            <summary>
            Get Length of wrapped stream. On property value get class Flush not
            written to stream data.
            </summary>
            <exception cref="T:System.ArgumentNullException">class instance was disposed</exception>
        </member>
        <member name="P:Syncfusion.IO.BufferedStreamEx.Position">
            <summary>
            Get current position of stream. Position can be differ then wrapped
            stream has, because wrapped stream will point on last byte of our
            cached data. On property set not written data flushed to stream.
            </summary>
            <exception cref="T:System.ArgumentNullException">class instance was disposed</exception>
            <exception cref="T:System.ArgumentException">wrapped stream does not support seek operation</exception>
        </member>
        <member name="P:Syncfusion.IO.BufferedStreamEx.BaseStream">
            <summary>
            Get reference on stream wrapped by BufferStreamEx
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangeContext">
            <summary>
            Instance of the change. Also it implements ISource interface,
            so it can be used as data source for data window.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.IChange">
            <summary>
            Change in the stream. Needed for rolling back.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IChange.Position">
            <summary>
            Position in stream.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IChange.Type">
            <summary>
            Type of change.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IChange.Data">
            <summary>
            Data for change. (for replace and insert)
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IChange.Size">
            <summary>
            Size of data to be affected. (for delete and replace)
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.ISource">
            <summary>
            Source of data for data window
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.ISource.GetData(System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads data and writes it to array.
            </summary>
            <param name="position">Position of data in the source.</param>
            <param name="data">Array, where data will be written.</param>
            <param name="offset">Offset in array.</param>
            <param name="count">Size of data that have to be read.</param>
            <returns>Count of actually read bytes.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ISource.Length">
            <summary>
            Length of data in source.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangeContext.GetData(System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads data and writes it to array.
            </summary>
            <param name="position">Position of data in the source.</param>
            <param name="data">Array, where data will be written.</param>
            <param name="offset">Offset in array.</param>
            <param name="count">Size of data that have to be read.</param>
            <returns>Count of actually read bytes.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangeContext.#ctor(Syncfusion.Windows.Forms.Edit.Interfaces.ChangeType,System.Byte[])">
            <summary>
            Initializes instance. Size is auto-calculated from data.
            </summary>
            <param name="type">Type of change.</param>
            <param name="data">Data for change.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangeContext.#ctor(Syncfusion.Windows.Forms.Edit.Interfaces.ChangeType,System.Byte[],System.Int64)">
            <summary>
            Initializes instance.
            </summary>
            <param name="type">Type of change.</param>
            <param name="data">Data for change.</param>
            <param name="size">Size of change. (How much to delete or replace)</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangeContext.Finalize">
            <summary>
            Destructor, calls Dispose
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangeContext.ToString">
            <summary>
            Format of the output string is "type: {0,8} length: {1,6} size: {2,6} position: {3,6}"
            Mostly for debug purposes only.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangeContext.System#ICloneable#Clone">
            <summary>
            Clones Context
            </summary>
            <returns>New ChangeContext</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangeContext.Clone">
            <summary>
            Clones Context
            </summary>
            <returns>New ChangeContext</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangeContext.Dispose">
            <summary>
            Deletes link to source to speed up it`s finalization
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangeContext.Position">
            <summary>
            Position in stream.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangeContext.Type">
            <summary>
            Type of change.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangeContext.Data">
            <summary>
            Data for change. (for replace and insert)
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangeContext.Size">
            <summary>
            Size of data to be affected. (for delete and replace)
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangeContext.Length">
            <summary>
            Length of data in source.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.IO.DataWindowsSearch">
            <summary>
            Comparer for Data Windows.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.DataWindowsSearch.Compare(System.Object,System.Object)">
            <summary>
            Implementation of Compare method.
            </summary>
            <param name="x">Datawindow that is compared.</param>
            <param name="y">Object, that datawindow is compared to.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream">
            <summary>
            Stream, that can track changes.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.IChangesStream">
            <summary>
            Stream, that trackes changes.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.IStream">
            <summary>
            Interface for the streams.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads specified count of bytes from the stream.
            </summary>
            <param name="buffer">Buffer for reading.</param>
            <param name="offset">Offset in buffer.</param>
            <param name="count">Count of bytes to read to the buffer.</param>
            <returns>Count of bytes, really read.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes specified count of bytes from the buffer to stream.
            </summary>
            <param name="buffer">Buffer with data.</param>
            <param name="offset">Offset in buffer.</param>
            <param name="count">Count of bytes to write to the stream.</param>
            <returns>Count of bytes, really written.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets current position in stream to specified value.
            </summary>
            <param name="offset">Needed value.</param>
            <param name="origin">Origin of the value.</param>
            <returns>Position in stream, really set.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IStream.SetLength(System.Int64)">
            <summary>
            Sets new length of the stream.
            </summary>
            <param name="value">New length.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IStream.Close">
            <summary>
            Closes stream.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IStream.ReadByte">
            <summary>
            Reads single byte.
            </summary>
            <returns>Byte read.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IStream.WriteByte(System.Byte)">
            <summary>
            Writes byte to stream.
            </summary>
            <param name="value">Data to be written.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IStream.Flush">
            <summary>
            Flushed internal buffers.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IStream.CanRead">
            <summary>
            GET sing of ability of reading.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IStream.CanSeek">
            <summary>
            GET sing of ability of seeking.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IStream.CanWrite">
            <summary>
            GET sing of ability of writing.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IStream.Length">
            <summary>
            GET length of the stream.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IStream.Position">
            <summary>
            GET current position in the stream.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IChangesStream.FlushChanges">
            <summary>
            Fushes changes to source and empties undo buffer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IChangesStream.AddChange(Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangeContext)">
            <summary>
            Addes and applies new changes.
            </summary>
            <param name="context">Change context.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IChangesStream.AddChange(System.Int64,Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangeContext)">
            <summary>
            Addes and applies new changes.
            </summary>
            <param name="context">Change context.</param>
            <param name="position">Position in stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IChangesStream.Undo">
            <summary>
            Undo last action.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IChangesStream.Redo">
            <summary>
            Redoes last undone action.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IChangesStream.PopState">
            <summary>
            Pops current state.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IChangesStream.PushState">
            <summary>
            Pushes current state.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IChangesStream.CopyTo(System.IO.Stream)">
            <summary>
            Copies all data to specified stream.
            </summary>
            <param name="stream">Destination stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IChangesStream.CreateView">
            <summary>
            Creates new view.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IChangesStream.CanUndo">
            <summary>
            GET sing of posibility of undo.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IChangesStream.AutoPush">
            <summary>
            GET, SET count of changes, to be made, to execute autopush.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.DEF_BUFFER_SIZE">
            <summary>
            Default buffer size.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.DEF_FLUSH_BLOCK_LENGTH">
            <summary>
            Length of the block of data for flushing.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.DEF_DATA_WINDOWS_SEARCH_COMPARER">
            <summary>
            Comparer for DataWindows
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.m_source">
            <summary>
            Underlying stream, used as source for ChangesStream.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.m_changes">
            <summary>
            List of changes.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.m_UndoneChanges">
            <summary>
            List of changes.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.m_dataWindows">
            <summary>
            List of DataWindows.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.m_length">
            <summary>
            Current length of the stream.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.m_position">
            <summary>
            Current position in the stream.
            If buffer is filled, then it is position of the buffer start.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.m_data">
            <summary>
            Current data buffer.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.m_dataPoint">
            <summary>
            Current position in buffer.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.m_dataEnd">
            <summary>
            End position of the buffer.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.m_bResetCache">
            <summary>
            If true, buffer will be rereaded on next read or position change.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.m_statesStack">
            <summary>
            Stack of the saved states.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.m_lastChangesCount">
            <summary>
            Count of changes in last state saved in stack.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.m_iAutoPush">
            <summary>
            Count of changes, that can be done before
            state will be automaticaly pushed to stack.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.m_sync">
            <summary>
            Sync object for all view and stream
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.#ctor(System.IO.Stream)">
            <summary>
            Initializes stream by data from other stream.
            </summary>
            <param name="input">Source stream, must support Read and Seek operations</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Initializes stream by data from file.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="mode">Mode of file opening.</param>
            <param name="access">File access type.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.Dispose">
            <summary>
            Frees used memory.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.OnPositionChanged">
            <summary>
            Method, that is raised on every change of m_position.
            It means, that cache must be reloaded.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.RaiseDataChangedEvent">
            <summary>
            Raiser for DataChanged event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.ResetCache">
            <summary>
            Resets cache.
            Cache will be reloaded on next position change or read from stream.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.RaiseDataPositionChanged(System.Int64,System.Int64)">
            <summary>
            Raiser for DataPositionChanged event
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.RaiseUndoBufferFlushedEvent">
            <summary>
            Raises UndoBufferFlushed event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.RaiseRedoBufferFlushedEvent">
            <summary>
            Raises RedoBufferFlushed event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads data from stream to buffer.
            Reading is strarted from the current position.
            </summary>
            <param name="buffer">Array of bytes, where data must be put.</param>
            <param name="offset">Offset in buffer.</param>
            <param name="count">Count of bytes to be read.</param>
            <returns>Count of bytes, actually read.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes data to stream from current position.
            Actually it executes AddChange method with Insert change type.
            </summary>
            <param name="buffer">Data to be written.</param>
            <param name="offset">Offset of data to be written in buffer.</param>
            <param name="count">Count of bytes to be written.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets current position in the stream.
            </summary>
            <param name="offset">Offset, that position must be moved for.</param>
            <param name="origin">Specifies point, where offset must be applied.</param>
            <returns>Current position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.SetLength(System.Int64)">
            <summary>
            Changes length of the stream.
            </summary>
            <param name="value">new length of stream</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.Flush">
            <summary>
            Saves output stream to input stream.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.AddChange(Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangeContext)">
            <summary>
            Applies change in current position.
            </summary>
            <param name="context">Context of the change.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.AddChange(System.Int64,Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangeContext)">
            <summary>
            Applies change.
            </summary>
            <param name="position">Position in stream, where change is to be applied.</param>
            <param name="context">Context of the change.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.AddChange(System.Int64,Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangeContext,System.Boolean)">
            <summary>
            Applies change.
            </summary>
            <param name="position">Position in stream, where change is to be applied.</param>
            <param name="context">Context of the change.</param>
            <param name="bResetRedo">If true, redo buffer will be resetted.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.Undo">
            <summary>
            Undo last change.
            WARNING: it simply redos all operation except the last one.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.Redo">
            <summary>
            Redoes last undone change.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.PopState">
            <summary>
            Restores datawindows and changes to the last state, saved in stack.
            Last saved state is removed from stack.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.PushState">
            <summary>
            Saves current datawindows and changes to stack.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.FlushChanges">
            <summary>
            Saves all changes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.CopyTo(System.IO.Stream)">
            <summary>
            Writes current stream data to output stream.
            </summary>
            <param name="stream">Output stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.CreateView">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.DiscardChanges">
            <summary>
            Resets all changes, done to stream.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.ResetStream">
            <summary>
            Reset stream to default startup state
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.ChangeInsert(System.Int32,Syncfusion.Windows.Forms.Edit.Implementation.IO.DataWindow,System.Int64,System.Int64,System.Int64@,Syncfusion.Windows.Forms.Edit.Implementation.IO.DataWindow)">
            <summary>
            Make update of DataWindows according to Insert operation type logic
            </summary>
            <param name="index">Index of first DataWindow in update range</param>
            <param name="change">DataWindow with chages</param>
            <param name="start">Start position of update region</param>
            <param name="end">End position of update region</param>
            <param name="posChange">influence on current stream position</param>
            <param name="firstPart">DataWindow to which start position belong</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.ChangeReplace(System.Int32,Syncfusion.Windows.Forms.Edit.Implementation.IO.DataWindow,System.Int64,System.Int64,System.Int64@,Syncfusion.Windows.Forms.Edit.Implementation.IO.DataWindow,Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangeContext)">
            <summary>
            Make update of DataWindows according to Replace operation type logic
            </summary>
            <param name="index">Index of first DataWindow in update range</param>
            <param name="change">DataWindow with chages</param>
            <param name="start">Start position of update region</param>
            <param name="end">End position of update region</param>
            <param name="posChange">influence on current stream position</param>
            <param name="firstPart">DataWindow to which start position belong</param>
            <param name="context">Changes to context object</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.ChangeDelete(System.Int32,Syncfusion.Windows.Forms.Edit.Implementation.IO.DataWindow,System.Int64,System.Int64,System.Int64@,Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangeContext)">
            <summary>
            Make update of DataWindows according to Delete operation type logic
            </summary>
            <param name="index">Index of first DataWindow in update range</param>
            <param name="change">DataWindow with chages</param>
            <param name="start">Start position of update region</param>
            <param name="end">End position of update region</param>
            <param name="posChange">influence on current stream position</param>
            <param name="firstPart">DataWindow to which start position belong</param>
            <param name="context">Changes to context object</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.ExtractLastState">
            <summary>
            Restores datawindows and changes to the last state, saved in stack.
            WARNING: Method always must be called in lock( m_sync ) scope!!!
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.FillInternalBuffer(System.Byte[],System.Int64,System.Int64)">
            <summary>
            Fills cache by data from stream.
            </summary>
            <param name="data">Buffer</param>
            <param name="position">Position in stream</param>
            <param name="size">Size of data to be read</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.GetDataWindowsInRange(System.Int64,System.Int64)">
            <summary>
            Searches for all data windwos in specified range.
            </summary>
            <param name="start">Start position</param>
            <param name="end">End position</param>
            <returns>Array of DataWindows which contains data from start to end points</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.SplitDataWindow(Syncfusion.Windows.Forms.Edit.Implementation.IO.DataWindow,System.Int64)">
            <summary>
            Divides one window into two in some position.
            </summary>
            <param name="window">Window to be divided</param>
            <param name="position">Position in stream of division point</param>
            <returns>Second data window, that is cut</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.TrimDataWindows(System.Int32,System.Int64,Syncfusion.Windows.Forms.Edit.Implementation.IO.DataWindow)">
            <summary>
            Trims datawindows in specified range.
            </summary>
            <param name="index">Index of the first datawindow, that must be cut.
            Can be 0, then scan of entire list will occure.</param>
            <param name="position">Start position of trimming.</param>
            <param name="change">DataWindow, which size will be used for trimming.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.UpdateDataWindowsPositions">
            <summary>
            Updates all window's positions.
            Length is also updated.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.UpdateDataWindowsPositions(System.Int32)">
            <summary>
            Updates all window's positions starting from some index.
            Length is also updated.
            </summary>
            <param name="start">Index of the first windwo to be updated</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.CanUndo">
            <summary>
            GET defines, wheather user can Undo some actions in stream or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.CanRedo">
            <summary>
            GET, SET sign of redo ability.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.CanRead">
            <summary>
            GET defines, wheather user can read from stream.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.CanSeek">
            <summary>
            GET defines, wheather user can seek position in stream.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.CanWrite">
            <summary>
            GET defines, wheather user can write to stream.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.Length">
            <summary>
            GET Length of the stream
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.Position">
            <summary>
            GET or SET Current position in the stream.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.AutoPush">
            <summary>
            GET or SET count of changes, that can be done before
            state will be automaticaly pushed to stack.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.DataWindows">
            <summary>
            List of active windows.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.Changes">
            <summary>
            List of changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.LastSavedChangesCount">
            <summary>
            Looks for the last saved count of changes in the stack of Saved States
            </summary>
            <returns>Integer value of count or -1 if stack is empty</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.LastSavedDataWindows">
            <summary>
            Looks for the last saved list of DataWindows in the stack of Saved States
            </summary>
            <returns>List of data windows or null if stack is empty</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.SyncObject">
            <summary>
            
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.DataChanged">
            <summary>
            Event, that is raised on every change of data.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.DataPositionChanged">
            <summary>
            Event, that is raised when position of some data was changed.
            example: if some data was deleted, data, that is after deleted block, will be moved back for the length
            of deleted data, so it`s position will be changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.AutoPushChanged">
            <summary>
            Utility event raised on AutoPush property value change
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.UndoBufferFlushed">
            <summary>
            Event, that is raised when undo buffer is flushed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream.RedoBufferFlushed">
            <summary>
            Event, that is raised when redo buffer is flushed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.m_file">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.m_position">
            <summary>
            Current position in the stream.
            If buffer is filled, then it is position of the buffer start.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.m_data">
            <summary>
            Current data buffer.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.m_dataPoint">
            <summary>
            Current position in buffer.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.m_dataEnd">
            <summary>
            End position of the buffer.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.m_bResetCache">
            <summary>
            If true, buffer will be rereaded on next read or position change.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.#ctor(Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStream)">
            <summary>
            
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            
            </summary>
            <param name="offset"></param>
            <param name="origin"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.SetLength(System.Int64)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.Flush">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.Close">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.ReadByte">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.WriteByte(System.Byte)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.FlushChanges">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.AddChange(Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangeContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.AddChange(System.Int64,Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangeContext)">
            <summary>
            
            </summary>
            <param name="position"></param>
            <param name="context"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.Undo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.Redo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.PopState">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.PushState">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.CopyTo(System.IO.Stream)">
            <summary>
            Writes current stream data to output stream.
            </summary>
            <param name="stream">Output stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.CreateView">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.OnPositionChanged">
            <summary>
            Method, that is raised on every change of m_position.
            It means, that cache must be reloaded.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.ResetCache">
            <summary>
            Resets cache.
            Cache will be reloaded on next position change or read from stream.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.file_DataChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.CanUndo">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.CanRead">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.CanSeek">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.CanWrite">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.Length">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.Position">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.AutoPush">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ChangesStreamView.IsDisposed">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.IO.DataWindow">
            <summary>
            Class that implements some part of data for output stream
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.IDataWindow">
            <summary>
            Interface of data window - some part of data.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IDataWindow.Source">
            <summary>
            Source for reading data of this stream. More than one windows can use this source.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IDataWindow.Start">
            <summary>
            Index of first byte of window's data in Source.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IDataWindow.Size">
            <summary>
            Size of window's data.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IDataWindow.Position">
            <summary>
            Position of window in output stream.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.DataWindow.m_source">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.DataWindow.m_start">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.DataWindow.m_size">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.DataWindow.m_position">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.DataWindow.#ctor(Syncfusion.Windows.Forms.Edit.Interfaces.ISource)">
            <summary>
            Initializes data window by full size of source.
            </summary>
            <param name="source">Source of data for window.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.DataWindow.#ctor(Syncfusion.Windows.Forms.Edit.Interfaces.ISource,System.Int64,System.Int64)">
            <summary>
            Initializes data window.
            </summary>
            <param name="source">Source of data for window.</param>
            <param name="start">Start position of the window's data in source.</param>
            <param name="size">Size of the window's data in source.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.DataWindow.Finalize">
            <summary>
            Destoroy Class
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.DataWindow.Dispose">
            <summary>
            Deletes link to source to speed up it`s finalization
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.DataWindow.ToString">
            <summary>
            Represents data window in format "source:   xxx start:   xxx  position:    xxx"
            Mostly needed for debug purposes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.DataWindow.System#ICloneable#Clone">
            <summary>
            Clones DataWindow
            </summary>
            <returns>New DataWindow</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.DataWindow.Clone">
            <summary>
            Clones DataWindow
            </summary>
            <returns>New DataWindow</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.DataWindow.Source">
            <summary>
            Source for reading data of this stream. More than one windows can use this source.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.DataWindow.Start">
            <summary>
            Index of first byte of window's data in Source.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.DataWindow.Size">
            <summary>
            Size of window's data.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.DataWindow.Position">
            <summary>
            Position of window in output stream.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.DataWindow.IsDisposed">
            <summary>
            True - if class was disposed
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.IO.InputStreamSource">
            <summary>
            Implementation of ISource, that read data from some stream. (Ex. : file)
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.InputStreamSource.GetData(System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads data from the stream and writes it to array.
            </summary>
            <param name="position">Position of data in the source.</param>
            <param name="data">Array, where data will be written.</param>
            <param name="offset">Offset in array.</param>
            <param name="count">Size of data that have to be read.</param>
            <returns>Count of actually read bytes.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.InputStreamSource.#ctor(System.IO.Stream)">
            <summary>
            Initializes instance by stream.
            </summary>
            <param name="input"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.InputStreamSource.Position">
            <summary>
            GET SET position in stream.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.InputStreamSource.Length">
            <summary>
            Length of data in source.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.IO.NotAliveException">
            <summary>
            Exception, that is throw when someone is trying to access WeakParsePoint, that is already dead.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.IO.WeakParsePoint">
            <summary>
            Weak reference to the parsepoint, that supports IComparable interface.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.WeakParsePoint.#ctor(Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint)">
            <summary>
            Main constructor.
            </summary>
            <param name="point">Real ParsePoint, weak reference is referenced to.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.WeakParsePoint.CompareTo(System.Object)">
            <summary>
            Calls target`s CompareTo method.
            </summary>
            <param name="obj">Object to be compared with.</param>
            <returns>Result of the comparition. Also 0 is returned if Targed is not alive, so you must check it.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.WeakParsePoint.op_Implicit(Syncfusion.Windows.Forms.Edit.Implementation.IO.WeakParsePoint)~Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint">
            <summary>
            Operator for the implicit and explicit type cast of WeakParsePoint to ParsePoint.
            </summary>
            <param name="weakRef"><see cref="T:Syncfusion.Windows.Forms.Edit.Implementation.IO.WeakParsePoint"/> to be type-casted.</param>
            <returns>ParsePoint (Target property of the WeakParsePoint), or null if target is not alive.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint">
            <summary>
            ParsePoint is an object, used to keep data about some position in text stream.
            All changes are must be tracked and all parsepoints must be correctly updated 
            to ensure that all parsepoints are reliable.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint">
            <summary>
            Interface used to get parse point from which lexem started in stream.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint.Line">
            <summary>
            Line from which parse point started
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint.Position">
            <summary>
            Position in line where lexem started
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint.Offset">
            <summary>
            Offeset in the inner stream
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint.IsValid">
            <summary>
            GET sing of validity of parsepoint.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint.LineChanged">
            <summary>
            Event, that is raised, when Line property was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint.PositionChanged">
            <summary>
            Event, that is raised, when Position property was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint.OffsetChanged">
            <summary>
            Event, that is raised, when Offset property was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint.Deleted">
            <summary>
            Event that is raised when point is deleted from collection
            and became unreliable.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.DEF_UNRELIABLE_OFFSET">
            <summary>
            Offset for the parse point, that specifies it`s unreliability.
            It is set when parsepoint is deleted.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.m_iLine">
            <summary>
            ParsePoint`s line.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.m_iPosition">
            <summary>
            ParsePoint`s column in line.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.m_lOffset">
            <summary>
            ParsePoint`s offset in stream.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.#ctor">
            <summary>
            To prevent creation of empty point.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.#ctor(System.Int32,System.Int32,System.Int64)">
            <summary>
            Creates new instance of ParsePoint class.
            </summary>
            <param name="iLine">Initial line.</param>
            <param name="iPosition">Initial column.</param>
            <param name="lOffset">Initial position in stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.Dispose">
            <summary>
            Disposes object and frees used resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.RaiseLineChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            Raiser for LineChanged event.
            </summary>
            <param name="args">Argument for event.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.RaisePositionChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            Raiser for PositionChanged event.
            </summary>
            <param name="args">Argument for event.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.RaiseOffsetChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            Raiser for OffsetChanged event.
            </summary>
            <param name="args">Argument for event.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.RaiseDeletedEvent">
            <summary>
            Raises Deleted event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.OnLineChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            Called when Line property changed.
            </summary>
            <param name="args">Argument, that will be passed to raiser.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.OnPositionChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            Called when Position property changed.
            </summary>
            <param name="args">Argument, that will be passed to raiser.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.OnOffsetChanged(Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            Called when Offset property changed.
            </summary>
            <param name="args">Argument, that will be passed to raiser.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.ToString">
            <summary>
            Gives full informatio about ParsePoint.
            This information includes Line, Position and Offset.
            </summary>
            <returns>String with information.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.CompareTo(System.Object)">
            <summary>
            Comparer for array-sorters.
            </summary>
            <param name="obj">Another ParsePoint object, or int value, that specifies the offset.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.op_LessThan(Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint,Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint)">
            <summary>
            Defines operator.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.op_LessThanOrEqual(Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint,Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint)">
            <summary>
            Defines operator.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.op_GreaterThan(Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint,Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint)">
            <summary>
            Defines operator.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.op_GreaterThanOrEqual(Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint,Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint)">
            <summary>
            Defines operator.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.Clone">
            <summary>
            Creates new copy of ParsePoint. 
            </summary>
            <returns>New instance of the ParsePoint with copy of currnt instance`s data.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.Offset">
            <summary>
            GET, SET position in stream.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.Position">
            <summary>
            Gets or sets column in line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.Line">
            <summary>
            GET, SET line index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.IsValid">
            <summary>
            GET sing of validity of parsepoint.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.LineChanged">
            <summary>
            Event, that is raised, when Line property was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.PositionChanged">
            <summary>
            Event, that is raised, when Position property was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.OffsetChanged">
            <summary>
            Event, that is raised, when Offset property was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePoint.Deleted">
            <summary>
            Event that is raised when point is deleted from collection
            and became unreliable.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager">
            <summary>
            Class, that keeps list of ParsePoints and manages it.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.m_List">
            <summary>
            Internal list of parsepoints.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.DEF_PARSEPOINT_SEARCH">
            <summary>
            Comparer for search by position in stream
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.DEF_PARSEPOINT_SEARCH_POS">
            <summary>
            Comparer for search by position of cursor
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.m_bInUpdateState">
            <summary>
            Specifies wheather manager is currently updating parsepoint`s data.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.#ctor">
            <summary>
            Creates an instance of ParsePointManager class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.RemoveUnusedInstances">
            <summary>
            Removes dead parsepoints from list.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.GetParsePointAtPosition(System.Int64,System.Int32,System.Int32)">
            <summary>
            Searches for the parsepoint, associated with given offset, or creates new parsepoint.
            </summary>
            <param name="StreamOffset">Needed offset in the stream.</param>
            <param name="defLine">Line, that must be set if ParsePoint is created.</param>
            <param name="defColumn">Column, that must be set if ParsePoint is created.</param>
            <returns>IParsePoint of the found/created ParsePoint.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.InsertPointInPosition(System.Int64,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates new ParsePoint and inserts it to given position.
            </summary>
            <param name="streamOffset">Position in stream. Must be between two nearest ParsePoint`s positions.</param>
            <param name="line">ParsePoints line. No checks are done.</param>
            <param name="column">ParsePoints column. No checks are done.</param>
            <param name="index">Index, the ParsePoint is to be inserted at.</param>
            <returns>Newly created ParsePoint</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.GetParsePointByIndex(System.Int32)">
            <summary>
            Returns ParsePoint by it`s index in array.
            </summary>
            <param name="index">Index of the ParsePoint</param>
            <returns>IParsePoint interface</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.OffsetChanged(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint,System.Int64,System.Int32,System.Int32)">
            <summary>
            Updates offsets of all ParsePoints, starting from the given position.
            If data was deleted, than iBytesInserted must be negative, everything else must be positive.
            </summary>
            <param name="startPointIndex">Index of the StartPoint, that is in position, that was moved</param>
            <param name="iBytesInserted">Count of inserted byte (if negative, then bytes were deleted)</param>
            <param name="iLinesInData">Count of lines in inserted/deleted data</param>
            <param name="iLastLineLength">Position offset for the last line.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.CheckIntegrity">
            <summary>
            Checks integrity of the internal list of parsepoints.
            </summary>
            <returns>true if everything is OK. Otherwise it returns false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.DeleteParsePointInternal(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint)">
            <summary>
            Deletes ParsePoint.
            </summary>
            <param name="parsePoint"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.GetEnumerator(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint,Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint)">
            <summary>
            Gets enumerator for the specified range of ParsePoints.
            </summary>
            <param name="start">ParsePoint of the range start.</param>
            <param name="end">ParsePoint of the range end.</param>
            <returns>Enumerator for array.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.GetEnumerator(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint)">
            <summary>
            Gets enumerator for the specified range of ParsePoints.
            </summary>
            <param name="start">ParsePoint of the range start.</param>
            <returns>Enumerator for array.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.GetEnumerator(System.Int32,System.Int32)">
            <summary>
            Gets enumerator for the specified range of ParsePoints.
            </summary>
            <param name="start">Start index.</param>
            <param name="count">Count of ParsePoints.</param>
            <returns>Enumerator for array.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.GetEnumerator">
            <summary>
            Gets enumerator for all ParsePoints.
            </summary>
            <returns>Enumerator for array.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.CreateNewParsePoint(System.Int32,System.Int32,System.Int64)">
            <summary>
            Creates new ParsePoint object and weak reference to it.
            </summary>
            <param name="iLine">Line for the new ParsePoint.</param>
            <param name="iPosition">Position for new ParsePoint.</param>
            <param name="lOffset">Offset for new ParsePoint.</param>
            <returns>WeakParsePoint instance with newly created ParsePoint as it`s Target.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.BinarySearch(System.Object,System.Collections.IComparer)">
            <summary>
            Invokes binary search in list of ParsePoints. 
            If there are some dead weak references, 
            <see cref="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.RemoveUnusedInstances"/> method will be called
            and binary search will be invoked again.
            </summary>
            <param name="value">Value to be searched.</param>
            <param name="comparer">Comparer.</param>
            <returns>Standart result of the BinarySearch.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.GetNearestParsePoints(System.Int64,Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint@,Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint@)">
            <summary>
            Looks for the nearest ParsePoints for the given offset.
            </summary>
            <param name="StreamOffset">Offset in the stream</param>
            <param name="LeftPoint">Returns left nearest point</param>
            <param name="RightPoint">Returns right nearest point</param>
            <returns>Returns false if there is no parsepoints at all, otherwise returns true</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.GetNearestParsePoints(System.Int32,System.Int32,Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint@,Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint@)">
            <summary>
            Looks for the nearest ParsePoints for the given position.
            </summary>
            <param name="Line">Positions line</param>
            <param name="Column">Positions column</param>
            <param name="LeftPoint">Returns left nearest point</param>
            <param name="RightPoint">Returns right nearest point</param>
            <returns>Returns false if there is no parsepoints at all, otherwise returns true</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.GetNearestParsePoints(System.Int64,System.Int32@,System.Int32@)">
            <summary>
            Looks for the nearest ParsePoints for the given offset.
            </summary>
            <param name="StreamOffset">Offset in the stream</param>
            <param name="LeftPointIndex">Index of the left nearest point</param>
            <param name="RightPoinIndext">Index of the right nearest point</param>
            <returns>Returns false if there is no parsepoints at all, otherwise returns true</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.GetNearestParsePoints(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Looks for the nearest ParsePoints for the given position.
            </summary>
            <param name="Line">Positions line</param>
            <param name="Column">Positions column</param>
            <param name="LeftPointIndex">Index of the left nearest point</param>
            <param name="RightPoinIndext">Index of the right nearest point</param>
            <returns>Returns false if there is no parsepoints at all, otherwise returns true</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.GetParsePointByComparer(System.Object,System.Collections.IComparer)">
            <summary>
            Looks for ParsePoint, that is left to the given value.
            </summary>
            <param name="value">Value, to be found</param>
            <param name="comparer">Comparer, that is used to find needed value</param>
            <returns>ParsePoint, that is on given Value or left to it</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.Count">
            <summary>
            GET count of ParsePoints
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.ParsePointSearch">
            <summary>
            Class, used for search of ParsePoint by it`s offset.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.ParsePointSearch.Compare(System.Object,System.Object)">
            <summary>
            Compares two elements by their offset.
            </summary>
            <param name="x">WeakParsePoint.</param>
            <param name="y">WeakParsePoint or long.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.ParsePointSearchByPosition">
            <summary>
            Class, used for serach of ParsePoint by it`s position.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.ParsePointManager.ParsePointSearchByPosition.Compare(System.Object,System.Object)">
            <summary>
            Compares two elements by their offset.
            </summary>
            <param name="x">WeakParsePoint.</param>
            <param name="y">ParsePoint or int.</param>
            <returns></returns>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.RegexTokenizer.DEF_TOKEN_SPLITS">
            <summary>
            Default one-char splitters.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.RegexTokenizer.DEF_NEW_LINE_DETECTION_PATTERN">
            <summary>
            Regular expression pattern for new-line style detection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.RegexTokenizer.DEF_COMPARER">
            <summary>
            Length comparer.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.RegexTokenizer.m_regex">
            <summary>
            Current compiled regular expression.
            </summary>
            <remarks>
            Must be set to null by any change of splitters, and recreated later as needed.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.RegexTokenizer.m_reader">
            <summary>
            Reader for the underlying stream.
            </summary>
            <remarks>
            Note: reader has it`s own cache, so on every cache of position cache must be resetted.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.RegexTokenizer.m_match">
            <summary>
            Last match of the RegEx.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.RegexTokenizer.m_line">
            <summary>
            Current line cache.
            </summary>
            <remarks>
            Line can be loaded to cache just partialy.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.RegexTokenizer.m_position">
            <summary>
            Current position in stream.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.RegexTokenizer.m_endLineString">
            <summary>
            EndLine symbol(s).
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.RegexTokenizer.m_MultiCharSplits">
            <summary>
            Arrays of multi-char splitters.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.RegexTokenizer.m_OneCharSplits">
            <summary>
            Arrays of multi-char splitters.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.RegexTokenizer.BuildRegex">
            <summary>
            Creates compiled regular expression, used for text parsing.
            </summary>
            <returns>Newly created regular expression.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.RegexTokenizer.#ctor(System.IO.Stream)">
            <summary>
            Creates new instance of the tokenizer, detects new-line style and save stream`s position.
            </summary>
            <param name="input">Input stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.RegexTokenizer.Close">
            <summary>
            Closes reader.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.RegexTokenizer.ResetRegEx">
            <summary>
            Resets current compiled regular epression and all buffered data.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.RegexTokenizer.ResetBuffer(System.Boolean)">
            <summary>
            Discards all buffered data.
            </summary>
            <param name="bCorrectPosition">Specifies wheather stream position 
            must be set to currently calculated.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.RegexTokenizer.ReadLine">
            <summary>
            Reads line starting from the current position.
            </summary>
            <returns>Text line.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.RegexTokenizer.ReadLineInternal">
            <summary>
            Reads line starting from the current position.
            </summary>
            <returns>Text line.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.RegexTokenizer.ReadToken">
            <summary>
            Reads one token.
            </summary>
            <returns>Token.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.RegexTokenizer.DetectFileNewLineStyle">
            <summary>
            Tries to detect NewLine symbol.
            </summary>
            <returns>Detected new-line style, or Windows default if detection failed.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.RegexTokenizer.Expression">
            <summary>
            GET gurrent compiled regular expression, used to parse stream.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.RegexTokenizer.MultiCharTokens">
            <summary>
            GET, SET array of multy-char tokens.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.RegexTokenizer.OneCharTokens">
            <summary>
            GET, SET string, that is treated as an array of the one-char delimiters.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.RegexTokenizer.Position">
            <summary>
            GET, SET current stream position.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.RegexTokenizer.LengthComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares two strings by their length, if it is equal, 
            than calls standart comparition.
            </summary>
            <param name="x">First string.</param>
            <param name="y">Second string.</param>
            <returns>Standart comparition result.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamState">
            <summary>
            Sturcture, that keeps array of data windows and position in changes list
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamState.DEF_CAPACITY">
            <summary>
            Default reserve size for ArrayList
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamState.m_lPosition">
            <summary>
            Saved position in stream.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamState.m_arrWindowsList">
            <summary>
            Saved clone of the list with DataWindows.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamState.m_iChangesCount">
            <summary>
            Saved count of changes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamState.#ctor">
            <summary>
            Hide default contstructor
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamState.#ctor(System.Int32,System.Int64)">
            <summary>
            Main constructor
            </summary>
            <param name="count">quantity of changes</param>
            <param name="position">Current Position</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamState.#ctor(System.Int32,System.Int64,System.Int32)">
            <summary>
            Main construsctor allow to set ChangesCount, Position and
            reserve some free space for ArrayList
            </summary>
            <param name="count">quantity of changes</param>
            <param name="position">Current Position</param>
            <param name="capacity">How must space to reserve</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamState.Position">
            <summary>
            Get position
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamState.WindowsList">
            <summary>
            Get array of DataWindows
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamState.ChangesCount">
            <summary>
            Get quantity of changes in stack
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper">
            <summary>
            Class, that manages cooperational work of the ChangesStream, 
            TokenStream and ParsePointManager.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.DEF_BUFFER_SIZE">
            <summary>
            Stream buffer used for optimizing speed of read/write operations
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.DEF_SEARCH_DATA_GROUP">
            <summary>
            Name of the data group for search.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.m_ChangesStream">
            <summary>
            Input stream for TokenStream
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.m_TokenStream">
            <summary>
            Token stream, used to read stream by tokens.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.m_inputStream">
            <summary>
            Input stream, that must be closed later.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.m_ParsePointManager">
            <summary>
            Manager of the ParsePoints.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.m_LinesCount">
            <summary>
            Count of lines in file.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.m_version">
            <summary>
            Current version of the wrapper.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.m_UndoStack">
            <summary>
            Stack for the undo.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.m_RedoStack">
            <summary>
            Stack for the redo.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.#ctor(System.String)">
            <summary>
            Constructor must received a file name and try to open it
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.#ctor(System.String,System.IO.FileMode)">
            <summary>
            constructor allow to control mode of file open operation
            </summary>
            <param name="fileName"></param>
            <param name="mode"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Constructor allow to control File open mode and access flags
            </summary>
            <param name="fileName">File name</param>
            <param name="mode">A FileMode constant that determines how to open or create the file. </param>
            <param name="access">A FileAccess constant that determines how the file can be
            accessed by the TokenStream object. This gets the CanRead and CanWrite properties
            of the FileStream object. CanSeek is true if path specifies a disk file</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            Open stream. Constructor allow to specify parameter of stream open
            </summary>
            <param name="fileName">File name</param>
            <param name="mode">A FileMode constant that determines how to open or create the file. </param>
            <param name="access">A FileAccess constant that determines how the file can be
            accessed by the TokenStream object. This gets the CanRead and CanWrite properties
            of the FileStream object. CanSeek is true if path specifies a disk file</param>
            <param name="share">A FileShare constant that determines how the file will be shared
            by processes</param>
            <param name="bufferSize">size of internal buffer used for read/write operations
            optimizations</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.#ctor(System.IO.Stream)">
            <summary>
            Constructor, initializes new object
            </summary>
            <param name="input">Input data Stream</param>
            <param name="bufferSize">Size of the Stream</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.FromString(System.String)">
            <summary>
            Initializes StreamsWrapper from string input
            </summary>
            <param name="buffer">String with input data</param>
            <returns>StreamsWrapper Object</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.RaiseLinesCountChangedEvent(System.Int32,System.Int32)">
            <summary>
            Raisers of the LinesCountChanged event.
            </summary>
            <param name="oldValue">Old count of lines.</param>
            <param name="newValue">New count of lines.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.RaiseUndoBufferFlushedEvent">
            <summary>
            Raises UndoBufferFlushed event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.RaiseRedoBufferFlushedEvent">
            <summary>
            Raises RedoBufferFlushed event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.FlushChanges">
            <summary>
            Flushes all changes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.GetParsePoint(System.Object,System.Collections.IComparer)">
            <summary>
            Looks for ParsePoint, that is left to the given value.
            </summary>
            <param name="value">Value, to be found</param>
            <param name="comparer">Comparer, that is used to find needed value</param>
            <returns>ParsePoint, that is on given Value or left to it</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.GetParsePoint(System.Int64)">
            <summary>
            Retreaves ParsePoint by given offset in stream.
            </summary>
            <param name="streamOffset">Needed offset in stream.</param>
            <returns><see cref="T:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint"/> that coresponds to the needed offset.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.GetParsePoint(System.Int32,System.Int32,Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint@,Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint@,System.Boolean)">
            <summary>
            Searches for the ParsePoint in given position, or,
            if there is no such position in file, the nearest to it couple.
            If there is no ParsePoint, but such position exists in file, new ParsePoint will be created.
            </summary>
            <param name="line">Positions line</param>
            <param name="column">Positions column</param>
            <param name="leftNearest">Nearest ParsePoint from the left</param>
            <param name="rightNearest">Nearest ParsePoint from the right</param>
            <param name="create">If false, you have not remove returned ParsePoint after usage.
            Also newly created ParsePoint will not be added to update list if thi parameter is false.</param>
            <returns>IParsePoint interface of the found/created ParsePoint</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.GetParsePoint(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Searches for the ParsePoint in given position, or,
            if there is no such position in file, the nearest to it couple.
            If there is no ParsePoint, but such position exists in file, new ParsePoint will be created.
            </summary>
            <param name="Line">Positions line</param>
            <param name="Column">Positions column</param>
            <returns>IParsePoint interface of the found/created ParsePoint</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.SetPositionToParsePoint(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint)">
            <summary>
            Sets current position to the given ParsePoint
            </summary>
            <param name="point">IParsePoint interface to the ParsePoint</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.ReadToken">
            <summary>
            Reads token from current stream position.
            </summary>
            <returns>Token</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.PeekToken">
            <summary>
            Reads token from stream, but does not advances it`s position.
            </summary>
            <returns>Token</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.ReadToken(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint)">
            <summary>
            Reads token from given position.
            </summary>
            <param name="position">ParsePoint with position in the stream.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.InsertText(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint,System.String)">
            <summary>
            Writes string to the stream starting from the given position.
            </summary>
            <param name="position">ParsePoint of the starting position</param>
            <param name="str">Text to write.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.DeleteText(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint,Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint)">
            <summary>
            Deletes text in specified range.
            Start and end are not included in to the delition range.
            </summary>
            <param name="start">Start ParsePoint.</param>
            <param name="end">End ParsePoint.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.Undo">
            <summary>
            Undoes last action.
            </summary>
            <returns>Undo item, that was undone.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.Redo">
            <summary>
            Redoes last undone action.
            </summary>
            <returns>Undo item that was redone.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.ConvertNewLines(System.String)">
            <summary>
            Converts all new-line symbols in string.
            All new line symbols are converted to \n.
            </summary>
            <param name="str">String to be converted.</param>
            <returns>Converted string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.GetTextInRange(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint,Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint,System.Boolean)">
            <summary>
            Reads text from specified range.
            </summary>
            <param name="start">Start of the range.</param>
            <param name="end">End of the range.</param>
            <param name="bConvert">Flag, that specifies wheather all new-line
            symbols have to be converted to /n.</param>
            <returns>Text from the stream.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.SetLineStartPoints(System.Int32,System.Int32,System.Int32)">
            <summary>
            Set`s ParsePoints at the start of every line in given range.
            </summary>
            <param name="Start">First line</param>
            <param name="End">Last line</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.ForceFileRescan">
            <summary>
            Rescans line count in file and updates line-start ParsePoints
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.FindNext(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint,System.Text.RegularExpressions.Regex)">
            <summary>
            Searches text, specified by regular expression, in stream.
            </summary>
            <param name="start">Start position of the search.</param>
            <param name="expression">Regular expression, used for search.</param>
            <returns>Result of the search. Never can be null.</returns>
            <remarks>
            If you want to treat as found sub-string just some part of the text, than 
            you have to wrap this search part in to a named group with name "_data_".
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.Save">
            <summary>
            Saves changes to file.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.SaveTo(System.IO.Stream)">
            <summary>
            Saves data to given stream.
            </summary>
            <param name="stream">Output stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.Close(System.Boolean)">
            <summary>
            Closes internal stream.
            They are no longer accessible.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.GetParsePointEnumerator">
            <summary>
            Gets enumerator for all ParsePoints
            </summary>
            <returns>Enumerator. Every element is IParsePoint.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.GetParsePointEnumerator(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint,Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint)">
            <summary>
            Gets enumerator for all ParsePoints in specified range.
            </summary>
            <param name="startPoint">Start of the range.</param>
            <param name="endPoint">End of the range.</param>
            <returns>Enumerator. Every element is IParsePoint.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.GetParsePointEnumerator(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint)">
            <summary>
            Gets enumerator for all ParsePoints in range from specified one to the last one.
            </summary>
            <param name="startPoint">Start of the range.</param>
            <returns>Enumerator. Every element is IParsePoint.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.DiscardChanges">
            <summary>
            Discards all unsaved changes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.CalculateTextData(System.String@,System.Int32@,System.Int32@)">
            <summary>
            Calculates parameters of the text.
            </summary>
            <param name="str">Text to process.</param>
            <param name="LinesCount">OUT count of lines in text.</param>
            <param name="LastLineCharsCount">OUT length of the last line.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.SetNewLinesCount(System.Int32)">
            <summary>
            Sets new value of lines count property and raises LinesCountChanged event.
            </summary>
            <param name="newValue">New value of the LinesCount property.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.OnUndoBufferFlush(System.Object,System.EventArgs)">
            <summary>
            Handler for the UndoBufferFlushed event of the changes stream.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.OnRedoBufferFlush(System.Object,System.EventArgs)">
            <summary>
            Handler for the UndoBufferFlushed event of the changes stream.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.Version">
            <summary>
            Current version of the wrapper.
            It is incremented on every insert, delete or replace.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.ParsePointsCount">
            <summary>
            Count of the ParsePoints.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.Position">
            <summary>
            Get or Set current position in the stream.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.Length">
            <summary>
            GET total length of the stream.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.IsEOF">
            <summary>
            Detects, wheather we have reached end of file.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.LinesCount">
            <summary>
            GET lines count in stream.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.MultiCharTokens">
            <summary>
            Array of tokes, that consists of more than one splitters
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.NewLineStr">
            <summary>
            Line end symbols (/r, /n, /r/n)
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.AutoPush">
            <summary>
            AutoPush property of the ChangesStream.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.CanUndo">
            <summary>
            GET flag that specifies wheather there are actions to be undone.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.CanRedo">
            <summary>
            GET sign of redo ability.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.NewLineSize">
            <summary>
            Size ( in bytes ) of the new-line symbol.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.CanWrite">
            <summary>
            Gets the value, indicating that stream supports write operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.Encoding">
            <summary>
            GET currectly used encoding.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.CaseSensitive">
            <summary>
            Get or Set case sensitivity of the tokenizer.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.LinesCountChanged">
            <summary>
            Event, that is raised when count of lines has been changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.UndoBufferFlushed">
            <summary>
            Event, that is raised when undo buffer is flushed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper.RedoBufferFlushed">
            <summary>
            Event, that is raised when redo buffer is flushed.
            </summary>
        </member>
        <member name="T:Syncfusion.IO.NewLineStyle">
            <summary>
            Represents new line in different OS
            </summary>
        </member>
        <member name="T:Syncfusion.IO.TokenStream">
            <summary>
            Stream which return and write data as string tokens into/from file.
            Stream support encoding and data buffering.
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.DEF_BUFFER_SIZE">
            <summary>
            Stream buffer used for optimizing speed of read/write operations
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.DEF_READ_CHAR_BUFFER_SIZE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.DEF_TOKEN_SPLITS">
            <summary>
            characters which delimit tokens
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.DEF_MULTI_TOKEN_SPLIT">
            <summary>
            Array of atomic tokens which can takes more then one symbol
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream._preambles">
            <summary>
            Known to us preambles of encodings
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream._encodings">
            <summary>
            Known to us encodings
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.m_iSkippedBytes">
            <summary>
            Count of bytes in the beginning of the stream, that must be skipped. (Preambula)
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.m_OneSorted">
            <summary>
            Array of sorted split chars - used by BinarySearch method
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.m_TokenBuffer">
            <summary>
            Temporary storage for token extracting. Used beacus it does not
            reallocated on each string set...
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.m_MultiSorted">
            <summary>
            array of multi-symbols tokens
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.m_encoding">
            <summary>
            Encoding used for read and write operations
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.m_multiFirst">
            <summary>
            Hash which helps detect multi-symbols tokens spliters
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.m_buffer">
            <summary>
            Buffer stream... can be simply replaced by this reference
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.m_strEndOfLine">
            <summary>
            New line splitter
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.m_style">
            <summary>
            Storage of EndLineStyle property
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.m_maxMultiLen">
            <summary>
            Storage of MaxMultiTokenLength property
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.m_minMultiLen">
            <summary>
            Storage of MinMultiTokenLength property
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.m_bCaseSensitive">
            <summary>
            Indicate is stream extract multichar token in case sensitive
            or insensitive mode
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.m_bControlStream">
            <summary>
            If value set to true value then class has rights to dispose m_buffer
            variable, otherwise Internal stream does not belong to class and must
            be free by user
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.m_stack">
            <summary>
            Stack used for multichar token extract operations
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.m_readCharBuffer">
            <summary>
            This buffer used as temporary for extracting chars from source stream
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.m_chPeekChar">
            <summary>
            variable store extracted from stream char on peek operation
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.m_bPeekChar">
            <summary>
            True - cache contains some data, otherwise false
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.m_strPeekToken">
            <summary>
            varaiable store token extracted from stream by Peek operation
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.m_bPeekToken">
            <summary>
            True - cache contains some data, otherwise false
            </summary>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.GetEnumerator">
            <summary>
            Method return enumerator which give us stream data by tokens
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.#ctor(System.String)">
            <summary>
            Constructor must received a file name and try to open it
            </summary>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.#ctor(System.String,System.IO.FileMode)">
            <summary>
            constructor allow to control mode of file open operation
            </summary>
            <param name="fileName"></param>
            <param name="mode"></param>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Constructor allow to control File open mode and access flags
            </summary>
            <param name="fileName">File name</param>
            <param name="mode">A FileMode constant that determines how to open or create the file. </param>
            <param name="access">A FileAccess constant that determines how the file can be
            accessed by the TokenStream object. This gets the CanRead and CanWrite properties
            of the FileStream object. CanSeek is true if path specifies a disk file</param>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            construct allow to override file mode, access and share flags
            </summary>
            <param name="fileName">File name</param>
            <param name="mode">A FileMode constant that determines how to open or create the file. </param>
            <param name="access">A FileAccess constant that determines how the file can be
            accessed by the TokenStream object. This gets the CanRead and CanWrite properties
            of the FileStream object. CanSeek is true if path specifies a disk file</param>
            <param name="share">A FileShare constant that determines how the file will be shared
            by processes</param>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
            <summary>
            Open stream. Constructor allow to specify parameter of stream open
            </summary>
            <param name="fileName">File name</param>
            <param name="mode">A FileMode constant that determines how to open or create the file. </param>
            <param name="access">A FileAccess constant that determines how the file can be
            accessed by the TokenStream object. This gets the CanRead and CanWrite properties
            of the FileStream object. CanSeek is true if path specifies a disk file</param>
            <param name="share">A FileShare constant that determines how the file will be shared
            by processes</param>
            <param name="bufferSize">size of internal buffer used for read/write operations
            optimizations</param>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.#ctor(System.IO.Stream)">
            <summary>
            Constructor, initializes new object
            </summary>
            <param name="input">Input data Stream</param>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Create Token stream from other stream.
            encoding of input stream class try to detected automaticaly.
            </summary>
            <param name="input">source stream</param>
            <param name="controlStream">True - if TokenStream instance must close input stream on
            own Close, otherwise false</param>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Create Token stream from other stream with specified by user encoding
            </summary>
            <param name="input">input stream</param>
            <param name="encoding">If encoding of input stream known then you can
            specify it, otherwise send null value for auto-detection</param>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
            <summary>
            Create Token stream from other stream with specified by user encoding.
            Constructor help to specify must class control input stream or not
            </summary>
            <param name="input">input strea</param>
            <param name="encoding">If encoding of input stream known then you can
            specify it, otherwise send null value for auto-detection</param>
            <param name="controlStream">True - if TokenStream instance must close input stream on
            own Close, otherwise false</param>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.#ctor(System.IO.Stream,System.Boolean,System.Int32)">
            <summary>
            Constructor, initializes new object
            encoding of input stream class try to detected automaticaly.
            </summary>
            <param name="input">Input data Stream</param>
            <param name="controlStream">True - if TokenStream instance must close input stream on
            own Close, otherwise false</param>
            <param name="bufferSize">Size of the Stream</param>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)">
            <summary>
            Constructor, initializes new object
            </summary>
            <param name="input">Input data Stream</param>
            <param name="encoding">If encoding of input stream known then you can
            specify it, otherwise send null value for auto-detection</param>
            <param name="controlStream">True - if TokenStream instance must close input stream on
            own Close, otherwise false</param>
            <param name="bufferSize">Size of the Stream</param>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.FromString(System.String)">
            <summary>
            Initializes TokenStream from string input
            </summary>
            <param name="buffer">String with input data</param>
            <returns>TokenStream Object</returns>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.Dispose">
            <summary>
            Free resources of Token stream class
            </summary>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes data into Stream
            </summary>
            <param name="buffer">Data which will be writing</param>
            <param name="offset">Start Position</param>
            <param name="count">Number of Symbols</param>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.Peek">
            <summary>
            Peek one byte from stream
            </summary>
            <returns>-1 if end of stream reached, otherwise one byte from stream</returns>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.PeekChar">
            <summary>
            Method extract one char from stream
            </summary>
            <returns>-1 if end of stream, otherwise integer value of char</returns>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.PeekToken">
            <summary>
            Peek Token from the Stream
            </summary>
            <returns>string.Empty or null if end of stream, otherwise extracted token</returns>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.Read">
            <summary>
            Reads one byte from stream
            </summary>
            <returns>-1 if end of stream reached, otherwise one byte from stream</returns>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.ReadChar">
            <summary>
            Read one char from stream and shift position of stream to next char
            </summary>
            <returns>-1 if end of stream, otherwise integer value of char</returns>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.ReadLine">
            <summary>
            read single line
            </summary>
            <returns>String.Empty if end of stream reached, otherwise line from file</returns>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.SkipLine">
            <summary>
            Moves current position in the stream to the next line
            </summary>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.ReadToken">
            <summary>
            Read one token from stream
            </summary>
            <returns>null if end of stream reached, otherwise token string</returns>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.ReadTokens(System.String[],System.Int32,System.Int32)">
            <summary>
            Read mutliple tokens from stream into array
            </summary>
            <param name="buffer">array where extracted tokens must be placed</param>
            <param name="position">start position in array</param>
            <param name="length">quantity of tokens to extract</param>
            <returns>quantity of extracted tokens</returns>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.Read(System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads data from the Stream
            </summary>
            <param name="buffer">Source Stream</param>
            <param name="offset">Start position</param>
            <param name="count">Number of symbols</param>
            <returns>number of extracted charecters</returns>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads data from the Stream
            </summary>
            <param name="buffer">Input Stream</param>
            <param name="offset">Start Position</param>
            <param name="count">Number of Symbols</param>
            <returns>number of extracted bytes</returns>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.IsSplitTokenChar(System.Char)">
            <summary>
            Check does char belong to one symbols tokens separators or not
            </summary>
            <param name="ch">char to test</param>
            <returns>true - if char belong to split chars, otherwise false</returns>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.GetMultiToken(System.Char[],System.String@)">
            <summary>
            Method check charecter from array for multi-symbols tokens and return
            quantity of used cherecters from array for token, also it return token.
            In case when nothing found return -1. Method try to find longest token
            from list.
            </summary>
            <param name="ch">chars to check</param>
            <param name="token">found token</param>
            <returns>Used chars from input array, otherwise -1</returns>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.ConvertToLinePosition(System.Int64,System.Int32@,System.Int32@)">
            <summary>
            Method convert offset to Line number and position in line
            </summary>
            <param name="offset">Offset which must be converted to line and position values</param>
            <param name="line">line part of offset</param>
            <param name="position">position part of offset</param>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.GetNewLineString(Syncfusion.IO.NewLineStyle)">
            <summary>
            Method convert enumeration to it string representation
            </summary>
            <param name="value">value to convert</param>
            <returns>end line string</returns>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.DetectFileNewLineStyle">
            <summary>
            Method check file and try to detect which line end code is used in file
            </summary>
            <returns>in case of error NewLineStyle.Windows style returned</returns>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.DetectFileEncoding">
            <summary>
            Method try to detect file encoding
            </summary>
            <returns>Detect file encoding by preambles</returns>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.CompareArrays(System.Byte[],System.Byte[])">
            <summary>
            Method compare two arrays and return result of comapring
            </summary>
            <param name="source">source array</param>
            <param name="preamble">array with preambles symbols</param>
            <returns>0 - they are identical, -1 - source array less then
            preamble array</returns>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.Close">
            <summary>
            Close current file
            </summary>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.Flush">
            <summary>
            Flush changes from internal buffers to source streams
            </summary>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets position withing the stream
            </summary>
            <param name="offset">Start position</param>
            <param name="origin">indicating the reference point used to obtain the new position</param>
            <returns>new positions in stream</returns>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.SeekOnTokenLength(System.String,System.Boolean,System.IO.SeekOrigin)">
            <summary>
            Sets the position withing the Stream
            </summary>
            <param name="token">Token</param>
            <param name="origin">indicating the reference point used to obtain the new position</param>
            <returns>new position in stream</returns>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.SetLength(System.Int64)">
            <summary>
            Sets Length in the Stream
            </summary>
            <param name="value">Length of the Stream</param>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.GetLinesCount(System.Int64,System.Int64)">
            <summary>
            Calculates count of lines between to positions in the file
            </summary>
            <param name="startPos">Start position for calculating</param>
            <param name="endPos">End position for calculating</param>
            <returns>Count of lines</returns>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.BuildFastCharTree(System.Collections.Hashtable,System.String[])">
            <summary>
            Method create tree ob FastChar objects which allow to search faster
            any word from stream by chars. '\uffff' - symbol indicate end of string
            from source array.
            </summary>
            <param name="source">hash table which will store FastChar's objects</param>
            <param name="value">array of strings</param>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.BuildFastCharTreeEx(System.Collections.Hashtable,System.String[])">
            <summary>
            Method create tree ob FastChar objects which allow to search faster
            any word from stream by chars. '\uffff' - symbol indicate end of string
            from source array. Alternative method of FastChar tree building.
            </summary>
            <param name="source">hahs table which will store FastChar's objects</param>
            <param name="value">array of strings</param>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.GetFastChar(System.Char)">
            <summary>
            According to CaseSensitive property value return case sensitive or
            case insensitive FastChar class instance.
            </summary>
            <param name="ch">Init new instance by char</param>
            <returns>Reference on new instance of FastChar class</returns>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.CalculateLineCount(System.String)">
            <summary>
            Calculate lines in stream
            </summary>
            <returns>Return total lines count in file</returns>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.CalculateLineCount(System.String,System.Int64,System.Int32@)">
            <summary>
            Calculate lines in stream till specified positon
            </summary>
            <param name="endOfLine">string which interpreted as end of line</param>
            <param name="tillOffset">make calculations till specified offset</param>
            <param name="position">return position part of calculation</param>
            <returns>lines quantity in area from current Position tillOffset vaue</returns>
        </member>
        <member name="P:Syncfusion.IO.TokenStream.MaxMultiTokenLength">
            <summary>
            Get maximum size of multi symbols token
            </summary>
        </member>
        <member name="P:Syncfusion.IO.TokenStream.MinMultiTokenLength">
            <summary>
            Get minimum size of multi symbols token
            </summary>
        </member>
        <member name="P:Syncfusion.IO.TokenStream.OneCharTokens">
            <summary>
            Get or set array of charecters which can split tokens in stream.
            Each symbol from this array will be returned by Stream as token
            with one char, for more complex constructions must be used
            MultiCharTokens property values.
            </summary>
        </member>
        <member name="P:Syncfusion.IO.TokenStream.MultiCharTokens">
            <summary>
            Get or set multi-symbols atomic tokens. This property can used by
            top-level abstractions for extracting special lexems, like: ++, --,
            +=, -=, !=, ==, *= and etc.
            </summary>
        </member>
        <member name="P:Syncfusion.IO.TokenStream.CaseSensitive">
            <summary>
            Get or set does MultiCharTokens case sensitive or not.
            Default is case sensitive - TRUE.
            This property greatly reduce performance of TokenStream class
            that is use it only where it realy needed
            </summary>
        </member>
        <member name="P:Syncfusion.IO.TokenStream.Encoding">
            <summary>
            Encoding used for file reading
            </summary>
        </member>
        <member name="P:Syncfusion.IO.TokenStream.Position">
            <summary>
            get or set position in stream
            </summary>
        </member>
        <member name="P:Syncfusion.IO.TokenStream.CanSeek">
            <summary>
            If TokenStream can Seek
            </summary>
        </member>
        <member name="P:Syncfusion.IO.TokenStream.CanRead">
            <summary>
            If TokenStream can Read
            </summary>
        </member>
        <member name="P:Syncfusion.IO.TokenStream.CanWrite">
            <summary>
            If TokenStream can Write
            </summary>
        </member>
        <member name="P:Syncfusion.IO.TokenStream.Length">
            <summary>
            Number of symbols in  our Stream
            </summary>
        </member>
        <member name="P:Syncfusion.IO.TokenStream.NewLine">
            <summary>
            On end of line string update recalculate lines in stream
            </summary>
        </member>
        <member name="P:Syncfusion.IO.TokenStream.EndLineStyle">
            <summary>
            Gets or Sets End line style ( For different OS )
            </summary>
        </member>
        <member name="P:Syncfusion.IO.TokenStream.SkipBytes">
            <summary>
            GET count of skipped bytes at the beginning of the file.
            Skipped bytes - size of the preambula for encoding.
            </summary>
        </member>
        <member name="T:Syncfusion.IO.TokenStream.StreamTokenEnum">
            <summary>
            Class implement enumerator which use own algorithm for extracting
            data from input stream... Algorithm is a little faster then used in
            TokenStream class, but it does not support multi-symbols tokens splitter.
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.StreamTokenEnum.m_parent">
            <summary>
            Parent TokenStream
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.StreamTokenEnum.m_lPosition">
            <summary>
            Current Position Of Reading
            </summary>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.StreamTokenEnum.#ctor">
            <summary>
            Empty Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.StreamTokenEnum.Finalize">
            <summary>
            Destructor. Disposes all resources
            </summary>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.StreamTokenEnum.#ctor(Syncfusion.IO.TokenStream)">
            <summary>
            Let Him Know About Parent
            </summary>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.StreamTokenEnum.Dispose">
            <summary>
            Disposes all resources
            </summary>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.StreamTokenEnum.Reset">
             <summary>
            At the Beginning Of Enumeration Clear The Buffer
             </summary>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.StreamTokenEnum.MoveNext">
            <summary>
            NOTE : newline - is one token
            </summary>
        </member>
        <member name="P:Syncfusion.IO.TokenStream.StreamTokenEnum.Current">
            <summary>
            Get current token
            </summary>
        </member>
        <member name="T:Syncfusion.IO.TokenStream.FastChar">
            <summary>
            This class used for multichars tokens search operations. Class hold
            case sensitive information.
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.FastChar.m_ch">
            <summary>
            Current char from the Stream
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.FastChar.m_bHasEnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.IO.TokenStream.FastChar.m_subchars">
            <summary>
            Holds the rest of chars in the word
            </summary>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.FastChar.#ctor">
            <summary>
            Default constructor diasbled for end user
            </summary>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.FastChar.#ctor(System.Char)">
            <summary>
            Default constructor
            </summary>
            <param name="ch"></param>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.FastChar.#ctor(System.Char,System.Collections.IDictionary)">
            <summary>
            Constructor for inheritors
            </summary>
            <param name="ch">char</param>
            <param name="dict">Collection for sub-chars</param>
        </member>
        <member name="P:Syncfusion.IO.TokenStream.FastChar.Char">
            <summary>
            Returns one char form the stream
            </summary>
        </member>
        <member name="P:Syncfusion.IO.TokenStream.FastChar.HasEnd">
            <summary>
            True indicate that SubChars collection contains string end symbol '\uffff'
            </summary>
        </member>
        <member name="P:Syncfusion.IO.TokenStream.FastChar.SubChars">
            <summary>
            Returns sub-chars ( the rest of chars in the word )
            </summary>
        </member>
        <member name="T:Syncfusion.IO.TokenStream.FastInsensChar">
            <summary>
            This class used for multi-symbols tokens search operation. Class hold
            case insensitive information.
            </summary>
        </member>
        <member name="T:Syncfusion.IO.TokenStream.CaseInsensCharProvider">
            <summary>
            Fix Microsoft bug for Case insensitive types... Microsoft provide only
            case insensitive hash provider for strings... chars by itself not supported.
            </summary>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.CaseInsensCharProvider.GetHashCode(System.Object)">
            <summary>
            Method calculate hash code for char
            </summary>
            <param name="obj">Object which hash must be calculated</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.IO.TokenStream.CaseInsensCharComparer">
            <summary>
            Class provide functionality for comparing two chars... Class fix Microsoft
            bug: case insensitive help provided only for strings...
            </summary>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.CaseInsensCharComparer.Compare(System.Object,System.Object)">
            <summary>
            Method compare too chars by it value - case insensitive
            </summary>
            <param name="x">first value</param>
            <param name="y">second value</param>
            <returns>0 - if equel, -1 if x less y, 1 if x greater y</returns>
        </member>
        <member name="T:Syncfusion.IO.TokenStream.ArrayLengthComparer">
            <summary>
            Class helps us to sort arrays by Length property value
            </summary>
        </member>
        <member name="M:Syncfusion.IO.TokenStream.ArrayLengthComparer.Compare(System.Object,System.Object)">
            <summary>
            Method compare two Array classes by Length property values
            </summary>
            <param name="x">first parameter</param>
            <param name="y">second parameter</param>
            <returns>0 - if equel, -1 if x less y, 1 if x greater y</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.IO.FindResult">
            <summary>
            Result of the find operations.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.FindResult.StartPoint">
            <summary>
            Start point of the result.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.FindResult.EndPoint">
            <summary>
            End point of the result.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.FindResult.Result">
            <summary>
            Result of the RegExp search.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.IO.WrapperUndoItem">
            <summary>
            Single undo item.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.WrapperUndoItem.ChangeContext">
            <summary>
            Change context, that was applied to the stream.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.WrapperUndoItem.AdditionalData">
            <summary>
            Any additional data.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.IO.WrapperUndoItem.BytesOffset">
            <summary>
            Offset, in bytes.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.IO.WrapperUndoItem.Empty">
            <summary>
            Emptyt <see cref="T:Syncfusion.Windows.Forms.Edit.Implementation.IO.WrapperUndoItem"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion">
            <summary>
            Region that can be collapsed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion.m_StartPoint">
            <summary>
            Beginning of the collapsing.
            Can not be null.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion.m_EndPoint">
            <summary>
            End of the collapsable region.
            It can be null: in that case file
            will be parsed until end the end of this region.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion.m_bCollapsed">
            <summary>
            Flag, that specifies, wheather region is collapsed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion.m_EndStack">
            <summary>
            Stack at the end of the collapsing.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion.m_StartStack">
            <summary>
            Stack at the end of the collapsing.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion.m_lexem">
            <summary>
            Lexem at StartPoint position.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion.m_endLexem">
            <summary>
            Lexem at the end of region.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion.m_bUnreliableEnding">
            <summary>
            Flag that specifies, wheather ending of the collapsed region is 
            reliable or not.
            Checking can be done by comparing starting stack.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion.RaiseCollapsedStateChanged">
            <summary>
            Raiser for CollapsedStateChanged event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion.RaiseRegionDeletedEvent">
            <summary>
            Raiser form RegionDeleted event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion.Contains(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint)">
            <summary>
            Determines wheather region contains
            given <see cref="T:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint"/> object.
            </summary>
            <param name="point"><see cref="T:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint"/> object.</param>
            <returns>True is contains, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion.CompareTo(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion.m_StartPoint_Deleted(System.Object,System.EventArgs)">
            <summary>
            Handler of the Deleted event of StartPoint.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion.m_EndPoint_Deleted(System.Object,System.EventArgs)">
            <summary>
            Handler of the Deleted event of EndPoint.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion.m_EndPoint_OffsetChanged(System.Object,Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            Handler for OffsetChanged event of EndPoint of the region.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion.Lexem">
            <summary>
            Lexem at StartPoint position.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion.EndLexem">
            <summary>
            Lexem at End position.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion.Start">
            <summary>
            Beginning of the collapsing.
            Can not be null.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion.End">
            <summary>
            End of the collapsable region.
            It can be null: in that case file
            will be parsed until end the end of this region.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion.Collapsed">
            <summary>
            Flag, that specifies, wheather region is collapsed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion.EndStack">
            <summary>
            End of the collapsable region.
            It can be null: in that case file
            will be parsed until end the end of this region.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion.StartStack">
            <summary>
            End of the collapsable region.
            It can be null: in that case file
            will be parsed until end the end of this region.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion.UnreliableEnding">
            <summary>
            GET flag, that shows wheather regions end stack is reliable.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion.CollapsedStateChanged">
            <summary>
            Event that is raised when collapsed state of
            the region has changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion.RegionDeleted">
            <summary>
            Event that is raised when start of the region was deleted.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Parser.Lexem">
            <summary>
            Part of the text ( one word/token ).
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.ILexem">
            <summary>
            Abstraction which link language and formating
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ILexem.Text">
            <summary>
            Text of the lexem.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ILexem.IsCompleted">
            <summary>
            Is lexem extracting from stream finishe or not. Parser can extract
            only part of lexem and wait till next notification from control
            to continue parsing
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ILexem.IsCorrect">
            <summary>
            Property value inicate is lexem correct or it termination was forced
            by parser. as example for c++ language: string started on one line,
            but not correctly finished at end by Lexem terminator or lexem continue
            symbol. for c++ continue symbol for string is \ and then \n.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ILexem.Config">
            <summary>
            Config of the lexem.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ILexem.Collapser">
            <summary>
            Collapsable region, this lexem belongs to.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.IEditableLexem">
            <summary>
            Editable variant of the <see cref="T:Syncfusion.Windows.Forms.Edit.Interfaces.ILexem"/> interface.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IEditableLexem.Text">
            <summary>
            Text of the lexem.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IEditableLexem.IsCompleted">
            <summary>
            Is lexem extracting from stream finishe or not. Parser can extract
            only part of lexem and wait till next notification from control
            to continue parsing
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IEditableLexem.IsCorrect">
            <summary>
            Property value inicate is lexem correct or it termination was forced
            by parser. as example for c++ language: string started on one line,
            but not correctly finished at end by Lexem terminator or lexem continue
            symbol. for c++ continue symbol for string is \ and then \n.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IEditableLexem.Collapser">
            <summary>
            Collapsable region, this lexem belongs to.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.Lexem.m_Text">
            <summary>
            Text of the lexem.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.Lexem.m_config">
            <summary>
            Config of the lexem. It also keeps it`s format.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.Lexem.m_collapser">
            <summary>
            Collapsable region, this lexem belongs to.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.Lexem.#ctor(System.String,Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem)">
            <summary>
            Main constructor for the lexem.
            </summary>
            <param name="text">Text of the lexem.</param>
            <param name="config">Configuration of the lexem.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.Lexem.AppendToXML(System.Xml.XmlElement)">
            <summary>
            Writes lexem`s data to xml.
            </summary>
            <param name="parent">Parent xml element, data must be written to.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.Lexem.AppendToXML(System.Xml.XmlTextWriter)">
            <summary>
            Writes lexem`s data to xml.
            </summary>
            <param name="parent">XML writer, data must be written to.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.Lexem.Config">
            <summary>
            Config of the lexem. It also keeps it`s format.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.Lexem.Text">
            <summary>
            Text of the lexem.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.Lexem.IsCompleted">
            <summary>
            Sign of completeon.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.Lexem.IsCorrect">
            <summary>
            Sing of correctness of construction.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.Lexem.Collapser">
            <summary>
            Collapsable region, this lexem belongs to.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemLine">
            <summary>
            Line of the lexems.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine">
            <summary>
            Class, that implements ILexemLine,
            but does not support caches of parsed data.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemLine">
            <summary>
            Interface of the lexem lines.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemLine.DeleteSelf">
            <summary>
            Deletes self.
            Raises LineDeleted.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemLine.FindLexemByColumn(System.Int32)">
            <summary>
            Searches lexem, that contains given column index.
            </summary>
            <param name="column">Needed column.</param>
            <returns>Found lexem, or null if needed column is in vitrual space.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemLine.LineStartPoint">
            <summary>
            ParsePoint at the beginning of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemLine.LineEndPoint">
            <summary>
            ParsePoint at the beginning of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemLine.LineStartStack">
            <summary>
            Stack at the beginning of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemLine.LineEndStack">
            <summary>
            Stack at the end of the line.
            If line was not parsed, it will be reparsed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemLine.LineLexems">
            <summary>
            Collection of all lexems, that belong to current line.
            If line was not parsed, it will be reparsed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemLine.Parsed">
            <summary>
            Flag that determines, wheather line is parsed.
            If line is parsed, than LineEndStack property
            contains Stack for the end of the line and LineLexems
            collection contains all lexems, that belong to current line.
            If line was changed, than Parsed will be set to false.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemLine.isValid">
            <summary>
            Checks validity of the line.
            If line was already disposed, it is no longer valid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemLine.Parser">
            <summary>
            Parser, the line belongs to.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemLine.LineDeleted">
            <summary>
            Event, that is raised when line is deleted.
            If position of the LineStartPoint is changed,
            than line is considered to be invalid and must be
            deleted. Or LineStartPoint was deleted.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemLine.LineLength">
            <summary>
            GET length of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemLine.LineIndex">
            <summary>
            Index of the line.
            </summary>
            <remarks>
            It can be different from the one, stored in
            m_point because it also includes data
            from collapsing.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine.m_point">
            <summary>
            ParsePoint at the beginning of the line.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine.m_stack">
            <summary>
            Stack at the beginning of the line.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine.m_parser">
            <summary>
            Parser, the line belongs to.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine.m_lineIndex">
            <summary>
            Index of the line.
            It can be different from the one, stored in
            m_point because it also includes data
            from collapsing.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine.#ctor(Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser,Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint,System.Collections.Stack)">
            <summary>
            Creates and initializes new instance of the class.
            </summary>
            <param name="parser">Parent parser.</param>
            <param name="pointLineStart">ParsePoint of the line start.</param>
            <param name="stack">Stack at the beginning of the line.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine.Dispose">
            <summary>
            Frees all used resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine.PointDeleted(System.Object,System.EventArgs)">
            <summary>
            Handler of the Deleted event of the StartPoint.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine.PointPositionChanged(System.Object,Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            Handler of the ParsePointOffsetChanged event of the stream.
            </summary>
            <param name="sender">Changed ParsePoint.</param>
            <param name="e">Change.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine.PointLineChanged(System.Object,Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            Handler of the LineChanged event of the <see cref="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine.LineStartPoint"/>.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine.GetLineEndStack">
            <summary>
            Gets stack at the end of line.
            Line will be reparsed.
            </summary>
            <returns>Stack at the end of line.
            It can be treated as start stack for the next line.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine.GetLineLexems">
            <summary>
            Collection of all lexems, that belongs to the line.
            Line will be reparsed.
            </summary>
            <returns>List of the lexems.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine.DeleteSelf">
            <summary>
            Raises LineDeleted event and disposes line.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine.FindLexemByColumn(System.Int32)">
            <summary>
            Searches lexem, that contains given column index.
            </summary>
            <param name="column">Needed column.</param>
            <returns>Found lexem, or null if needed column is in vitrual space.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine.CompareTo(System.Object)">
            <summary>
            Compares two ILexemLine objects,
            or ILexemLine object and integer line number.
            </summary>
            <param name="obj">ILexemLine object or
            integer line number.</param>
            <returns>Standart comparition result.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine.LineStartPoint">
            <summary>
            GET ParsePoint at the beginning of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine.LineEndPoint">
            <summary>
            GET ParsePoint at the beginning of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine.LineStartStack">
            <summary>
            GET stack at the beginning of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine.LineEndStack">
            <summary>
            GET stack at the end of the line.
            If line was not parsed, it will be reparsed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine.LineLexems">
            <summary>
            Collection of all lexems, that belong to current line.
            If line was not parsed, it will be reparsed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine.Parsed">
            <summary>
            GET flag that determines, wheather line is parsed.
            If line is parsed, than LineEndStack property
            contains Stack for the end of the line and LineLexems
            collection contains all lexems, that belong to current line.
            If line was changed, than Parsed will be set to false.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine.Parser">
            <summary>
            GET parser, the line belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine.LineLength">
            <summary>
            GET length of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine.isValid">
            <summary>
            Checks validity of the line.
            If line was already disposed, it is no longer valid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine.LineIndex">
            <summary>
            Index of the line.
            </summary>
            <remarks>
            It can be different from the one, stored in
            m_point because it also includes data
            from collapsing.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Parser.UncachedLexemLine.LineDeleted">
            <summary>
            Event, that is raised when line is deleted.
            If position of the LineStartPoint is changed,
            than line is considered to be invalid and must be
            deleted. Or LineStartPoint was deleted.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemLine.m_bParsed">
            <summary>
            Flag, that determines wheather line is parsed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemLine.m_lexems">
            <summary>
            List of lexems in line if line is parsed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemLine.m_endStack">
            <summary>
            Stack at the end of the line.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemLine.m_endPoint">
            <summary>
            <see cref="T:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint"/> to the end of the line.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemLine.GetLineEndStack">
            <summary>
            Gets stack at the end of line.
            Line will be reparsed.
            </summary>
            <returns>Stack at the end of line.
            It can be treated as start stack for the next line.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemLine.GetLineLexems">
            <summary>
            Collection of all lexems, that belongs to the line.
            Line will be reparsed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemLine.#ctor(Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser,Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint,System.Collections.Stack)">
            <summary>
            Creates and initializes new instance of the class.
            </summary>
            <param name="parser">Parent parser.</param>
            <param name="pointLineStart">ParsePoint of the line start.</param>
            <param name="stack">Stack at the beginning of the line.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemLine.m_endPoint_OffsetChanged(System.Object,Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            Handler of OffsetChanged event of LineEndPoint.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemLine.DisposeEndPoint">
            <summary>
            Frees LineEndPoint.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemLine.m_endPoint_Deleted(System.Object,System.EventArgs)">
            <summary>
            Handler of the Deleted event of the line end point.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemLine.AppendToXML(System.Xml.XmlElement)">
            <summary>
            Writes data to xml.
            </summary>
            <param name="parent">Parent xml element, data must be written to.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemLine.AppendToXML(System.Xml.XmlTextWriter)">
            <summary>
            Writes data to xml.
            </summary>
            <param name="parent">XML writer, data must be written to.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemLine.GetStartPoint">
            <summary>
            Gets coordinate point that points to the start of the line.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemLine.GetEndPoint">
            <summary>
            Gets coordinate point that points to the end of the line.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemLine.Parsed">
            <summary>
            Flag that determines, wheather line is parsed.
            If line is parsed, than LineEndStack property
            contains Stack for the end of the line and LineLexems
            collection contains all lexems, that belong to current line.
            If line was changed, than Parsed will be set to false.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemLine.LineEndPoint">
            <summary>
            ParsePoint at the beginning of the line.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser">
            <summary>
            Class that is used to parse stream to lexems
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemParser">
            <summary>
            Interface declare base functionality of each Lexem parser for our control.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemParser.NextLine">
            <summary>
            Read next line from input stream and set CurrentLine index to new value
            </summary>
            <returns>array of lexems in line, null if end of stream reached</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemParser.PreviousLine" -->
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemParser.GetLine">
            <summary>
            Get current line lexems.
            </summary>
            <returns>lexems array of current line</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemParser.GetCoordinatePoint(System.Int32,System.Int32)">
            <summary>
            Gets <see cref="T:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint"/> class instance, that repsresents
            some coordinates in stream.
            </summary>
            <param name="iLine">Virtual line.</param>
            <param name="iColumn">Virtual column.</param>
            <returns><see cref="T:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint"/> class instance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemParser.GetCoordinatePoint(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint,System.Boolean)">
            <summary>
            Gets <see cref="T:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint"/> by given
             <see cref="T:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint"/>.
            </summary>
            <param name="point"><see cref="T:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint"/> that points
            to physical position in stream.</param>
            <returns><see cref="T:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint"/> that points to the given position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemParser.GetCoordinatePoint(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint)">
            <summary>
            Gets <see cref="T:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint"/> by given
             <see cref="T:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint"/>.
            </summary>
            <param name="point"><see cref="T:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint"/> that points
            to physical position in stream.</param>
            <returns><see cref="T:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint"/> that points to the given position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemParser.GetNearestParsePointRight(System.Int32,System.Int32)">
            <summary>
            Searchs for the <see cref="T:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint"/>
            at the given position.
            </summary>
            <remarks>
            If it can not be found (it is in virtual space), then
            you will get parse point, pointing to the beginning of the
            next line. If it can not be done, ParsePoint, pointing to
            the end of current line will be returned.
            </remarks>
            <param name="iLine">Line index, the ParsePoint is needed for.</param>
            <param name="iColumn">Column index, the ParsePoint is needed for. Can be 0.</param>
            <returns>ParsePoint to the given position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemParser.GetNearestParsePointLeft(System.Int32,System.Int32)">
            <summary>
            Searches for the <see cref="T:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint"/>
            at the given position.
            </summary>
            <remarks>
            If it can not be found ( or column is 0), and 
            if it is in virtual space, then you will get parse point
            to the end of given line; If column is 0, then you will get
            parse point to the end of the previous line( if it is one ).
            </remarks>
            <param name="iLine">Line index the ParsePoint is needed for.</param>
            <param name="iColumn">Column index the ParsePoint is needed for. Can be 0.</param>
            <returns>ParsePoint to the given position.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemParser.Formats">
            <summary>
            Collection of availabe formats. Reference on base collection of formats.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemParser.BaseStream">
            <summary>
            Reference on base stream which used as source for Parser
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemParser.TotalLines">
            <summary>
            Quantity of lines in input stream
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ILexemParser.CurrentLine">
            <summary>
            Current line index. This property can be used for fast move to needed
            line in file.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.ILongOperationControllerInternal">
            <summary>
            Controller of the long operations.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.ILongOperationController">
            <summary>
            Controller of the long operations.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.DEF_COLLAPSE_NAME_MAX_LINES">
            <summary>
            Maximum count of the lines that can be parsed when
            reading name of the collapsed region.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.m_StreamsWrapper">
            <summary>
            Input source of data.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.m_Language">
            <summary>
            Current language configuration.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.m_CurLineIndex">
            <summary>
            Index of the current line.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.m_linesList">
            <summary>
            List of the lines.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.m_lastStack">
            <summary>
            Last stack.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.m_CollapseList">
            <summary>
            List of the collapses.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.m_lastCollapseRegionIndex">
            <summary>
            Index of the last used collapse region.
            Used for optimization.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.m_collapsedLines">
            <summary>
            Count of collapsed line. If it is -1, it must be recalculated.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.m_undoStack">
            <summary>
            Stack of the undo.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.m_redoStack">
            <summary>
            Stack of the redo.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.m_bCollapsingEnabled">
            <summary>
            Flag that specifies, wheather collapsing setting are used or not.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.m_bInitialCollapsing">
            <summary>
            Initial state of collapsing.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.m_iCollapsingsLocks">
            <summary>
            Count of collapsings locks.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.#ctor">
            <summary>
            Hides default constructor
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.#ctor(Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper,Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage)">
            <summary>
            Creates new instance of the parser and initializes it.
            </summary>
            <param name="source">Input source.</param>
            <param name="language">Language configuration.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.DeleteLine(Syncfusion.Windows.Forms.Edit.Interfaces.ILexemLine)">
            <summary>
            Deletes LexemLine from internal collection.
            </summary>
            <param name="line">Line to be deleted.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.FindLineInCache(System.Int32)">
            <summary>
            Looks for line in cache.
            </summary>
            <param name="iLine">Index of the line.</param>
            <returns>ILexemLine interface to the line, or null if nothing was found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.GetLine(System.Int32)">
            <summary>
            Gets line by specified line index.
            If line is in cache, then instance from cache
            will be returned. Otherwise it will be created
            and added to the cache.
            </summary>
            <param name="iLine">Line index.</param>
            <returns>ILexemLine object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.NextLine">
            <summary>
            Moves to the next line and parses it.
            </summary>
            <returns>Array of lexems that represent line.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.PreviousLine">
            <summary>
            Moves to the previous line and parses it.
            </summary>
            <returns>Array of lexems that represent line.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.GetLine">
            <summary>
            Parses current line.
            </summary>
            <returns>Array of lexems that represent line.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.GetStackCopy">
            <summary>
            Gets copy of the curent parser`s stack.
            </summary>
            <returns>Stack object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.CreateDefaultStack">
            <summary>
            Creates default stack, filled with language configuration
            </summary>
            <returns>Stack object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.SetStack(System.Collections.Stack)">
            <summary>
            Sets new stack.
            </summary>
            <param name="stack">Stack to be set.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.GetEnumerator">
            <summary>
            Creates enumerator of lexems
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.GetEnumerator(System.Collections.Stack)">
            <summary>
            Creates enumerator of lexems.
            </summary>
            <param name="stack">Stack for the current position.</param>>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.GetEnumerator(System.Collections.Stack,Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint)">
            <summary>
            Creates enumerator of lexems.
            </summary>
            <param name="stack">Stack for the current position.</param>>
            <param name="point">New current position.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.GetLineEnumerator(Syncfusion.Windows.Forms.Edit.Interfaces.ILexemLine)">
            <summary>
            Creates enumerator of the lexem lines.
            </summary>
            <param name="line">Starting line.</param>
            <returns>Enumerator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.GetLineEnumerator">
            <summary>
            Creates enumerator of the lexem lines.
            </summary>
            <param name="line">Starting line.</param>
            <returns>Enumerator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.ResetLines(Syncfusion.Windows.Forms.Edit.Interfaces.ILexemLine)">
            <summary>
            Resets all lines starting from given one.
            </summary>
            <remarks>
            Actually it simply deletes lines, so they will be reparsed as needed.
            </remarks>
            <param name="line">First line that must be reseted.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.Undo">
            <summary>
            Undoes last change.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.Redo">
            <summary>
            Undoes last change.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.InsertText(System.String,Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint)">
            <summary>
            Insertes text into position.
            </summary>
            <param name="point">Point, text should be inserted to.</param>
            <param name="str">Text to be inserted.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.DeleteText(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint)">
            <summary>
            Deletes given range of text.
            </summary>
            <param name="pointEnd">Start point of text to delete.</param>
            <param name="pointStart">End point of text to delete.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.GetLastRegisteredLine">
            <summary>
            Retreaves last line in the internal list (not the same as last line of text).
            </summary>
            <returns>Lexem line.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.GetCollapsableRegion(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint)">
            <summary>
            Searches for collapsable region by offset of the given parsepoint.
            Note: new region is not created.
            </summary>
            <param name="point">ParsePoint, that specifies position in stream, region is needed for.</param>
            <returns>Found region, or null if there is no such region.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.GetParsePoint(System.Int32,System.Int32)">
            <summary>
            Get`s ParsePoint to the given coordinates.
            </summary>
            <remarks>
            The main difference between this method,
            and those, presented by StreamsWrapper is
            that this method also checks collapsings.
            </remarks>
            <param name="iLine">Needed line.</param>
            <param name="iColumn">Needed column.</param>
            <returns>Statical <see cref="T:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint"/> that points to
            specified coordinates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.GetCollapsedRegionsList">
            <summary>
            Gets list of top-level
            collapsed regions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.UpdateLineInformation">
            <summary>
            Updates virtual line indexes according to
            current collapsings.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.GetCoordinatePoint(System.Int32,System.Int32)">
            <summary>
            Gets <see cref="T:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint"/> class instance, that repsresents
            some coordinates in stream.
            </summary>
            <param name="iLine">Virtual line.</param>
            <param name="iColumn">Virtual column.</param>
            <returns><see cref="T:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint"/> class instance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.GetCoordinatePoint(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint)">
            <summary>
            Gets <see cref="T:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint"/> by given
             <see cref="T:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint"/>.
            </summary>
            <param name="point"><see cref="T:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint"/> that points
            to physical position in stream.</param>
            <returns><see cref="T:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint"/> that points to the given position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.GetCoordinatePoint(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint,System.Boolean)">
            <summary>
            Gets <see cref="T:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint"/> by given
             <see cref="T:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint"/>.
            </summary>
            <param name="point"><see cref="T:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint"/> that points
            to physical position in stream.</param>
            <returns><see cref="T:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint"/> that points to the given position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.GetNearestParsePointRight(System.Int32,System.Int32)">
            <summary>
            Searchs for the <see cref="T:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint"/>
            at the given position.
            </summary>
            <remarks>
            If it can not be found (it is in virtual space), then
            you will get parse point, pointing to the beginning of the
            next line. If it can not be done, ParsePoint, pointing to
            the end of current line will be returned.
            </remarks>
            <param name="iLine">Line index, the ParsePoint is needed for.</param>
            <param name="iColumn">Column index, the ParsePoint is needed for. Can be 0.</param>
            <returns>ParsePoint to the given position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.GetNearestParsePointLeft(System.Int32,System.Int32)">
            <summary>
            Searches for the <see cref="T:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint"/>
            at the given position.
            </summary>
            <remarks>
            If it can not be found ( or column is 0), and
            if it is in virtual space, then you will get parse point
            to the end of given line; If column is 0, then you will get
            parse point to the end of the previous line( if it is one ).
            </remarks>
            <param name="iLine">Line index the ParsePoint is needed for.</param>
            <param name="iColumn">Column index the ParsePoint is needed for. Can be 0.</param>
            <returns>ParsePoint to the given position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.GetOuterCollapsableRegion(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint,System.Boolean)">
            <summary>
            Gets collapsable region, point belongs to.
            </summary>
            <param name="point">Point, the region is to be looked for.</param>
            <param name="bCollapsed">Specifies, wheather region must be collapsed.</param>
            <returns>Found region, or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.EnsureVisibility(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint)">
            <summary>
            Uncollapses all collapsed regions, the point is in.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.IsPointVisible(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint)">
            <summary>
            Checks visibility of the point.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.SetAllCollapsings(System.Boolean)">
            <summary>
            Toggles all collapsing to specified state.
            </summary>
            <param name="value">State of all collapsable regions to be set.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.BeginUpdateRegions">
            <summary>
            Starts updating regions.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.EndUpdateRegions">
            <summary>
            Ends updating regions.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.AppendToXML(System.Xml.XmlElement)">
            <summary>
            Writes data to xml.
            </summary>
            <param name="parent">Parent xml element, data must be written to.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.AppendToXML(System.Xml.XmlTextWriter)">
            <summary>
            Writes data to xml.
            </summary>
            <param name="parent">XML writer, data must be written to.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.StartOperation(System.String)">
            <summary>
            Starts new operation.
            </summary>
            <param name="name">Name of the operation.</param>
            <returns>Operation.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.Syncfusion#Windows#Forms#Edit#Interfaces#ILongOperationControllerInternal#RaiseOperationStart(Syncfusion.Windows.Forms.Edit.Interfaces.ILongOperation)">
            <summary>
            Raises OperationStarted event.
            </summary>
            <param name="operation">Operation, that is started.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.Syncfusion#Windows#Forms#Edit#Interfaces#ILongOperationControllerInternal#RaiseOperationEnd(Syncfusion.Windows.Forms.Edit.Interfaces.ILongOperation)">
            <summary>
            Raises OperationStopped event.
            </summary>
            <param name="operation">Operation, that is stopped.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.BeginUpdateRegionsInternal">
            <summary>
            Starts updating regions.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.EndUpdateRegionsInternal">
            <summary>
            Ends updating regions.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.RaiseTextInsertedEvent(System.String,System.Int32,System.Int32)">
            <summary>
            Raiser for TextInserted event.
            </summary>
            <param name="text">Text, that is deleted.</param>
            <param name="iStartLine">Virtual line, where the text starts.</param>
            <param name="iStartColumn">Virtual column, where the text starts.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.RaiseTextDeletedEvent(System.String,System.Int32,System.Int32)">
            <summary>
            Raiser for TextDeleted event.
            </summary>
            <param name="text">Text, that is deleted.</param>
            <param name="iStartLine">Virtual line, where the text starts.</param>
            <param name="iStartColumn">Virtual column, where the text starts.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.RaiseLinesCountChangedEvent(System.Int32)">
            <summary>
            Raisers of the LinesCountChanged event.
            </summary>
            <param name="oldValue">Old count of lines.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.RaiseLineInstanceCreatedEvent(Syncfusion.Windows.Forms.Edit.Interfaces.ILexemLine)">
            <summary>
            Raises LineInstanceCreated event;
            </summary>
            <param name="line">Line, that is created.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.RaiseLineInstanceDeletedEvent(Syncfusion.Windows.Forms.Edit.Interfaces.ILexemLine)">
            <summary>
            Raises LineInstanceDeleted event;
            </summary>
            <param name="line">Line, that is deleted.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.OnCollapsingEnabledChanged">
            <summary>
            Makes all needed updates after changing <see cref="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.CollapsingEnabled"/> state.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.CreateLine(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint,System.Collections.Stack)">
            <summary>
            Creates new object that implements
            ILexemLine interface. This function is intended to be
            overridden to use other than default implementation of ILexemLine.
            </summary>
            <param name="pointLineStart">ParsePoint of the line start.</param>
            <param name="stack">Stack at the beginning of the line.</param>
            <returns>ILexemLine interface of the line</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.CreateLexem(System.String,Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem)">
            <summary>
            Creates new lexem. Can be overriden.
            </summary>
            <param name="text">Text for the lexem.</param>
            <param name="formatType">Format of the lexem.</param>
            <param name="formatName">Name of the custom format.</param>
            <returns>New lexem.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.GetNextLine(Syncfusion.Windows.Forms.Edit.Interfaces.ILexemLine)">
            <summary>
            Parses line, that is next to given one.
            Cache is not used.
            </summary>
            <param name="line">Current line.</param>
            <returns>New line.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.GetLexemInternal(System.Collections.Stack)">
            <summary>
            Reads token and creates lexem with configuration,
            based on token and stack of configurations.
            </summary>
            <param name="openLexems">Configs stack of the opened lexems.
            It must have at least 1 element (Language).
            After reading of the last element it will be empty.
            </param>
            <remarks>
            Checking of the collapsed regions is done
            </remarks>
            <returns>Readed lexem or null if end of file reached.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.FillStack(System.Collections.Stack,System.Collections.Stack)">
            <summary>
            Fills destination stack by content of source stack.
            </summary>
            <remarks>
            All content of the destination stack is erased and
            it is filled by items of the source stack in those
            order as they are in source.
            </remarks>
            <param name="source">Source stack.</param>
            <param name="destination">Destination stack.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.GetCollapsableRegion(System.Int64)">
            <summary>
            Gets or creates new <see cref="T:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion"/> by give offset.
            </summary>
            <remarks>
            Note: if region does not exists, it will be created.
            </remarks>
            <param name="streamPosition">Offset in the stream.</param>
            <returns><see cref="T:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion"/> for this offset.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.PeekLexemFromStack(System.Collections.Stack)">
            <summary>
            Peeks last lexem from stack.
            </summary>
            <param name="stack">Stack with lexems and their configurations.</param>
            <returns>Peeked lexem, or null if there is stack contains just language,
            or last entry is some delegated(with NextID) configuration.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.PeekConfigFromStack(System.Collections.Stack)">
            <summary>
            Peeks last lexem configuration from stack.
            </summary>
            <param name="stack">Stack with lexems and their configurations.</param>
            <returns>Peeked lexem configuration, never returns null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.ParseCollapsableRegion(Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion,System.Collections.Stack)">
            <summary>
            Parses collapsed <see cref="T:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion"/>
            and represents it as one lexem.
            </summary>
            <param name="region">Region to parse.</param>
            <param name="openLexems">Stack at the begining of the region.</param>
            <returns><see cref="T:Syncfusion.Windows.Forms.Edit.Interfaces.ILexem"/> with CollapsedText formatting.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.PopStack(System.Collections.Stack)">
            <summary>
            Pops from stack last item and all upper items, that does not wait ending.
            </summary>
            <param name="openLexems">Stack of the ConfigLexem_Lexem_Pair objects.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.TryReadNonComplexLexem(Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem,System.String)">
            <summary>
            Tries to read lexem using specified non-complex config.
            </summary>
            <param name="config">Configuration to be used.</param>
            <returns>Return null is configuration is not suitable in current context,
            or string, that represents possibly expanded token.
            (non-complex lexem configurations with continue or end blocks
            must be represented with a single token and single lexem.)</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.SelectConfigFromList(System.Collections.IList,System.String@)">
            <summary>
            Selects configuration from the given list.
            </summary>
            <param name="configList">List of the configurations, sorted by priorities.</param>
            <param name="token">Token, the configuration is for.
            In some cases this token can advance to some sentence
            with the same configuration.</param>
            <returns>Configuration, that was found,
            or null if there were no suitable configuration found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.GetLexemInternalNoCollapse(System.Collections.Stack)">
            <summary>
            Reads one token, then looks for it`s format ( by stack )
            If it is complex lexem, current lexem config will be added to stack;
            </summary>
            <param name="openLexems">Configs stack of the opened lexems.
            It must have at least 1 element (Language).
            After reading of the last element it will be empty.
            </param>
            <returns>Readed lexem or null if end of file reached.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.source_LinesCountChanged(System.Object,Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            Handler of the LinesCountChanged event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.regNew_RegionDeleted(System.Object,System.EventArgs)">
            <summary>
            Handler of RegionDeleted event of all collapsable regions.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.regNew_CollapsedStateChanged(System.Object,System.EventArgs)">
            <summary>
            Handler of CollapsedStateChanged event for all collapsable regions.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.OnUndoBufferFlush(System.Object,System.EventArgs)">
            <summary>
            Handler for the UndoBufferFlushed event of the changes stream.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.OnRedoBufferFlush(System.Object,System.EventArgs)">
            <summary>
            Handler for the RedoBufferFlushed event of the changes stream.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.Formats">
            <summary>
            GET used format manager.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.BaseStream">
            <summary>
            GET input data source.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.TotalLines">
            <summary>
            GET total lines count in text after applying of collapsings.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.CurrentLine">
            <summary>
            GET, SET current line index
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.LinesList">
            <summary>
            List of the lines.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.CanUndo">
            <summary>
            GET flag wheather there are actions to be undone.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.CanRedo">
            <summary>
            GET sing of redo ability.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.CollapsingEnabled">
            <summary>
            GET, SET collapsing state.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.IsCollapsingLocked">
            <summary>
            Shows wheather collapsings are locked.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.UndoQueueLength">
            <summary>
            Count of the actions that can be undone.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.RedoQueueLength">
            <summary>
            Count of the undone actions that can be redone.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.LineInstanceCreated">
            <summary>
            Event, that is raised when some line was created and added to the internal list.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.LineInstanceDeleted">
            <summary>
            Event, that is raised when line was deleted.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.LinesCountChanged">
            <summary>
            Event, that is raised when count of lines has been changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.TextInserted">
            <summary>
            Event, that is raised when text was inserted;
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.TextDeleted">
            <summary>
            Event that is raised when text was deleted;
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.OperationStarted">
            <summary>
            Event, raised on the start of the long operation.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.OperationStopped">
            <summary>
            Event, raised on the end of the long operation.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.LexemParserEnumerator">
            <summary>
            Class that represents enumerator for lexem parser.
            Is used to make by-lexem parsing of the file, based on some starting stack.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.LexemParserEnumerator.m_stack">
            <summary>
            Currently opened complex lexems.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.LexemParserEnumerator.m_parser">
            <summary>
            Calling parser instance.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.LexemParserEnumerator.m_initStack">
            <summary>
            Initial stack.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.LexemParserEnumerator.m_initPosition">
            <summary>
            Initial position in stream.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.LexemParserEnumerator.m_current">
            <summary>
            Current lexem.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.LexemParserEnumerator.m_currentPosition">
            <summary>
            Current position in stream.
            Used to ensure that reading of data is correct.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.LexemParserEnumerator.m_streamVersion">
            <summary>
            Version of the stream.
            Used to ensure that data reading is correct.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.LexemParserEnumerator.m_newLineSize">
            <summary>
            Size of the new-line symbol.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.LexemParserEnumerator.#ctor(System.Collections.Stack,Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser)">
            <summary>
            Creates enumerator instance.
            </summary>
            <param name="stack">Stack, that will be used as start point for parsing.</param>
            <param name="parser">Parser instance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.LexemParserEnumerator.Reset">
            <summary>
            Initializes enumerator and parser by initial parameters.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.LexemParserEnumerator.MoveNext">
            <summary>
            Moves to the next lexel.
            </summary>
            <returns>True if moved successfully, false if end of the stream reached.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.LexemParserEnumerator.CurrentStack">
            <summary>
            Gets current stack.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.LexemParserEnumerator.Current">
            <summary>
            GET current lexem.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.ConfigLexem_Lexem_Pair">
            <summary>
            Class that represents stack elements of the parser
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.ConfigLexem_Lexem_Pair.m_config">
            <summary>
            Configurtion of the stack`s element.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.ConfigLexem_Lexem_Pair.m_lexem">
            <summary>
            Lexem instance, for language`s configuration can be null.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.ConfigLexem_Lexem_Pair.#ctor(Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem,Syncfusion.Windows.Forms.Edit.Interfaces.ILexem)">
            <summary>
            Creates instance of the the class and initializes it.
            </summary>
            <param name="config">Configurtion of the stack`s element, can not be null</param>
            <param name="lexem">Lexem instance. Can be null.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.ConfigLexem_Lexem_Pair.Config">
            <summary>
            GET configurtion of the stack`s element.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.ConfigLexem_Lexem_Pair.Lexem">
            <summary>
            GET lexem instance, for language`s configuration can be null.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.UndoItem">
            <summary>
            Single undo item.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.UndoItem.StartOffset">
            <summary>
            Start offset of the change.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser.UndoItem.EndOffset">
            <summary>
            End offset of the change.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser">
            <summary>
            Lexem parser, that uses RenderedLine instead of LexemLine class.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.IPositionConvertor">
            <summary>
            Convertor of the positions.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IPositionConvertor.VirtualToPhysical(System.Drawing.Point)">
            <summary>
            Converts virtual position to physical.
            </summary>
            <param name="point">Virtual position.</param>
            <returns>Physical position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IPositionConvertor.PhysicalToVirtual(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint)">
            <summary>
            Converts physical position to virtual.
            </summary>
            <remarks>
            Note for implementing: if given physical coordinates can not be directly 
            mapped to virtual, remapping of the coordinates must be done 
            to make this mapping possible. Example: if coordinates 
            belongs to collapsed region, it must be uncollapsed.
            </remarks>
            <param name="point">Physical position.</param>
            <returns>Virtual position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IPositionConvertor.GraphicalToVirtual(System.Drawing.Point)">
            <summary>
            Converts graphical point to virtual.
            </summary>
            <param name="point">Graphical point.</param>
            <returns>Virtual point.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IPositionConvertor.GraphicalToVirtual(System.Drawing.Point,System.Boolean)">
            <summary>
            Converts graphical point to virtual.
            </summary>
            <param name="point">Graphical point.</param>
            <param name="allowWhiteSpace">Specifies if whitespace after last character in line should be treated like regular characters.</param>
            <returns>Virtual point.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IPositionConvertor.VirtualToGraphical(System.Drawing.Point)">
            <summary>
            Converts virtual point to graphical cursor coordinates.
            </summary>
            <param name="point">Virtual point.</param>
            <returns>Rectangle of the cursor.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.IPositionConvertor.CorrectVirtual(System.Drawing.Point)">
            <summary>
            Corrects virtual coordinates.
            </summary>
            <param name="point">Virtual coordinates to be corrected.</param>
            <returns>Virtual point with correct coordinates.</returns>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.DEF_ERROR_NOINFO">
            <summary>
            Text of the exception that is raised when line was not measured.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.DEF_DEFAULT_BITMAP_SIZE">
            <summary>
            Width and height of the bitmap used for creating default graphics.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.m_comparer">
            <summary>
            Comparer, used to compare lines by y.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.m_MaxWidth">
            <summary>
            Maximum width of the lines. Used for word wrapping.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.m_DefaultLineHeight">
            <summary>
            Default line height.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.m_GraphicsDefault">
            <summary>
            Default graphics object, used for measuring lines.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.m_BitmapDefault">
            <summary>
            Bitmap, used to create default graphics object for measuring lines.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.#ctor(Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper,Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage)">
            <summary>
            Creates new instance of the parser and initializes it
            </summary>
            <param name="source">Input source</param>
            <param name="language">Language configuration</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.Finalize">
            <summary>
            Calls Dispose method to dispose all used resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.Dispose">
            <summary>
            Disposes all used resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.BeginUpdateRegionsInternal">
            <summary>
            Starts updating regions.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.EndUpdateRegionsInternal">
            <summary>
            Ends updating regions.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.CreateLine(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint,System.Collections.Stack)">
            <summary>
            Creates new instance of the RenderedLine class.
            </summary>
            <param name="pointLineStart">ParsePoint of the line start.</param>
            <param name="stack">Stack at the beginning of the line.</param>
            <returns>ILexemLine interface of the line</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.CreateLexem(System.String,Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem)">
            <summary>
            Creates new lexem. Can be overriden.
            </summary>
            <param name="text">Text for the lexem.</param>
            <param name="formatType">Format of the lexem.</param>
            <param name="formatName">Name of the custom format.</param>
            <returns>New lexem.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.GetNextLine(Syncfusion.Windows.Forms.Edit.Interfaces.ILexemLine)">
            <summary>
            Parses line, that is next to given one.
            Cache is not used.
            </summary>
            <param name="line">Current line.</param>
            <returns>New line.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.regNew_CollapsedStateChanged(System.Object,System.EventArgs)">
            <summary>
            On every collapsing/uncollapsing of region 
            moves graphical positions of the lines.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.OnCollapsingEnabledChanged">
            <summary>
            Makes all needed updates after changing <see cref="!:CollapsingEnabled"/> state.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.SetDPIFromGraphics(System.Drawing.Graphics)">
            <summary>
            Changes dpi of the graphics object, used for measuring lines. 
            If dpi is not equal to the currently used, new graphics object 
            is created and all lines are remeasured.
            </summary>
            <param name="g">Graphics object with desired resolution.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.CheckLine(Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine)">
            <summary>
            Checks whether line was rendered and raises exception if it was not.
            </summary>
            <param name="line">Line to be checked.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.MeasureLine(Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine)">
            <summary>
            Measures line if needed.
            </summary>
            <param name="line">Line to be measured.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.GetLineByY(System.Single)">
            <summary>
            Gets line by specified y position.
            </summary>
            <param name="y">Y position.</param>
            <returns>RenderedLine object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.GetLineByY(System.Single,System.Int32)">
            <summary>
            Gets line by specified y position.
            </summary>
            <param name="y">Y position.</param>
            <returns>RenderedLine object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.FixLineRenderingPositions">
            <summary>
            Fixes y coordinates of all lines.
            All unparsed lines are treated to have default height.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.RemeasureLines">
            <summary>
            Drops measuring info and remeasures all chached lines.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.VirtualToPhysical(System.Drawing.Point)">
            <summary>
            Converts Virtual position to physical positions.
            </summary>
            <param name="point">Virtual point.</param>
            <returns><see cref="T:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint"/> with reference to physical coordinates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.PhysicalToVirtual(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint)">
            <summary>
            Converts physical coordinates to virtual.
            </summary>
            <param name="point">ParsePoint with hisical position.</param>
            <returns>Point with virtual position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.GraphicalToVirtual(System.Drawing.Point)">
            <summary>
            Converts graphical coordinates to virtual.
            </summary>
            <param name="point">Point with graphical position.</param>
            <returns>Point with virtual position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.GraphicalToVirtual(System.Drawing.Point,System.Boolean)">
            <summary>
            Converts graphical coordinates to virtual.
            </summary>
            <param name="point">Point with graphical position.</param>
            <param name="allowWhiteSpace">Specifies if whitespace after last character in line should be treated like regular characters.</param>
            <returns>Point with virtual position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.VirtualToGraphical(System.Drawing.Point)">
            <summary>
            Converts virtual coordinates to graphical.
            </summary>
            <param name="point">Point with virtual position.</param>
            <returns>Rectangle, occupied by character in given coordinates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.CorrectVirtual(System.Drawing.Point)">
            <summary>
            Corrects virtual coordinates.
            </summary>
            <param name="point">Virtual coordinates to be corrected.</param>
            <returns>Virtual point with correct coordinates.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.DefaultLineHeight">
            <summary>
            GET default height of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.MaxWidth">
            <summary>
            GET, SET maximum width for measuring lines.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderableLexemParser.ByYComparer">
            <summary>
            Comparer, used for the by-Y comparition of lines.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLexem">
            <summary>
            Lexem, that can be used for rendering.
            It support position and size info.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.IRenderedLexem">
            <summary>
            Lexem that is rendered.
            If column is -1 then lexem is considered to be unrendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IRenderedLexem.Width">
            <summary>
            Width of the lexem.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IRenderedLexem.SubLine">
            <summary>
            If word-wrapping is enabled, then it is zerro-based index of the sub line,
            where lexem is drawn.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IRenderedLexem.XOffset">
            <summary>
            X offset of the lexem. Relative to the lexem`s sub line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IRenderedLexem.YOffset">
            <summary>
            Y offset of the lexem.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.IRenderedLexem.Column">
            <summary>
            Column index of the lexem start.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLexem.m_width">
            <summary>
            Width of the lexem.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLexem.m_SubLine">
            <summary>
            If word-wrapping is enabled, then it is zerro-based index of the sub line,
            where lexem is drawn.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLexem.m_xOffset">
            <summary>
            X offset of the lexem. Relative to the lexem`s sub line.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLexem.m_yOffset">
            <summary>
            Y offset of the lexem.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLexem.m_column">
            <summary>
            Column index, where lexem starts in line.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLexem.#ctor(System.String,Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLexem)">
            <summary>
            Creates new instance of the class and initializes it.
            </summary>
            <param name="text">Text of the lexem.</param>
            <param name="config">Config of the lexem.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLexem.Width">
            <summary>
            Width of the lexem.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLexem.SubLine">
            <summary>
            If word-wrapping is enabled, then it is zerro-based index of the sub line,
            where lexem is drawn.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLexem.XOffset">
            <summary>
            X offset of the lexem. Relative to the lexem`s sub line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLexem.YOffset">
            <summary>
            Y offset of the lexem.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLexem.Column">
            <summary>
            Y offset of the lexem.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine">
            <summary>
            Lexem line, that contains information, needed for faster rendering.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine.m_y">
            <summary>
            Line render position
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine.m_height">
            <summary>
            Height of the line
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine.m_SubLineHeight">
            <summary>
            Array of heights of the sublinex. SubLines indexes starts from 0.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine.m_bMeasured">
            <summary>
            Flag that determines wheather line was already measured.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine.m_width">
            <summary>
            Line width.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine.#ctor(Syncfusion.Windows.Forms.Edit.Implementation.Parser.LexemParser,Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint,System.Collections.Stack)">
            <summary>
            Creates and initializes new instance of the class.
            </summary>
            <param name="parser">Parent parser.</param>
            <param name="pointLineStart">ParsePoint of the line start.</param>
            <param name="stack">Stack at the beginning of the line.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine.Dispose">
            <summary>
            Disposes object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine.GetEnumerator">
            <summary>
            Enumerator of the lexems.
            </summary>
            <returns>Enumerator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine.Measure(System.Drawing.Graphics,System.Single)">
            <summary>
            Measures line. Sets lexems parameters correctly.
            </summary>
            <param name="maxSize">Maximum width of the line.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine.DropMeasureInfo">
            <summary>
            Drops all information about measuring.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine.FindLexemByColumn(System.Int32)">
            <summary>
            Searches lexem, that contains given column index.
            </summary>
            <param name="column">Needed column.</param>
            <returns>Found lexem, or null if needed column is in vitrual space.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine.FindLexemByX(System.Single,System.Single)">
            <summary>
            Searches lexem, that contains given x offset.
            </summary>
            <param name="x">Needed x offset.</param>
            <param name="yOffset">Offset by y. Used when line is word-wrapped,
            so it can occupie more then one line.</param>
            <returns>Found lexem, or null if needed offset is in vitrual space.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine.OnLineDelete(System.Object,System.EventArgs)">
            <summary>
            Handler of LineDeleted event.
            </summary>
            <param name="sender">Line, that was deleted.</param>
            <param name="e">Empty EventArgs.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine.pointLineStart_LineChanged(System.Object,Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            Handler of the LineChanged event of the LineStartPoint.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine.Y">
            <summary>
            Line render position
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine.Height">
            <summary>
            Height of the line
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine.SubLineHeight">
            <summary>
            Array of heights of the sublinex. SubLines indexes starts from 0.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine.LineLength">
            <summary>
            GET length of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine.isMeasured">
            <summary>
            Flag that determines wheather line was already measured.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine.Parsed">
            <summary>
            Flag that determines, wheather line is parsed.
            If line is parsed, than LineEndStack property
            contains Stack for the end of the line and LineLexems
            collection contains all lexems, that belong to current line.
            If line was changed, than Parsed will be set to false.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine.Width">
            <summary>
            GET width of the line.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.ContextMenuManager">
            <summary>
            Summary description for ContextMenu.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.ContextMenuManager.DEF_STR_MNU_DIVIDER">
            <summary>
            Name of the menu item that will be displayed as divider.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.ContextMenuManager.m_parent">
            <summary>
            Parent control.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.ContextMenuManager.menuProvider">
            <summary>
            Context menu.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.ContextMenuManager.m_bEnabled">
            <summary>
            Specifies, whether context menu is enabled.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.ContextMenuManager.m_separator">
            <summary>
            Insert separator next time AddMenuItem is called.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.ContextMenuManager.#ctor(System.Windows.Forms.Control)">
            <summary>
            Creates and itializes new context menu processor.
            </summary>
            <param name="parent">Control, context menu should be attached to.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.ContextMenuManager.Dispose">
            <summary>
            Disposes all used resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.ContextMenuManager.ClearMenu">
            <summary>
            Clears menu.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.ContextMenuManager.AddMenuItem(System.String,System.EventHandler)">
            <summary>
            Appends new menu item to menu.
            </summary>
            <param name="name">Name of the menu item.</param>
            <param name="handlerClick">Handler of the click event of the item.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.ContextMenuManager.AddMenuItem(System.String,System.EventHandler,System.Boolean)">
            <summary>
            Appends new menu item to menu.
            </summary>
            <param name="name">Name of the menu item.</param>
            <param name="handlerClick">Handler of the click event of the item.</param>
            <param name="enabled">The boolean value for the menu item's Enabled property to be set.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.ContextMenuManager.AddSeparator">
            <summary>
            Appends new divider to menu.
            </summary>
            <returns>Newly created menu divider.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.ContextMenuManager.ShowContextMenu">
            <summary>
            Initializes context menu and shows it.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.ContextMenuManager.ParentMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles pressing of the right button.
            </summary>
            <param name="sender">Sender of the event.</param>
            <param name="e">Mouse event arguments.</param>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.ContextMenuManager.FillMenu">
            <summary>
            Event, that is raised, when user should fill menu with menu items.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.ContextMenuManager.Enabled">
            <summary>
            GET, SET flag that specifies, whether context menu is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.ContextMenuManager.ContextMenuProvider">
            <summary>
            The IContextMenuProvider interface provides Essential Suite controls with a high-level API for creating and 
            working with context menus. Subscribing to this interface allows the Essential Suite controls to 
            seamlessly switch between the standard .NET <see cref="T:System.Windows.Forms.ContextMenu"/> and the 
            <see cref="!:Syncfusion.Windows.Forms.Tools.XPMenus.PopupMenu"/> classes depending on the whether the 
            Essential Tools library is available or not.
            <seealso cref="T:Syncfusion.Windows.Forms.StandardMenusProvider"/>
            <seealso cref="!:Syncfusion.Windows.Forms.Tools.XPMenus.XPMenusProvider"/>
            <seealso cref="T:Syncfusion.Windows.Forms.ContextMenuItem"/>
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager">
            <summary>
            Cursor manager. Manages translation of the 
            cursor coordinates between different coordinate systems.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.ICursorManager">
            <summary>
            Manager of the cursor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.ICursorManager.Update">
            <summary>
            Updates cursor`s parameters.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ICursorManager.Visible">
            <summary>
            GET, SET visibility of the cursor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ICursorManager.Owner">
            <summary>
            GET control, that is the owner of the cursor and control`s it`s visibility.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ICursorManager.CursorVirtualCoordinates">
            <summary>
            GET virtual coordinates of the cursor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ICursorManager.CursorPhysicalCoordinates">
            <summary>
            GET physical coordinates of the cursor. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ICursorManager.CursorGraphicalCoordinates">
            <summary>
            GET graphical coordinates of the cursor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ICursorManager.PositionConvertor">
            <summary>
            Convertor of the positions.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.ICursorVirtualCoordinates">
            <summary>
            Virtual coordinates of the cursor.
            Collapsings can change virtual coordinates.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ICursorVirtualCoordinates.Line">
            <summary>
            GET, SET cursor`s line index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ICursorVirtualCoordinates.Column">
            <summary>
            GET, SET cursor`s column index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ICursorVirtualCoordinates.Position">
            <summary>
            GET, SET cursor`s position.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Interfaces.ICursorVirtualCoordinates.CoordinatesChanged">
            <summary>
            Event, raised when position of the cursor was changed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.ICursorPhysicalCoordinates">
            <summary>
            Physical coordinates of the cursor in text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ICursorPhysicalCoordinates.Line">
            <summary>
            GET, SET cursor`s line index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ICursorPhysicalCoordinates.Column">
            <summary>
            GET, SET cursor`s column index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ICursorPhysicalCoordinates.Position">
            <summary>
            GET, SET cursor`s position.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.ICursorGraphicalCoordinates">
            <summary>
            Graphical coordinates of the cursor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ICursorGraphicalCoordinates.LeftTop">
            <summary>
            GET, SET left-top point of the cursor in client coordinates.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ICursorGraphicalCoordinates.Size">
            <summary>
            GET size of the cursor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ICursorGraphicalCoordinates.Rectangle">
            <summary>
            GET rectangle, occupied by cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.m_bVisible">
            <summary>
            Visibility of the cursor.
            Note: Cursor will be visible only when owner control has focus.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.m_Owner">
            <summary>
            Control, that is owner of the cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.m_caret">
            <summary>
            Carret object.
            Is available only when control is focused.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.m_size">
            <summary>
            Carret size.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.m_location">
            <summary>
            Carret location on the screen.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.m_CurrentVirtualPoint">
            <summary>
            Current virtual point of the cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.m_CurrentPhysicalPoint">
            <summary>
            Current physical point of the cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.m_convertor">
            <summary>
            Convertor of the positions.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.#ctor(System.Windows.Forms.Control,Syncfusion.Windows.Forms.Edit.Interfaces.IPositionConvertor)">
            <summary>
            Creates and initalizes new instance of the class.
            </summary>
            <param name="owner">Owner of the cursor.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.Finalize">
            <summary>
            Cursor`s manager finalizer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.Dispose">
            <summary>
            Disposes current carret and detaches event handlers from control.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.Update">
            <summary>
            Updates cursor`s parameters.
            </summary>
            <remarks>
            All updates of coordinates are based on virtual position.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.RaiseCoordinatesChangedEvent">
            <summary>
            Raises CoordinatesChanged event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.UpdatePosition">
            <summary>
            Updates position of the cursor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.UpdateVisibility">
            <summary>
            Updates visibility of the cursor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.CreateCaret">
            <summary>
            Creates caret.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.DestroyCaret">
            <summary>
            Destroys caret.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.m_Owner_Resize(System.Object,System.EventArgs)">
            <summary>
            Updates visibility of cursor.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.m_Owner_GotFocus(System.Object,System.EventArgs)">
            <summary>
            Updates visibility of cursor.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.m_Owner_LostFocus(System.Object,System.EventArgs)">
            <summary>
            Updates visibility of cursor.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.Caret">
            <summary>
            GET GdiCaret.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.Visible">
            <summary>
            GET, SET visibility of the cursor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.Owner">
            <summary>
            GET control, that is the owner of the cursor and control`s it`s visibility.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.CursorVirtualCoordinates">
            <summary>
            GET virtual coordinates of the cursor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.CursorPhysicalCoordinates">
            <summary>
            GET physical coordinates of the cursor. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.CursorGraphicalCoordinates">
            <summary>
            GET graphical coordinates of the cursor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.Syncfusion#Windows#Forms#Edit#Interfaces#ICursorGraphicalCoordinates#LeftTop">
            <summary>
            GET, SET left-top point of the cursor in client coordinates.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.Syncfusion#Windows#Forms#Edit#Interfaces#ICursorGraphicalCoordinates#Size">
            <summary>
            GET size of the cursor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.Syncfusion#Windows#Forms#Edit#Interfaces#ICursorGraphicalCoordinates#Rectangle">
            <summary>
            GET rectangle, occupied by cursor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.Syncfusion#Windows#Forms#Edit#Interfaces#ICursorVirtualCoordinates#Line">
            <summary>
            GET, SET cursor`s virtual line index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.Syncfusion#Windows#Forms#Edit#Interfaces#ICursorVirtualCoordinates#Column">
            <summary>
            GET, SET cursor`s virtual column index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.Syncfusion#Windows#Forms#Edit#Interfaces#ICursorVirtualCoordinates#Position">
            <summary>
            GET, SET cursor`s virtual position.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.Syncfusion#Windows#Forms#Edit#Interfaces#ICursorPhysicalCoordinates#Line">
            <summary>
            GET, SET cursor`s physical line index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.Syncfusion#Windows#Forms#Edit#Interfaces#ICursorPhysicalCoordinates#Column">
            <summary>
            GET, SET cursor`s physical column index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.Syncfusion#Windows#Forms#Edit#Interfaces#ICursorPhysicalCoordinates#Position">
            <summary>
            GET, SET cursor`s physical position.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.PositionConvertor">
            <summary>
            GET convertor of the positions.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Implementation.CursorManager.CoordinatesChanged">
            <summary>
            Event, raised when position of the cursor was changed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Implementation.ScrollableCursorManager">
            <summary>
            Cursor manager, that supports scrolling ( Cursor coordinates are updated using ).
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.ScrollableCursorManager.#ctor(Syncfusion.Windows.Forms.Edit.HybridScrollControl,Syncfusion.Windows.Forms.Edit.Interfaces.IPositionConvertor)">
            <summary>
            Creates and initalizes new instance of the class.
            </summary>
            <param name="owner">Owner of the cursor.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.ScrollableCursorManager.Dispose">
            <summary>
            Disposes cursor manager, detaches all event handlers.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.ScrollableCursorManager.ProcessScrollEvent(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Handler of the VerticalScroll and HorizontalScroll events.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.ScrollableCursorManager.UpdatePosition">
            <summary>
            Updates position of the cursor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Implementation.ScrollableCursorManager.UpdateVisibility">
            <summary>
            Updates visibility of the cursor.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.ChangeType">
            <summary>
            Type of change in stream.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Interfaces.ILongOperation">
            <summary>
            Long operation interface.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Interfaces.ILongOperation.Stop">
            <summary>
            Stops operation.
            </summary>
            <remarks>
            Operation is no longer valid.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ILongOperation.ID">
            <summary>
            GET ID of the operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ILongOperation.RunningTime">
            <summary>
            GET time of operation activity.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ILongOperation.Name">
            <summary>
            GET name of the operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Interfaces.ILongOperation.IsRunning">
            <summary>
            GET sing wheather operation is running now.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx">
            <summary>
            Optimized version of SortedList collection. Instead of keeping two
            array one for keys and one for values, we change values array on
            Hashtable collection, and only keep keys collection sorted.
            Performance of this collection greater that SortedList has.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx._defaultCapacity">
            <summary>
            Default capacity of internal buffers
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.keys">
            <summary>
            array which store keys in sorted order
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.values">
            <summary>
            collection store value
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx._size">
            <summary>
            size of collection
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.version">
            <summary>
            version of collection data
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.comparer">
            <summary>
            default comparer for keys
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.keyList">
            <summary>
            List of keys
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.valueList">
            <summary>
            list of values
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.#ctor(System.Int32)">
            <summary>
            Creates an empty list with the specified initial capacity
            </summary>
            <param name="initialCapacity">initial capacity</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            When initialCapacity is less than zero
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.#ctor(System.Collections.IComparer)">
            <summary>
            Creates an empty SortedList with the default initial capacity
            and specified comparer.
            </summary>
            <param name="comparer">
            The IComparer to use to determine whether two keys are equal.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.#ctor(System.Collections.IComparer,System.Int32)">
            <summary>
            Creates an empty SortedList with the specified initial capacity
            and specified comparer.
            </summary>
            <param name="comparer">Initial capacity</param>
            <param name="capacity">
            The IComparer to use to determine whether two keys are equal
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.#ctor(System.Collections.IDictionary)">
            <summary>
            Copies the elements from the specified dictionary to a new list
            with the same initial capacity as the number of elements copied
            </summary>
            <param name="d">The IDictionary to copy</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
            <summary>
            Copies the elements from the specified dictionary to a new list with the same
            initial capacity as the number of elements copied and with the specified comparer
            </summary>
            <param name="d">The IDictionary to copy</param>
            <param name="comparer">
            The IComparer to use to determine whether two keys are equal.
            </param>
            <exception cref="T:System.ArgumentNullException">
            When argument d is null
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.Synchronized(Syncfusion.Windows.Forms.Edit.Utils.SortedListEx)">
            <summary>
            Returns a synchronized ( thread-safe ) wrapper for the SortedList
            </summary>
            <param name="list">The SortedList to synchronize</param>
            <returns>A synchronized ( thread-safe ) wrapper for the SortedList</returns>
            <exception cref="T:System.ArgumentNullException">
            When list is null
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.Add(System.Object,System.Object)">
            <summary>
            Adds an element with the provided key and value to the list
            </summary>
            <param name="key">The Object to use as the key of the element to add</param>
            <param name="value">The Object to use as the value of the element to add</param>
            <exception cref="T:System.ArgumentNullException">
            When key is null
            </exception>
            <exception cref="T:System.ArgumentException">
            When list already contains specified key
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.Clear">
            <summary>
            Removes all elements from the collection
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>Copy of the current instance</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.Contains(System.Object)">
            <summary>
            Determines whether the list contains an element with the specified key
            </summary>
            <param name="key">key of the element to search</param>
            <returns>TRUE if list contains specified key</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.ContainsKey(System.Object)">
            <summary>
            Determines whether the list contains an element with the specified key
            </summary>
            <param name="key">key of the element to search</param>
            <returns>TRUE if list contains specified key</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.ContainsValue(System.Object)">
            <summary>
            Determines whether the list contains the specified value
            </summary>
            <param name="value">value of the element to search</param>
            <returns>TRUE if list contains specified value</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements of the SortedListEx to the specified one-dimensional Array
            starting at the specified destination Array index
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the
            elements copied from the current list</param>
            <param name="arrayIndex">The index in array at which copying begins</param>
            <exception cref="T:System.ArgumentNullException">
            If specified array is null
            </exception>
            <exception cref="T:System.ArgumentException">
            If rank of the array is not 1 or there is not enough elements
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If specified arrayIndex is less than zero
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.GetByIndex(System.Int32)">
            <summary>
            Gets the value at the specified index of the SortedListEx
            </summary>
            <param name="index">The zero-based index of the value to get</param>
            <returns>The value at the specified index of the SortedListEx</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            When index is less than zero or greater than size of the list
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.GetKey(System.Int32)">
            <summary>
            Gets the key at the specified index of the SortedListEx
            </summary>
            <param name="index">The zero-based index of the key to get</param>
            <returns>The key at the specified index of the SortedListEx</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            When index is less than zero or greater than size of the list
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.GetKeyList">
            <summary>
            Gets the keys in the SortedListEx
            </summary>
            <returns>An IList containing the keys in the SortedListEx</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.GetValueList">
            <summary>
            Gets the values in the SortedListEx
            </summary>
            <returns>An IList containing the values in the SortedListEx</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.IndexOfKey(System.Object)">
            <summary>
            Returns the zero-based index of the specified key
            </summary>
            <param name="key">The key to locate</param>
            <returns>The zero-based index of key, if key is found; otherwise, -1</returns>
            <exception cref="T:System.ArgumentNullException">
            If specified key is null
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.IndexOfValue(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified value
            </summary>
            <param name="value">The value to locate ( can be NULL )</param>
            <returns>
            The zero-based index of the first occurrence of value, if value is found;
            otherwise, -1.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index
            </summary>
            <param name="index">The zero-based index of the element to remove</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            When index is less than zero or greater than size of the list
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.Remove(System.Object)">
             <summary>
            Removes the element with the specified key from SortedListEx
             </summary>
             <param name="key">The key of the element to remove</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SetByIndex(System.Int32,System.Object)">
            <summary>
            Replaces the value at the specific index
            </summary>
            <param name="index">The zero-based index at which to save value</param>
            <param name="value">The Object to save into. Can be NULL</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            When index is less than zero or greater than size of the list
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.GetEnumerator">
            <summary>
            Returns an IDictionaryEnumerator that can iterate through the SortedListEx
            </summary>
            <returns>An IDictionaryEnumerator for the SortedListEx</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an IEnumerator that can iterate through the SortedListEx
            </summary>
            <returns>An IEnumerator for the SortedListEx</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.Insert(System.Int32,System.Object,System.Object)">
            <summary>
            Inserts element with specified key and value at specified index
            </summary>
            <param name="index">The zero-based index to insert element at</param>
            <param name="key">The key of the element to insert</param>
            <param name="value">The value of the element to insert</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.EnsureCapacity(System.Int32)">
            <summary>
            Ensures that the capacity of this instance is at least the specified value
            </summary>
            <param name="min">The minimum capacity to ensure</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.Capacity">
            <summary>
            Capacity of internal buffers
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.Count">
            <summary>
            Size of the collection. Read-only
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.Keys">
            <summary>
            List of keys. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.Values">
            <summary>
            list of values. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.IsReadOnly">
            <summary>
            Returns TRUE if list is readonly, FALSE otherwise. Read-only
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.IsFixedSize">
            <summary>
            Returns TRUE if collection has fixed size, FALSE otherwise.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.IsSynchronized">
            <summary>
            Returns TRUE if the collection is synchronized, FALSE otherwise
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncRoot">
            <summary>
            Returns the object that can be used to synchronize access to the collection.
            Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.Item(System.Object)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx._list">
            <summary>
            Wrapped SortedListEx
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx._root">
            <summary>
            Sync object
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx.#ctor(Syncfusion.Windows.Forms.Edit.Utils.SortedListEx)">
            <summary>
            Creates SyncSortedListEx for specified SortedListEx
            </summary>
            <param name="list">SortedListEx that will be wrapped</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx.Add(System.Object,System.Object)">
            <summary>
            Adds an element with the provided key and value to the list
            </summary>
            <param name="key">The Object to use as the key of the element to add</param>
            <param name="value">The Object to use as the value of the element to add</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx.Clear">
            <summary>
            Removes all elements from collection
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx.Contains(System.Object)">
            <summary>
            Determines whether the list contains an element with the specified key
            </summary>
            <param name="key">key of the element to search</param>
            <returns>TRUE if list contains specified key</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx.ContainsKey(System.Object)">
            <summary>
            Determines whether the list contains an element with the specified key
            </summary>
            <param name="key">key of the element to search</param>
            <returns>TRUE if list contains specified key</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx.ContainsValue(System.Object)">
            <summary>
            Determines whether the list contains the specified value
            </summary>
            <param name="value">value of the element to search</param>
            <returns>TRUE if list contains specified value</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements of the list to the specified one-dimensional Array
            starting at the specified destination Array index
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the
            elements copied from the current list</param>
            <param name="arrayIndex">The index in array at which copying begins</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx.GetByIndex(System.Int32)">
            <summary>
            Gets the value at the specified index of the list
            </summary>
            <param name="index">The zero-based index of the value to get</param>
            <returns>The value at the specified index of the SortedListEx</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx.GetEnumerator">
            <summary>
            Returns an IDictionaryEnumerator that can iterate through the list
            </summary>
            <returns>An IDictionaryEnumerator for the list</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx.GetKey(System.Int32)">
            <summary>
            Gets the key at the specified index of the list
            </summary>
            <param name="index">The zero-based index of the key to get</param>
            <returns>The key at the specified index of the list</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx.GetKeyList">
            <summary>
            Gets the keys in the list
            </summary>
            <returns>An IList containing the keys in the list</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx.GetValueList">
            <summary>
            Gets the values in the list
            </summary>
            <returns>An IList containing the values in the list</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx.IndexOfKey(System.Object)">
            <summary>
            Returns the zero-based index of the specified key
            </summary>
            <param name="key">The key to locate</param>
            <returns>The zero-based index of key, if key is found; otherwise, -1</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx.IndexOfValue(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified value
            </summary>
            <param name="value">The value to locate ( can be NULL )</param>
            <returns>
            The zero-based index of the first occurrence of value, if value is found;
            otherwise, -1.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index
            </summary>
            <param name="index">The zero-based index of the element to remove</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx.Remove(System.Object)">
             <summary>
            Removes the element with the specified key from list
             </summary>
             <param name="key">The key of the element to remove</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx.SetByIndex(System.Int32,System.Object)">
            <summary>
            Replaces the value at a specific index
            </summary>
            <param name="index">The zero-based index at which to save value</param>
            <param name="value">The Object to save into. Can be NULL</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx.Capacity">
            <summary>
            Capacity of internal buffers
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx.Count">
            <summary>
            Size of the collection. Read-only
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx.SyncRoot">
            <summary>
            Returns the object that can be used to synchronize access to the collection.
            Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx.IsReadOnly">
            <summary>
            Returns TRUE if list is readonly, FALSE otherwise. Read-only
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx.IsFixedSize">
            <summary>
            Returns TRUE if collection has fixed size, FALSE otherwise.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx.IsSynchronized">
            <summary>
            Returns TRUE if the collection is synchronized, FALSE otherwise
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SyncSortedListEx.Item(System.Object)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SortedListExEnumerator.Keys">
            <summary>
            If it is assumed to getObjectRetType then Current will return key
            of the current element
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SortedListExEnumerator.Values">
            <summary>
            If it is assumed to getObjectRetType then Current will return value
            of the current element
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SortedListExEnumerator.DictEntry">
            <summary>
            If it is assumed to getObjectRetType then Current will return both -
            key and value ( as DictionaryEntry )
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SortedListExEnumerator.SortedListEx">
            <summary>
            List for which is this enumerator
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SortedListExEnumerator.key">
            <summary>
            Key of the current element
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SortedListExEnumerator.value">
            <summary>
            Values of the current element
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SortedListExEnumerator.index">
            <summary>
            Index of current element
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SortedListExEnumerator.startIndex">
            <summary>
            Starting index for the enumerator
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SortedListExEnumerator.endIndex">
            <summary>
            Ending index for this enumerator
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SortedListExEnumerator.version">
            <summary>
            version of collection data
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SortedListExEnumerator.current">
            <summary>
            TRUE if current element is correct, FALSE otherwise
            ( before beginning or after end )
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SortedListExEnumerator.getObjectRetType">
            <summary>
            Specifies what should return method Current ( Key, Value or both )
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SortedListExEnumerator.#ctor(Syncfusion.Windows.Forms.Edit.Utils.SortedListEx,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates enumerator for specified list, starting from specified index
            and with specified count
            </summary>
            <param name="SortedListEx">list for which to create enumerator</param>
            <param name="index">starting index</param>
            <param name="count">number of elements to enumerate</param>
            <param name="getObjRetType">type of enumerating values ( keys, value, DicEntry )</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SortedListExEnumerator.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>copy of the current instance</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SortedListExEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection
            </summary>
            <returns>
            TRUE if the enumerator was successfully advanced to the next element;
            FALSE if the enumerator has passed the end of the collection
            </returns>
            <exception cref="T:System.InvalidOperationException">
            When the current version is not equal to the SortedListEx version
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SortedListExEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before
            the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            When the current version is not equal to the SortedListEx version
            </exception>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SortedListExEnumerator.Key">
            <summary>
            Returns key of the current element. Read-only.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            When the current version is not equal to the SortedListEx version
            or if current is false
            </exception>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SortedListExEnumerator.Entry">
            <summary>
            Return DictionaryEntry for the current element
            </summary>
            <exception cref="T:System.InvalidOperationException">
            When the current version is not equal to the SortedListEx version
            or if current is false
            </exception>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SortedListExEnumerator.Current">
            <summary>
            The current element in the collection. Read-only.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            If current is false
            </exception>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.SortedListExEnumerator.Value">
            <summary>
            Returns value for the current element
            </summary>
            <exception cref="T:System.InvalidOperationException">
            When the current version is not equal to the SortedListEx version
            or if current is false
            </exception>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.KeyList.SortedListEx">
            <summary>
            List for which this collection was created
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.KeyList.#ctor(Syncfusion.Windows.Forms.Edit.Utils.SortedListEx)">
            <summary>
            Creates KeyList for specified SortedListEx
            </summary>
            <param name="SortedListEx">SortedListEx for which KeyList must be created</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.KeyList.Add(System.Object)">
            <summary>
            Adds an element with the provided key to the list
            </summary>
            <param name="key">The Object to use as the key of the element to add</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.KeyList.Clear">
            <summary>
            Removes all elements from the collection
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.KeyList.Contains(System.Object)">
            <summary>
            Determines whether the list contains an element with the specified key
            </summary>
            <param name="key">key of the element to search</param>
            <returns>TRUE if list contains specified key</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.KeyList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements of the list to the specified one-dimensional Array
            starting at the specified destination Array index
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the
            elements copied from the current list</param>
            <param name="arrayIndex">The index in array at which copying begins</param>
            <exception cref="T:System.ArgumentException">
            If array is null or rank of the array is not 1
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.KeyList.Insert(System.Int32,System.Object)">
            <summary>
            Insert the value at the specific index
            </summary>
            <param name="index">The zero-based index at which to save value</param>
            <param name="value">The Object to save into. Can be NULL</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.KeyList.GetEnumerator">
            <summary>
            Returns an IEnumerator that can iterate through the list
            </summary>
            <returns>An IEnumerator for the list</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.KeyList.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the specified key
            </summary>
            <param name="key">The key to locate</param>
            <returns>The zero-based index of the key, if the key is found; otherwise, -1</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.KeyList.Remove(System.Object)">
             <summary>
            Removes the element with the specified key from list
             </summary>
             <param name="key">The key of the element to remove</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.KeyList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index from the list
            </summary>
            <param name="index">The zero-based index of the element to remove</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.KeyList.Count">
            <summary>
            Size of the collection. Read-only
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.KeyList.IsReadOnly">
            <summary>
            Returns TRUE if list is readonly, FALSE otherwise. Read-only
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.KeyList.IsFixedSize">
            <summary>
            Returns TRUE if collection has fixed size, FALSE otherwise.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.KeyList.IsSynchronized">
            <summary>
            Returns TRUE if the collection is synchronized, FALSE otherwise
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.KeyList.SyncRoot">
            <summary>
            Returns the object that can be used to synchronize access to the collection.
            Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.KeyList.Item(System.Int32)">
            <summary>
            Gets or sets the key at the specified index
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.ValueList.SortedListEx">
            <summary>
            List for which this collection was created
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.ValueList.vals">
            <summary>
            Array of values.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.ValueList.#ctor(Syncfusion.Windows.Forms.Edit.Utils.SortedListEx)">
            <summary>
            Creates ValueList for specified SortedListEx
            </summary>
            <param name="SortedListEx">SortedListEx for which ValueList must be created</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.ValueList.UpdateValues">
            <summary>
            Re-read values from the list
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.ValueList.Add(System.Object)">
            <summary>
            Adds an element with the provided key to the list
            </summary>
            <param name="value">The Object to use as the key of the element to add</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.ValueList.Clear">
            <summary>
            Removes all elements from the collection
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.ValueList.Contains(System.Object)">
            <summary>
            Determines whether the list contains an element with the specified value
            </summary>
            <param name="value">value to search</param>
            <returns>TRUE if list contains specified value</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.ValueList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements of the list to the specified one-dimensional Array
            starting at the specified destination Array index
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the
            elements copied from the current list</param>
            <param name="arrayIndex">The index in array at which copying begins</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.ValueList.Insert(System.Int32,System.Object)">
            <summary>
            Insert the value at the specific index
            </summary>
            <param name="index">The zero-based index at which to save value</param>
            <param name="value">The Object to save into. Can be NULL</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.ValueList.GetEnumerator">
            <summary>
            Returns an IEnumerator that can iterate through the list
            </summary>
            <returns>An IEnumerator for the list</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.ValueList.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the specified value
            </summary>
            <param name="value">The value to locate</param>
            <returns>The zero-based index of the value, if the value is found; otherwise, -1</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.ValueList.Remove(System.Object)">
             <summary>
            Removes the specified value from list
             </summary>
             <param name="value">The value to remove</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.ValueList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index from the list
            </summary>
            <param name="index">The zero-based index of the element to remove</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.ValueList.Count">
            <summary>
            Size of the collection. Read-only
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.ValueList.IsReadOnly">
            <summary>
            Returns TRUE if list is readonly, FALSE otherwise. Read-only
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.ValueList.IsFixedSize">
            <summary>
            Returns TRUE if collection has fixed size, FALSE otherwise.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.ValueList.IsSynchronized">
            <summary>
            Returns TRUE if the collection is synchronized, FALSE otherwise
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.ValueList.SyncRoot">
            <summary>
            Returns the object that can be used to synchronize access to the collection.
            Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.SortedListEx.ValueList.Item(System.Int32)">
            <summary>
            Gets or sets the value at the specified index
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Utils.CollectionEventHandler">
            <summary>
            Delegate used by Collection to send messages to user throwing events.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Utils.CollectionEventArgs">
            <summary>
            Class which used for sending messages between collection and user
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.CollectionEventArgs.m_bCancel">
            <summary>
            storage of Cancel property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.CollectionEventArgs.m_iIndex">
            <summary>
            storage of Index property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.CollectionEventArgs.m_value">
            <summary>
            storage of Value property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.CollectionEventArgs.m_oldValue">
            <summary>
            storage of OldValue proeprty
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CollectionEventArgs.#ctor">
            <summary>
            Default coinstructor
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CollectionEventArgs.#ctor(System.Int32,System.Object)">
            <summary>
            Set Value and Index
            </summary>
            <param name="index">Index of item</param>
            <param name="value">Value - refernce to collection item</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CollectionEventArgs.#ctor(System.Int32,System.Object,System.Object)">
            <summary>
            Set Value, Index and Old Value
            </summary>
            <param name="index">Index of item</param>
            <param name="value">Value - refernce to collection item</param>
            <param name="old">Old value of item</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.CollectionEventArgs.Cancel">
            <summary>
            If TRUE then class will skip call to base Collection method, otherwise
            CollectionBase class override methods will be called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.CollectionEventArgs.Index">
            <summary>
            Index of item
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.CollectionEventArgs.Value">
            <summary>
            Value of Item
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.CollectionEventArgs.OldValue">
            <summary>
            If operation in which used this class has new and old value
            then this property in work
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.CollectionEventArgs.Empty">
            <summary>
            Return empty instance of this class
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Utils.EventBaseDictionary">
            <summary>
            Collection throw event on any it context change
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Utils.EventBaseDictionary.Clearing">
            <summary>
            Raised by <see cref="M:Syncfusion.Windows.Forms.Edit.Utils.EventBaseDictionary.OnClear"/> method
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Utils.EventBaseDictionary.Cleared">
            <summary>
            Raised by <see cref="!:OnClearCompleted"/> method
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Utils.EventBaseDictionary.Get">
            <summary>
            Raised by <see cref="M:Syncfusion.Windows.Forms.Edit.Utils.EventBaseDictionary.OnGet(System.Object,System.Object)"/> method
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Utils.EventBaseDictionary.Setting">
            <summary>
            Raised by <see cref="M:Syncfusion.Windows.Forms.Edit.Utils.EventBaseDictionary.OnSet(System.Object,System.Object,System.Object)"/> method
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Utils.EventBaseDictionary.Set">
            <summary>
            Raised by <see cref="M:Syncfusion.Windows.Forms.Edit.Utils.EventBaseDictionary.OnSetComplete(System.Object,System.Object,System.Object)"/> method
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Utils.EventBaseDictionary.Inserting">
            <summary>
            Raised by <see cref="M:Syncfusion.Windows.Forms.Edit.Utils.EventBaseDictionary.OnInsert(System.Object,System.Object)"/> method
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Utils.EventBaseDictionary.Inserted">
            <summary>
            Raised by <see cref="M:Syncfusion.Windows.Forms.Edit.Utils.EventBaseDictionary.OnInsertComplete(System.Object,System.Object)"/> method
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Utils.EventBaseDictionary.Removing">
            <summary>
            Raised by <see cref="M:Syncfusion.Windows.Forms.Edit.Utils.EventBaseDictionary.OnRemove(System.Object,System.Object)"/> method
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Utils.EventBaseDictionary.Removed">
            <summary>
            Raised by <see cref="M:Syncfusion.Windows.Forms.Edit.Utils.EventBaseDictionary.OnRemoveComplete(System.Object,System.Object)"/> method
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Utils.DictionaryEventHandler">
            <summary>
            Delegate which is used for throwing events
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Utils.DictionaryEventArgs">
            <summary>
            Message/Data sender class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.DictionaryEventArgs.Cancel">
            <summary>
            TRUE - cancel current action
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.DictionaryEventArgs.Key">
            <summary>
            Get Key Value of Dictionary Item
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.DictionaryEventArgs.Value">
            <summary>
            Get Dictionary Item
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.DictionaryEventArgs.OldValue">
            <summary>
            On Replace Get Dictionary item whicg will be replaced
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.DictionaryEventArgs.Empty">
            <summary>
            Get Empty object
            </summary>
        </member>
        <member name="T:Syncfusion.Shared.Utils.KeyBinding.Implementation.CommandAttribute">
            <summary>
            Summary description for CommandAttribute.
            </summary>
        </member>
        <member name="F:Syncfusion.Shared.Utils.KeyBinding.Implementation.CommandAttribute.m_strName">
            <summary>
            Name of the command.
            </summary>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.CommandAttribute.#ctor">
            <summary>
            Hide default constructor from end user.
            </summary>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.CommandAttribute.#ctor(System.String)">
            <summary>
            Publish method as Command for Keys binding.
            </summary>
            <param name="name">Unique name which identify method as command 
            for keys binding</param>
            <exception cref="T:System.ArgumentNullException">name can not be NULL</exception>
            <exception cref="T:System.ArgumentException">name can not be empty</exception>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.Implementation.CommandAttribute.Name">
            <summary>
            Name of the command.
            </summary>
        </member>
        <member name="T:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyCommandImpl">
            <summary>
            Implementation of the IKeyCommand interface.
            </summary>
        </member>
        <member name="T:Syncfusion.Shared.Utils.KeyBinding.IKeyCommand">
            <summary>
            Single command.
            </summary>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.IKeyCommand.Execute">
            <summary>
            Executes command.
            </summary>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.IKeyCommand.Name">
            <summary>
            GET name of the command.
            </summary>
        </member>
        <member name="E:Syncfusion.Shared.Utils.KeyBinding.IKeyCommand.ProcessCommand">
            <summary>
            Event, that is raised when command must be processed.
            </summary>
        </member>
        <member name="F:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyCommandImpl.m_Name">
            <summary>
            Name of the Command.
            </summary>
        </member>
        <member name="F:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyCommandImpl.m_ID">
            <summary>
            ID of the command.
            </summary>
        </member>
        <member name="F:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyCommandImpl.m_List">
            <summary>
            Parent list.
            </summary>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyCommandImpl.Execute">
            <summary>
            Executes command.
            </summary>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyCommandImpl.#ctor(System.String,Syncfusion.Windows.Forms.Edit.ProcessCommandEventHandler,Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyCommandListImpl)">
            <summary>
            Creates new instance of the class.
            </summary>
            <param name="name">Name of the command.</param>
            <param name="handler"></param>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyCommandImpl.ToString">
            <summary>
            Gets name of the command.
            </summary>
            <returns></returns>
        </member>
        <member name="E:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyCommandImpl.ProcessCommand">
            <summary>
            Event, that is raised when command must be processed.
            </summary>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyCommandImpl.Name">
            <summary>
            GET name of the command.
            </summary>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyCommandImpl.ID">
            <summary>
            ID of the command.
            </summary>
        </member>
        <member name="T:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyCommandListImpl">
            <summary>
            Implementation of IKeyCommandList interface.
            </summary>
        </member>
        <member name="T:Syncfusion.Shared.Utils.KeyBinding.IKeyCommandList">
            <summary>
            List of the commands.
            </summary>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.IKeyCommandList.Add(System.String)">
            <summary>
            Creates new command and adds it to list.
            </summary>
            <param name="name">Name of the command.</param>
            <returns>Newly created command.</returns>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.IKeyCommandList.Remove(System.String)">
            <summary>
            Removes command from list.
            </summary>
            <param name="name">Name of the command.</param>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.IKeyCommandList.Clear">
            <summary>
            Clears list.
            </summary>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.IKeyCommandList.Item(System.String)">
            <summary>
            GET command by name.
            </summary>
        </member>
        <member name="F:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyCommandListImpl.m_data">
            <summary>
            Internal data.
            </summary>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyCommandListImpl.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies commands to the specified array.
            </summary>
            <param name="array">Destination array.</param>
            <param name="index">Index in destination array.</param>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyCommandListImpl.GetEnumerator">
            <summary>
            Gets enumerator for commands.
            </summary>
            <returns>Enumerator.</returns>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyCommandListImpl.Add(System.String)">
            <summary>
            Creates new command and adds it to list.
            </summary>
            <param name="name">Name of the command.</param>
            <returns>Newly created command.</returns>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyCommandListImpl.Remove(System.String)">
            <summary>
            Removes command from list.
            </summary>
            <param name="name">Name of the command.</param>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyCommandListImpl.Clear">
            <summary>
            Clears list.
            </summary>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyCommandListImpl.CheckIfBelong(Syncfusion.Shared.Utils.KeyBinding.IKeyCommand)">
            <summary>
            Checks wheather command belongs to this list.
            </summary>
            <param name="command">Command to be checked.</param>
            <returns>True if command belongs to this list.</returns>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyCommandListImpl.Item(System.String)">
            <summary>
            GET command by name.
            </summary>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyCommandListImpl.IsSynchronized">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyCommandListImpl.Count">
            <summary>
            Count of items in collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyCommandListImpl.SyncRoot">
            <summary>
            Synchronization object.
            </summary>
        </member>
        <member name="T:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor">
            <summary>
            Main key processor.
            </summary>
        </member>
        <member name="F:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.DEF_XML_DATA">
            <summary>
            Name of the value for serialization.
            </summary>
        </member>
        <member name="F:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.m_RootBinder">
            <summary>
            Root key binder.
            </summary>
        </member>
        <member name="F:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.m_CurrentBinder">
            <summary>
            Current key binder.
            </summary>
        </member>
        <member name="F:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.m_Commands">
            <summary>
            List of commands.
            </summary>
        </member>
        <member name="F:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.m_Convertor">
            <summary>
            Keys convertor.
            </summary>
        </member>
        <member name="F:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.m_serializer">
            <summary>
            Xml serializer for serialization/deserialization of bindings.
            </summary>
        </member>
        <member name="F:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.m_backupStream">
            <summary>
            Stream, that keeps backup version of the key-bindings.
            </summary>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.ProcessKey(System.Windows.Forms.Keys)">
            <summary>
            Process key.
            </summary>
            <param name="key">Key to be processed.</param>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.SaveBindingsToXML(System.IO.Stream)">
            <summary>
            Saves bindings to XML.
            </summary>
            <param name="stream">Output stream.</param>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.LoadBindingsFromXML(System.IO.Stream)">
            <summary>
            Loads bindings from XML.
            </summary>
            <param name="stream">Input stream.</param>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes list.
            </summary>
            <param name="info">Serialization info.</param>
            <param name="context">Serialization context.</param>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.InitializeClassDefaults(Syncfusion.Shared.Utils.KeyBinding.IKeyBinderContainer)">
            <summary>
            Scans for commands and key-bindings in custom attributes of all public methods of the class.
            </summary>
            <param name="type">Class to be scanned.</param>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.InitializeCommandsList(Syncfusion.Shared.Utils.KeyBinding.IKeyBinderContainer)">
            <summary>
            Initializes list of the commands.
            </summary>
            <param name="instance"></param>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserializes key bindings.
            </summary>
            <param name="info">Serialization info.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.#ctor">
            <summary>
            Creates new key processor and creates new command list 
            and bindings list within it.
            </summary>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.#ctor(System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.DefaultInitialization">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.OnUnprocessedKey(System.Windows.Forms.Keys)">
            <summary>
            Raises UnprocessedKey event.
            </summary>
            <param name="key">Key, that was not processed.</param>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.BeginEdit">
            <summary>
            Starts editing.
            </summary>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.CancelEdit">
            <summary>
            Cancels all changes.
            </summary>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.EndEdit">
            <summary>
            Subbmits all changes.
            </summary>
        </member>
        <member name="E:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.UnprocessedKey">
            <summary>
            Event, that is raised when some key was unprocesses.
            </summary>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.Commands">
            <summary>
            GET list of commands.
            </summary>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.Binder">
            <summary>
            GET root key binder.
            </summary>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.Convertor">
            <summary>
            GET key convertor.
            </summary>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.Serializer">
            <summary>
            GET xml serializer for bindings list.
            </summary>
        </member>
        <member name="T:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandBinderImpl">
            <summary>
            Implementation of the IKeyCommandBinder interface.
            Used to keep information about sinle key=command binding.
            </summary>
        </member>
        <member name="T:Syncfusion.Shared.Utils.KeyBinding.IKeyCommandBinder">
            <summary>
            Single key=command binding.
            </summary>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.IKeyCommandBinder.ProcessKey(System.Windows.Forms.Keys)">
            <summary>
            Tries to process key.
            </summary>
            <param name="key">Key to be processed.</param>
            <returns>True if key was processed, othrwise false.</returns>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.IKeyCommandBinder.GetCombinationName">
            <summary>
            Gets full name of the combination, 
            current binding is related to.
            </summary>
            <returns>String that represents currently 
            used combination.</returns>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.IKeyCommandBinder.Parent">
            <summary>
            GET parent list, binding belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.IKeyCommandBinder.Command">
            <summary>
            GET command, that is binded. 
            </summary>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.IKeyCommandBinder.Key">
            <summary>
            GET key, that is binded. 
            </summary>
        </member>
        <member name="F:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandBinderImpl.m_Parent">
            <summary>
            Parent list, binding belongs to.
            </summary>
        </member>
        <member name="F:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandBinderImpl.m_Command">
            <summary>
            Command, that is binded. 
            </summary>
        </member>
        <member name="F:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandBinderImpl.m_Key">
            <summary>
            Key, that is binded. 
            </summary>
        </member>
        <member name="F:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandBinderImpl.m_initialized">
            <summary>
            Flag that specifies wheather binding was linked to command.
            </summary>
        </member>
        <member name="F:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandBinderImpl.m_initializedKey">
            <summary>
            Flag that specifies wheather binding was linked to key.
            </summary>
        </member>
        <member name="F:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandBinderImpl.m_Processor">
            <summary>
            KeyProcessor, the list belongs to.
            </summary>
        </member>
        <member name="F:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandBinderImpl.m_CommandName">
            <summary>
            Name of the command to be linked with.
            </summary>
        </member>
        <member name="F:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandBinderImpl.m_converter">
            <summary>
            Keys converter.
            </summary>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandBinderImpl.ProcessKey(System.Windows.Forms.Keys)">
            <summary>
            Tries to process key.
            </summary>
            <param name="key">Key to be processed.</param>
            <returns>True if key was processed, othrwise false.</returns>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandBinderImpl.GetCombinationName">
            <summary>
            Gets full name of the combination, 
            current binding is related to.
            </summary>
            <returns>String that represents currently 
            used combination.</returns>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandBinderImpl.ToString">
            <summary>
            Return combination name.
            </summary>
            <returns>String, that represents current key sequence.</returns>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandBinderImpl.ResetCommandLinks">
            <summary>
            Reset links to commands, and leaves only by-name references.
            </summary>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandBinderImpl.#ctor">
            <summary>
            Constructor for XML serialization.
            </summary>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandBinderImpl.#ctor(Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor,Syncfusion.Shared.Utils.KeyBinding.IKeyCommandListBinder,Syncfusion.Shared.Utils.KeyBinding.IKeyCommand,System.Windows.Forms.Keys)">
            <summary>
            Creates new instance of the class and initializes it.
            </summary>
            <param name="processor">Key process, the binding belongs to.</param>
            <param name="parent">Parent list of the binding.</param>
            <param name="command">Command, the binding is linked to.</param>
            <param name="key">Key, the binding is linked to.</param>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandBinderImpl.Command">
            <summary>
            GET command, that is binded. 
            </summary>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandBinderImpl.CommandName">
            <summary>
            GET, SET command name, just for XML Serialization support.
            </summary>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandBinderImpl.Key">
            <summary>
            GET key, that is binded. 
            </summary>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandBinderImpl.KeyXML">
            <summary>
            GET, SET key value. Intended for XML Serialization only.
            </summary>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandBinderImpl.Processor">
            <summary>
            GET, SET key processor.
            </summary>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandBinderImpl.Parent">
            <summary>
            GET, SET parent list.
            </summary>
        </member>
        <member name="T:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandListBinderImpl">
            <summary>
            List of key bindings.
            </summary>
        </member>
        <member name="T:Syncfusion.Shared.Utils.KeyBinding.IKeyCommandListBinder">
            <summary>
            Collaction of the bindings.
            </summary>
            <remarks>
            Command is always null and Key is always Keys.None.
            </remarks>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.IKeyCommandListBinder.BindToCommand(System.Windows.Forms.Keys,System.String)">
            <summary>
            Sets binding of the key to specified command.
            </summary>
            <param name="key">Key to be binded.</param>
            <param name="command">Name of the command, 
            the key is to be binded to.</param>
            <returns>Command if binding 
            compleated successfully, or null of binding failed.</returns>
            <remarks>
            It is not necessery to create command before binding. 
            If it does not exists, it will be created.
            </remarks>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.IKeyCommandListBinder.BindToBinder(System.Windows.Forms.Keys)">
            <summary>
            Sets binding for the key to the new command.
            </summary>
            <param name="key">Key to be binded.</param>
            <returns>Returns existing binder, or creates new if 
            key was not binded before or was binded to command.</returns>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.IKeyCommandListBinder.RemoveBinding(System.Windows.Forms.Keys)">
            <summary>
            Removes any associated binding for the specified key.
            </summary>
            <param name="key">Key to be unbinded.</param>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.IKeyCommandListBinder.FindBindings(System.String)">
            <summary>
            Searches for bindings of the command.
            </summary>
            <param name="command">Name of the command.</param>
            <returns>Bindings, that are assigned to that command.</returns>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.IKeyCommandListBinder.FindBinding(System.Windows.Forms.Keys[],System.Int32)">
            <summary>
            Searches for binding of the keys sequence.
            </summary>
            <param name="command">Name of the command.</param>
            <returns>Bindings, that are assigned to that command.</returns>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.IKeyCommandListBinder.Item(System.Windows.Forms.Keys)">
            <summary>
            GET binding for the key.
            </summary>
        </member>
        <member name="F:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandListBinderImpl.m_Bindings">
            <summary>
            Hashtable with keybindings.
            Key - key, Value - IKeyCommandBinder/IKeyCommandListBinder
            </summary>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandListBinderImpl.#ctor">
            <summary>
            For XML Serialization only.
            </summary>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandListBinderImpl.#ctor(Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor,Syncfusion.Shared.Utils.KeyBinding.IKeyCommandListBinder,System.Windows.Forms.Keys)">
            <summary>
            Creates new instance of the class and initializes it.
            </summary>
            <param name="processor">Main keys processor.</param>
            <param name="parent">Parent of the list.</param>
            <param name="key"></param>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandListBinderImpl.BindToCommand(System.Windows.Forms.Keys,System.String)">
            <summary>
            Sets binding of the key to specified command.
            </summary>
            <param name="key">Key to be binded.</param>
            <param name="command">Name of the command, 
            the key is to be binded to.</param>
            <returns>Command if binding 
            compleated successfully, or null of binding failed.</returns>
            <remarks>
            It is not necessery to create command before binding. 
            If it does not exists, it will be created.
            </remarks>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandListBinderImpl.BindToBinder(System.Windows.Forms.Keys)">
            <summary>
            Sets binding for the key to the new command.
            </summary>
            <param name="key">Key to be binded.</param>
            <returns>Returns existing binder, or creates new if 
            key was not binded before or was binded to command.</returns>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandListBinderImpl.RemoveBinding(System.Windows.Forms.Keys)">
            <summary>
            Removes any associated binding for the specified key.
            </summary>
            <param name="key">Key to be unbinded.</param>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandListBinderImpl.FindBindings(System.String)">
            <summary>
            Searches for bindings of the command.
            </summary>
            <param name="command">Name of the command.</param>
            <returns>Bindings, that are assigned to that command.</returns>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandListBinderImpl.FindBinding(System.Windows.Forms.Keys[],System.Int32)">
            <summary>
            Searches for binding of the keys sequence.
            </summary>
            <param name="command">Name of the command.</param>
            <returns>Bindings, that are assigned to that command.</returns>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandListBinderImpl.ProcessKey(System.Windows.Forms.Keys)">
            <summary>
            Tries to process key.
            </summary>
            <param name="key">Key to be processed.</param>
            <returns>True if key was processed.</returns>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandListBinderImpl.ResetCommandLinks">
            <summary>
            Reset links to commands, and leaves only by-name references.
            </summary>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandListBinderImpl.Processor">
            <summary>
            GET, SET key processor.
            </summary>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandListBinderImpl.Item(System.Windows.Forms.Keys)">
            <summary>
            GET binding for the key.
            </summary>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessor.KeyCommandListBinderImpl.SubBundings">
            <summary>
            GET, SET array of bindings. Intended just for XML Serialization.
            </summary>
        </member>
        <member name="T:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessorConvertor">
            <summary>
            Manages convertions of the KeyProcessor class.
            </summary>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessorConvertor.#ctor">
            <summary>
            Creates and initializes class instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessorConvertor.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of one type to the type of this converter.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="sourceType">A Type that represents the type you want to convert from.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessorConvertor.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="destinationType">A Type that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessorConvertor.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">The CultureInfo to use as the current culture.</param>
            <param name="value">The Object to convert.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeyProcessorConvertor.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">A CultureInfo object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The Object to convert.</param>
            <param name="destinationType">The Type to convert the value parameter to.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="T:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeysBindingAttribute">
            <summary>
            Summary description for KeysBindingAttribute.
            </summary>
        </member>
        <member name="F:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeysBindingAttribute.m_keys">
            <summary>
            Keys, assigned to the current instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeysBindingAttribute.#ctor">
            <summary>
            Hides default constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeysBindingAttribute.InitBindings(System.Windows.Forms.Keys[])">
            <summary>
            Initalizes attribute instance with a key sequence.
            </summary>
            <param name="keys">Key sequence.</param>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeysBindingAttribute.#ctor(System.Windows.Forms.Keys[])">
            <summary>
            Creates and initalizes attribute with a key sequence.
            </summary>
            <param name="keys">Key sequence.</param>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeysBindingAttribute.#ctor(System.Windows.Forms.Keys)">
            <summary>
            Creates and initalizes attribute with a key sequence.
            </summary>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeysBindingAttribute.#ctor(System.Windows.Forms.Keys,System.Windows.Forms.Keys)">
            <summary>
            Creates and initalizes attribute with a key sequence.
            </summary>
            <param name="key1">First key in the sequence.</param>
            <param name="key1">Second key in the sequence.</param>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.Implementation.KeysBindingAttribute.Keys">
            <summary>
            GET keys, assigned to the current instance.
            </summary>
        </member>
        <member name="T:Syncfusion.Shared.Utils.KeyBinding.IKeyBinderContainer">
            <summary>
            Interface for key-bindings callbacks. 
            </summary>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.IKeyBinderContainer.RegisterKeyCommands">
            <summary>
            Registers default commands.
            </summary>
        </member>
        <member name="M:Syncfusion.Shared.Utils.KeyBinding.IKeyBinderContainer.RegisterDefaultKeyBindings">
            <summary>
            Registers default commands.
            </summary>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.IKeyBinderContainer.Commands">
            <summary>
            GET list of commands.
            </summary>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.IKeyBinderContainer.KeyBinder">
            <summary>
            GET root key binder.
            </summary>
        </member>
        <member name="P:Syncfusion.Shared.Utils.KeyBinding.IKeyBinderContainer.KeyBindingProcessor">
            <summary>
            GET, SET key binding processor.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Utils.CustomBookmark">
            <summary>
            Bookmark with custom drawing.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Utils.Bookmark">
            <summary>
            Bookmark.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.Bookmark.m_point">
            <summary>
            ParsePoint, bookmark is connected to.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.Bookmark.m_index">
            <summary>
            Fast access index of bookmark.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.Bookmark.m_lastIndex">
            <summary>
            Index of last unindexed bookmark.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.Bookmark.m_parent">
            <summary>
            Parent
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.Bookmark.PaintBookmark(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws bookmark.
            </summary>
            <param name="g">Graphics to be used for drawing.</param>
            <param name="rect"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.Bookmark.CompareTo(System.Object)">
            <summary>
            Compares two bookmarks by offsets of ther parsepoints.
            </summary>
            <param name="obj">Bookmark object or IParsePoint.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.Bookmark.#ctor(Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper,Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint)">
            <summary>
            Creates bookmark.
            </summary>
            <param name="point">Point, bookmark is associated with.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.Bookmark.#ctor(Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper,Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint,System.Int32)">
            <summary>
            Creates bookmark.
            </summary>
            <param name="point">Point, bookmark is associated with.</param>
            <param name="index">Fast access index of the bookmark.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.Bookmark.Point">
            <summary>
            GET ParsePoint, bookmark is connected to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.Bookmark.Index">
            <summary>
            GET fast access index of bookmark.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CustomBookmark.#ctor(Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper,Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint)">
            <summary>
            Creates bookmark.
            </summary>
            <param name="point">Point, bookmark is associated with.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CustomBookmark.PaintBookmark(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws bookmark.
            </summary>
            <param name="g">Graphics to be used for drawing.</param>
            <param name="rect"></param>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Utils.CustomBookmark.DrawBookmark">
            <summary>
            Event, that is raised when bookmark needs to be drawn.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Utils.BookMarkIndexSearch">
            <summary>
            Comparer for Bookmarks to search by index.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Utils.ClipboardHTML">
            <summary>
            Class for converting valid html to "HTML Clipboard Format".
            HTML Clipboard Format:
            http://msdn.microsoft.com/workshop/networking/clipboard/htmlclipboard.asp?frame=true
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.ClipboardHTML.DEF_HTML_HEADER">
            <summary>
            Common header for clipboard.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.ClipboardHTML.DEF_HTML_HEADER_FRAGMENT">
            <summary>
            Header of the fragment.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.ClipboardHTML.DEF_HTML_FRAGMENT_START">
            <summary>
            Start of the fragment.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.ClipboardHTML.DEF_HTML_FRAGMENT_END">
            <summary>
            End of the fragment.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.ClipboardHTML.GetHTMLForClipboard(System.String)">
            <summary>
            Converts html to "HTML Clipboard Format".
            </summary>
            <remarks>
            Input HTML must have <!--StartFragment --> 
            and <!--EndFragment --> marks.
            </remarks>
            <param name="text">HTML to convert.</param>
            <returns>HTML with special headers.</returns>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.GraphicsUtils.DEF_MAX_TEXT_MEASURE_LENGTH">
            <summary>
            Length of the block for measuring.
            It must be small because MeasureCharacterRanges function
            can not work with large amount of data at once.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.GraphicsUtils.DEF_FORMAT_FLAGS">
            <summary>
            Default flags for StringFormat instances.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.GraphicsUtils.m_bInitialized">
            <summary>
            Flag, that specifies, wheather all data is initialized.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.GraphicsUtils.Initialize">
            <summary>
            Initializes all needed data.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.GraphicsUtils.DefaultFormat">
            <summary>
            StringFormat instance used for drawing and measuring strings
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.GraphicsUtils.DefaultGraphics">
            <summary>
            Default graphics object.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.GraphicsUtils.LargeRectangle">
            <summary>
            Default lagre rectangle, used to measure and draw text without clipping.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.GraphicsUtils.MeasureString(System.String,System.Drawing.Font,System.Boolean,System.Drawing.Graphics,System.String)">
            <summary>
            Measures string and it`s everyone character.
            </summary>
            <param name="text">String, to be measured.</param>
            <param name="font">Font, the string will be drawn with.</param>
            <returns>TextInfo structure, which contains all information
            about string and it`s characters sizes.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.GraphicsUtils.#ctor">
            <summary>
            Hidden contructor.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint">
            <summary>
            Class that contains coordinates in
            two coordinate systems.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.m_point">
            <summary>
            Point in stream.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.m_line">
            <summary>
            Virtual line.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.m_column">
            <summary>
            Virtual column.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.m_parser">
            <summary>
            Parser.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.b_AttachToEvents">
            <summary>
            Value that indicates wether event handlers 
            should be attached to ParsePoint events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.AttachEvents">
            <summary>
            Attaches events to parsepoint and parser;
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.DetachEvents">
            <summary>
            Detaches events from parsepoint and parser;
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.SetPoint(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint)">
            <summary>
            Detaches events from old ParsePoint and attaches to new one.
            </summary>
            <param name="point">New ParsePoint.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.CheckParser">
            <summary>
            Checks parser availability.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.PointOffsetChanged(System.Object,Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            Tracks changes of ParsePoint's offset.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.PointDeleted(System.Object,System.EventArgs)">
            <summary>
            Detaches from the ParsePoint.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.UpdateVirtualCoordinates">
            <summary>
            Updates virtual coordinates using phisical position.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.UpdatePhisicalCoordinates">
            <summary>
            Updates phisical coordinates using virtual position.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.#ctor(Syncfusion.Windows.Forms.Edit.Interfaces.ILexemParser,Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates and initializes new class instance.
            </summary>
            <param name="parser">Lexem parser.</param>
            <param name="point">ParsePoint, coordinate point is associated to. Can be null.</param>
            <param name="line">Virtual line number.</param>
            <param name="column">Virtual column number.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.Finalize">
            <summary>
            Finalizer of the object.
            Simply calls Dispose method.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.Dispose">
            <summary>
            Disposer of the object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.Equals(System.Object)">
            <summary>
            Compares two <see cref="T:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint"/> instances
            by overrided == operator.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.GetHashCode">
            <summary>
            Generates hashcode to be used in hashtables.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.ToString">
            <summary>
            Gets string representation of the coordinate point.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.op_LessThan(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint)">
            <summary>
            
            </summary>
            <param name="leftPoint"></param>
            <param name="rightPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.op_GreaterThan(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint)">
            <summary>
            
            </summary>
            <param name="leftPoint"></param>
            <param name="rightPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.op_LessThanOrEqual(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint)">
            <summary>
            
            </summary>
            <param name="leftPoint"></param>
            <param name="rightPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.op_GreaterThanOrEqual(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint)">
            <summary>
            
            </summary>
            <param name="leftPoint"></param>
            <param name="rightPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.op_Equality(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint)">
            <summary>
            
            </summary>
            <param name="leftPoint"></param>
            <param name="rightPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.op_Inequality(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint)">
            <summary>
            
            </summary>
            <param name="leftPoint"></param>
            <param name="rightPoint"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.PhysicalPoint">
            <summary>
            Link to point to stream.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.VirtualLine">
            <summary>
            Virtual line (Visible line on the screen).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.VirtualColumn">
            <summary>
            Virtual column (Visible column on the screen).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.Parser">
            <summary>
            Parser, coordinates belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.IsValid">
            <summary>
            Checks wheather coordinate point is valid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.AttachToEvents">
            <summary>
            Gets or Sets value that indicates wether coordinate 
            point should handle changing of the position of ParsePoint.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint.Deleted">
            <summary>
            Event, that is raised when ParsePoint, the point is attached to, is deleted.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Utils.AdditionalFormatting">
            <summary>
            Structure used to keep one dynamic formatting.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.AdditionalFormatting.StartLetterIndex">
            <summary>
            Index of the first letter in formatted range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.AdditionalFormatting.EndLetterIndex">
            <summary>
            Index of the last letter in formatted range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.AdditionalFormatting.Format">
            <summary>
            Format, that will be applied to the range.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Utils.TextDrawInfo">
            <summary>
            Structure, used to keep information, used for drawing of text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.TextDrawInfo.Text">
            <summary>
            Text, to be drawn.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.TextDrawInfo.DrawRectangle">
            <summary>
            Rectangle, where it must be drawn.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.TextDrawInfo.VerticalAlignment">
            <summary>
            Vertical alignment of the text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.TextDrawInfo.DynamicFormattings">
            <summary>
            Array of the dynamic formattings, applied to the range.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Utils.CharInfo">
            <summary>
            Structure, used to keep information about one char in the word.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.CharInfo.Char">
            <summary>
            Char, the information is about.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.CharInfo.CharWidth">
            <summary>
            Width of the char.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.CharInfo.CharLeft">
            <summary>
            Left position of the char.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Utils.TextInfo">
            <summary>
            Structure, that keeps information about measured text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.TextInfo.Characters">
            <summary>
            Array of characters info.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.TextInfo.Width">
            <summary>
            Width of the entire string.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.TextInfo.Height">
            <summary>
            Height of the string.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.TextInfo.Length">
            <summary>
            Count of caracters in string.
            User to calculate position.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.TextInfo.TextDrawOffset">
            <summary>
            Offset of the first character.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Utils.TextRange">
            <summary>
            Range of the text.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Utils.ITextRange">
            <summary>
            Interface for accessing textrange.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.ITextRange.Start">
            <summary>
            Start of the range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.ITextRange.End">
            <summary>
            End of the range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.ITextRange.Top">
            <summary>
            Top of the range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.ITextRange.Bottom">
            <summary>
            Bottom of the range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.TextRange.m_Start">
            <summary>
            Start of the range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.TextRange.m_End">
            <summary>
            End of the range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.TextRange.Start">
            <summary>
            Start of the range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.TextRange.End">
            <summary>
            End of the range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.TextRange.Top">
            <summary>
            Top of the range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.TextRange.Bottom">
            <summary>
            Bottom of the range.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Utils.LongOperation">
            <summary>
            Identifier of the long-runnign process.
            Counting startson it`s creation and stopped on call of Dispose method.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.LongOperation.m_id">
            <summary>
            Unique identifier of the counter.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.LongOperation.m_startTime">
            <summary>
            Start time of the counter.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.LongOperation.m_bRunning">
            <summary>
            Sing of activity.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.LongOperation.m_Name">
            <summary>
            Name of the operation.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.LongOperation.m_parent">
            <summary>
            Parent, who initiated this process.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.LongOperation.Stop">
            <summary>
            Stops operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.LongOperation.#ctor(Syncfusion.Windows.Forms.Edit.Interfaces.ILongOperationControllerInternal,System.String)">
            <summary>
            Creates new instance of LongOperation and initializes it`s start time and running state.
            </summary>
            <param name="name">Name of the operation.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.LongOperation.Dispose">
            <summary>
            Stops operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.LongOperation.ID">
            <summary>
            GET ID of the operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.LongOperation.RunningTime">
            <summary>
            GET time of operation activity.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.LongOperation.Name">
            <summary>
            GET name of the operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.LongOperation.IsRunning">
            <summary>
            GET sing wheather operation is running now.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.POINT.#ctor(System.Int32)">
            <summary>
            Point creation from lParam `s data
            </summary>
            <param name="lParam"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Utils.ScrollerConst">
            <summary>
            Scroller constants.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.ScrollerConst.Horizontal">
            <summary>
            SB_HORZ
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.ScrollerConst.Vertical">
            <summary>
            SB_VERT
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.ScrollerConst.Control">
            <summary>
            SB_CTL
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.ScrollerConst.Both">
            <summary>
            SB_BOTH
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.ScrollCommands.LineUp">
            <summary>
            SB_LINEUP
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.ScrollCommands.LineDonw">
            <summary>
            SB_LINEDOWN
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.ScrollCommands.PageUp">
            <summary>
            SB_PAGEUP
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.ScrollCommands.PageDown">
            <summary>
            SB_PAGEDOWN
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.ScrollCommands.ThumbPosition">
            <summary>
            SB_THUMBPOSITION
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.ScrollCommands.ThumbTrack">
            <summary>
            SB_THUMBTRACK
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.ScrollCommands.Top">
            <summary>
            SB_TOP
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.ScrollCommands.Bottom">
            <summary>
            SB_BOTTOM
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.ScrollCommands.EndScroll">
            <summary>
            SB_ENDSCROLL
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.ScrollCommands.LineLeft">
            <summary>
            SB_LINELEFT
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.ScrollCommands.LineRight">
            <summary>
            SB_LINERIGHT
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.ScrollCommands.PageLeft">
            <summary>
            SB_PAGELEFT
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.ScrollCommands.PageRight">
            <summary>
            SB_PAGERIGHT
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.ScrollCommands.Left">
            <summary>
            SB_LEFT
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.ScrollCommands.Right">
            <summary>
            SB_RIGHT
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Utils.ToolTipsDelays">
            <summary>
            Type of the dalay of the tooltip.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Utils.ToolTipStyles">
            <summary>
            Styles of the tooltip.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Utils.DrawTextFormatFlags">
            <summary>
            Flags, used to specify formatting of the string.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Utils.CaretAPI">
            <summary>
            Summary description for Native.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CaretAPI.#ctor">
            <summary>
            Hide default constructor
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CaretAPI.CreateCaret(System.IntPtr,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            The CreateCaret function creates a new shape for the system caret and assigns
            ownership of the caret to the specified window. The caret shape can be a line,
            a block, or a bitmap.
            </summary>
            <param name="handle">[in] Handle to the window that owns the caret.</param>
            <param name="hBitmap">[in] Handle to the bitmap that defines the caret shape.
            If this parameter is NULL, the caret is solid. If this parameter is
            (HBITMAP) 1, the caret is gray. If this parameter is a bitmap handle,
            the caret is the specified bitmap. The bitmap handle must have been created
            by the CreateBitmap, CreateDIBitmap, or LoadBitmap function. If hBitmap is
            a bitmap handle, CreateCaret ignores the nWidth and nHeight parameters;
            the bitmap defines its own width and height.</param>
            <param name="nWidth">in] Specifies the width of the caret in logical units.
            If this parameter is zero, the width is set to the system-defined window
            border width. If hBitmap is a bitmap handle, CreateCaret ignores this parameter
            </param>
            <param name="nHeight">[in] Specifies the height, in logical units, of the
            caret. If this parameter is zero, the height is set to the system-defined
            window border height. If hBitmap is a bitmap handle, CreateCaret ignores
            this parameter</param>
            <returns>If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero. To get extended
            error information, call GetLastError.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CaretAPI.DestroyCaret">
            <summary>
            The DestroyCaret function destroys the caret's current shape,
            frees the caret from the window, and removes the caret from the screen.
            </summary>
            <returns>If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero. To get extended
            error information, call GetLastError. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CaretAPI.GetCaretBlinkTime">
            <summary>
            Returns the time required to invert the caret's pixels. The user can set this value.
            </summary>
            <returns>If the function succeeds, the return value is the blink time, in milliseconds.
            If the function fails, the return value is zero. To get extended
            error information, call GetLastError. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CaretAPI.GetCaretPos(Syncfusion.Windows.Forms.Edit.Utils.POINT@)">
            <summary>
            The GetCaretPos function copies the caret's position to the specified POINT structure
            </summary>
            <param name="point">[out] Pointer to the POINT structure that is
            to receive the client coordinates of the caret.
            </param>
            <returns>If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero. To get extended
            error information, call GetLastError. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CaretAPI.HideCaret(System.IntPtr)">
            <summary>
            The HideCaret function removes the caret from the screen.
            Hiding a caret does not destroy its current shape or
            invalidate the insertion point.
            </summary>
            <param name="handle">[in] Handle to the window that owns
            the caret. If this parameter is NULL, HideCaret searches
            the current task for the window that owns the caret. </param>
            <returns>If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero. To get extended
            error information, call GetLastError. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CaretAPI.SetCaretBlinkTime(System.Int32)">
            <summary>
            Sets the caret blink time to the specified number of milliseconds.
            The blink time is the elapsed time, in milliseconds, required to
            invert the caret's pixels.
            </summary>
            <param name="wMSeconds">[in] Specifies the new blink time, in milliseconds.</param>
            <returns>If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero. To get extended
            error information, call GetLastError. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CaretAPI.SetCaretPos(System.Int32,System.Int32)">
            <summary>
            moves the caret to the specified coordinates. If the window that owns
            the caret was created with the CS_OWNDC class style, then the specified
            coordinates are subject to the mapping mode of the device context
            associated with that window
            </summary>
            <param name="x">[in] Specifies the new x-coordinate of the caret.</param>
            <param name="y">[in] Specifies the new y-coordinate of the caret.</param>
            <returns>If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero. To get extended
            error information, call GetLastError. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CaretAPI.ShowCaret(System.IntPtr)">
            <summary>
            Makes the caret visible on the screen at the caret's current position.
            When the caret becomes visible, it begins flashing automatically
            </summary>
            <param name="handle">[in] Handle to the window that owns the caret.
            If this parameter is NULL, ShowCaret searches the current task for
            the window that owns the caret.</param>
            <returns>If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero. To get extended
            error information, call GetLastError. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.CaretAPI.GetLastError">
            <summary>
            Retrieves the calling thread's last-error code value.
            The last-error code is maintained on a per-thread basis.
            Multiple threads do not overwrite each other's last-error code.
            </summary>
            <returns>The return value is the calling thread's last-error code value.
            Functions set this value by calling the SetLastError function.
            The Return Value section of each reference page notes the
            conditions under which the function sets the last-error code.
            </returns>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.GdiCaret.m_parent">
            <summary>
            Parent control
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.GdiCaret.m_visible">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.GdiCaret.m_blinkTime">
            <summary>
            Blink time
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.GdiCaret.m_position">
            <summary>
            Position of the caret in parent window
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Utils.GdiCaret.m_bDisposed">
            <summary>
            is class disposed before or not
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.GdiCaret.Parent">
            <summary>
            Parent of the caret
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.GdiCaret.BlinkTime">
            <summary>
            GET, SET the elapsed time, in milliseconds, required to invert the caret.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.GdiCaret.Position">
            <summary>
            Position of caret in client coordinates
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.GdiCaret.Visible">
            <summary>
            GET, SET visibility of the control`s carret
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.GDIAppi.DrawText(System.IntPtr,System.String,System.Int32,Syncfusion.Windows.Forms.Edit.Utils.RECT@,Syncfusion.Windows.Forms.Edit.Utils.DrawTextFormatFlags)">
            <summary>
            The DrawText function draws formatted text in the specified rectangle.
            It formats the text according to the specified method
            (expanding tabs, justifying characters, breaking lines, and so forth).
            </summary>
            <param name="hdc">Handle to the device context.</param>
            <param name="lpString">Pointer to the string that specifies the text to be drawn. If the nCount parameter is –1, the string must be null-terminated.</param>
            <param name="nCount"> Specifies the length of the string.</param>
            <param name="lpRect">Pointer to a RECT structure that contains the rectangle
            (in logical coordinates) in which the text is to be formatted.</param>
            <param name="uFormat">Specifies the method of formatting the text. </param>
            <returns>0, if fails.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.GDIAppi.GetTextExtentPoint32(System.IntPtr,System.String,System.Int32,Syncfusion.Windows.Forms.Edit.Utils.SIZE@)">
            <summary>
            Computes the width and height of the specified string of text.
            </summary>
            <param name="hdc">Handle to the device context.</param>
            <param name="lpString">Pointer to a buffer that specifies the text string.</param>
            <param name="cbString">Specifies the length of the lpString buffer.</param>
            <param name="lpSize">Pointer to a SIZE structure that receives the dimensions of the string, in logical units. </param>
            <returns>0, if fails.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.GDIAppi.SelectObject(System.IntPtr,System.IntPtr)">
            <summary>
            Selects an object into the specified device context (DC). The new object replaces the previous object of the same type.
            </summary>
            <param name="hdc">Handle to the DC.</param>
            <param name="newObject">Handle to the object to be selected.</param>
            <returns>If the selected object is not a region and the function succeeds,
            the return value is a handle to the object being replaced.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.WinAPI.SendMessage(System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sends windows message to window.
            </summary>
            <param name="hWnd"></param>
            <param name="msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.ScrollApi.SetScrollPos(System.IntPtr,Syncfusion.Windows.Forms.Edit.Utils.ScrollerConst,System.Int32,System.Boolean)">
            <summary>
            Setups scroller to specified position.
            </summary>
            <param name="hWnd">Handle of the scrollable window (or control).</param>
            <param name="bar">Type of scrollbar to be scrolled.</param>
            <param name="nPosition">New position of the scroller.</param>
            <param name="bRedraw"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Utils.TimeCounter">
            <summary>
            The most accurate time counter.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.TimeCounter.Start">
            <summary>
            Starts counting.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.Utils.TimeCounter.Finish">
            <summary>
            Stops counting.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.Utils.TimeCounter.Result">
            <summary>
            Result of the timer.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.CustomSnippetDrawEventArgs">
            <summary>
            This class sends messages to the event handlers. It contains all information needed
            for rendering and controlling the drawing process.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.CustomSnippetDrawEventArgs.m_format">
            <summary>
            Stoarge of Format property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.CustomSnippetDrawEventArgs.m_text">
            <summary>
            Storage of Snippet property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.CustomSnippetDrawEventArgs.m_bSkipDefault">
            <summary>
            Storage of SkipDefaultDrawing property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.CustomSnippetDrawEventArgs.m_textInfo">
            <summary>
            Storage for the result of measuring.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.CustomSnippetDrawEventArgs.m_bMeasure">
            <summary>
            A flag that specifies whether the user has to Draw text or just Measure.
            Measuring is not needed if drawing is performed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.CustomSnippetDrawEventArgs.#ctor(System.Windows.Forms.PaintEventArgs,Syncfusion.Windows.Forms.Edit.Interfaces.ISnippetFormat,System.String,System.Boolean)">
            <summary>
            Second helper constructor
            </summary>
            <param name="args"></param>
            <param name="format">Default Format used for rendering</param>
            <param name="text">Text which must be rendered</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.CustomSnippetDrawEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Edit.Interfaces.ISnippetFormat,System.String,System.Boolean)">
            <summary>
            Main constructor
            </summary>
            <param name="g">Graphics object used for rendering</param>
            <param name="rc">Destination rectangle</param>
            <param name="format">Default Format used for rendering</param>
            <param name="text">Text which must be rendered</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.CustomSnippetDrawEventArgs.Measure">
            <summary>
            A flag that specifies whether the user has to Draw text or just Measure.
            Measuring is not needed if drawing is performed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.CustomSnippetDrawEventArgs.MeasuringResult">
            <summary>
            Result of measuring.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.CustomSnippetDrawEventArgs.Format">
            <summary>
            Format which will be used by default renderer. This format can be
            changed by user to influence the default renderer.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.CustomSnippetDrawEventArgs.Text">
            <summary>
            Gets the Text which will be sent to the renderer.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.CustomSnippetDrawEventArgs.SkipDefaultDrawing">
            <summary>
            If the user wishes to do his own drawing then he must set this flag to TRUE,
            otherwise default renderer will step on user work.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs.m_old">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs.m_new">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs.#ctor(System.Object,System.Object)">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs.newValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs.oldValue">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.BeforeValueChangedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.BeforeValueChangedEventArgs.m_name">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.BeforeValueChangedEventArgs.m_values">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.BeforeValueChangedEventArgs.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.BeforeValueChangedEventArgs.#ctor(System.String,Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.BeforeValueChangedEventArgs.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.BeforeValueChangedEventArgs.Values">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.TextChangedEventArgs">
            <summary>
            Arguments for the text changes event.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.TextChangedEventArgs.m_Text">
            <summary>
            Event`s text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.TextChangedEventArgs.m_StartLine">
            <summary>
            Virtual line of Insert/Delete start.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.TextChangedEventArgs.m_StartColumn">
            <summary>
            Virtual column of Insert/Delete start.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.TextChangedEventArgs.m_Type">
            <summary>
            Type of the event ( Insert/Delete ).
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.TextChangedEventArgs.#ctor(System.String,System.Int32,System.Int32,Syncfusion.Windows.Forms.Edit.Enums.TextChange)">
            <summary>
            Creates and initializes new instance of TextChangedEventArgs class.
            </summary>
            <param name="text">Event`s text.</param>
            <param name="iStartLine">Virtual line of Insert/Delete start.</param>
            <param name="iStartColumn">Virtual column of Insert/Delete start.</param>
            <param name="type">Type of the event ( Insert/Delete ).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.TextChangedEventArgs.Text">
            <summary>
            Event`s text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.TextChangedEventArgs.StartLine">
            <summary>
            Virtual line of Insert/Delete start.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.TextChangedEventArgs.StartColumn">
            <summary>
            Virtual column of Insert/Delete start.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.TextChangedEventArgs.Type">
            <summary>
            Type of the event ( Insert/Delete ).
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.SaveAsEventArgs">
            <summary>
            Filename and operation canceling.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.SaveAsEventArgs.FileName">
            <summary>
            Returned filename.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.SaveAsEventArgs.Cancel">
            <summary>
            If true, operation will be canceled.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.DrawLineMarkEventArgs">
            <summary>
            Arguments for DrawLineMarkEventHandler.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.DrawLineMarkEventArgs.PhysicalLine">
            <summary>
            Virtual line number.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.DrawLineMarkEventArgs.VirtualLine">
            <summary>
            Physical line number.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.DrawLineMarkEventArgs.MarkRect">
            <summary>
            Rectangle where linemark should be drawn.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.DrawLineMarkEventArgs.Graphics">
            <summary>
            Graphics object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.DrawLineMarkEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            Creates and initializes instance of the PaintLineMarkEventArgs class.
            </summary>
            <param name="graphics">Graphics objects where user has to draw line marks.</param>
            <param name="markRect">Rectangle where line mark should be drawn.</param>
            <param name="iVirtualLine">Virtual number of the line.</param>
            <param name="iPhysicalLine">Physical number of the line.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.ContextPromptOpenEventArgs">
            <summary>
            Arguments for ContextPromptOpenEventHandler.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.ContextPromptOpenEventArgs.m_list">
            <summary>
            List of the context prompts. 
            List can contain any objects with overidden ToString() method.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ContextPromptOpenEventArgs.#ctor">
            <summary>
            Creates a new instance of 
            ContextPromptOpenEventArgs class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ContextPromptOpenEventArgs.AddPrompt(System.Object,System.Object)">
            <summary>
            Adds a new prompt to the list of the prompts.
            </summary>
            <param name="textInBold">Text that will be shown in bold on the header line.</param>
            <param name="textDescription">Description text.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ContextPromptOpenEventArgs.List">
            <summary>
            Gets collection of DictionaryItems.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.ContextPromptCloseEventArgs">
            <summary>
            Arguments for ContextPromptCloseEventHandler.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.ContextPromptCloseEventArgs.SelectedItem">
            <summary>
            List of the context prompts.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.ContextPromptCloseEventArgs.Canceled">
            <summary>
            Shows if opening of the context prompt is allowed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ContextPromptCloseEventArgs.#ctor(System.Object,System.Boolean)">
            <summary>
            Creates and initializes new instance of the 
            ContextPromptCloseEventArgs class.
            </summary>
            <param name="selected">Selected item.</param>
            <param name="canceled">True if selection was canceled by user.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.TextChangingEventArgs">
            <summary>
            Arguments for TextChangingEventHandler.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.TextChangingEventArgs.m_bCancel">
            <summary>
            Specifies whether text change has been canceled.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.TextChangingEventArgs.#ctor(System.String,System.Int32,System.Int32,Syncfusion.Windows.Forms.Edit.Enums.TextChange)">
            <summary>
            Creates and initializes new instance of TextChangingEventArgs class.
            </summary>
            <param name="text">Event`s text.</param>
            <param name="iStartLine">Virtual line of Insert/Delete start.</param>
            <param name="iStartColumn">Virtual column of Insert/Delete start.</param>
            <param name="type">Type of the event ( Insert/Delete ).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.TextChangingEventArgs.Cancel">
            <summary>
            Gets or Sets whether text change has been canceled.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.ContextChoiceItemSelectedEventArgs">
            <summary>
            Event arguments for ContextChoiceItemSelectedEventHandler.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.ContextChoiceItemSelectedEventArgs.m_index">
            <summary>
            Index of the selected item.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.ContextChoiceItemSelectedEventArgs.m_item">
            <summary>
            Selected item itself.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ContextChoiceItemSelectedEventArgs.#ctor(System.Int32,Syncfusion.Windows.Forms.Edit.Dialogs.ContextChoiceItem)">
            <summary>
            Creates and initializes new instance of ContextChoiceItemSelectedEventArgs 
            with selected item and it`s index.
            </summary>
            <param name="index">Index of the selected item.</param>
            <param name="item">Selected item itself.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ContextChoiceItemSelectedEventArgs.ItemIndex">
            <summary>
            Get selected item index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ContextChoiceItemSelectedEventArgs.SelectedItem">
            <summary>
            Get selected item.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.ContextPromptSelectionChangedEventArgs">
            <summary>
            Event arguments for ContextPromptSelectionChangedEventHandler.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.ContextPromptSelectionChangedEventArgs.m_list">
            <summary>
            List of the context prompts. 
            List can contain any objects with overidden ToString() method.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.ContextPromptSelectionChangedEventArgs.m_iSelectedIndex">
            <summary>
            Selected prompt.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ContextPromptSelectionChangedEventArgs.#ctor(System.Collections.ICollection,System.Int32)">
            <summary>
            Creates a new instance of 
            ContextPromptOpenEventArgs class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ContextPromptSelectionChangedEventArgs.List">
            <summary>
            Gets collection of DictionaryItems.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ContextPromptSelectionChangedEventArgs.SelectedIndex">
            <summary>
            Get index of the currently selected item in prompts list.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.LongOperationEventHandler">
            <summary>
            Delegate for events, connected with long operations.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.CustomSnippetDrawEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.ValueChangedEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.BeforeValueChangeEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.ParsePointHandler">
            <summary>
            Delegate used for processing events, connected with ParsePoints
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.ParsePointChangeHandler">
            <summary>
            Delagate used for processing events, connected with changes of data in ParsePoint.
            Example: change of line, position, tag, offset
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.TextChangedEventHandler">
            <summary>
            Delegate for events, raised on text changes in <see cref="!:LexemParser"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.TextChangingEventHandler">
            <summary>
            Delegate for events, raised before text changes.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.ProcessCommandEventHandler">
            <summary>
            Delegate for ProcessKey events.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.ProcessCommandsEventHandler">
            <summary>
            Delegate for ProcessKey events.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.ContextChoiceEventHandler">
            <summary>
            Delegate for event, connected with ContextChoice form.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.SaveAsEventHandler">
            <summary>
            Delegate for SaveAs events.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.DrawLineMarkEventHandler">
            <summary>
            Delegate for events, raised when LineMark should be drawn.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.ContextPromptOpenEventHandler">
            <summary>
            Delegate for events related with showing of the context prompt.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.ContextPromptCloseEventHandler">
            <summary>
            Delegate for events related with closing of the context prompt.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.ContextChoiceItemSelectedEventHandler">
            <summary>
            Delegate for ItemSelected event of the context choice list.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.ContextPromptSelectionChangedEventHandler">
            <summary>
            Delegate for SelectedPromptChanged event of the context prompt list.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Enums.DuplicatesOptions">
            <summary>
            Type of the appending of new configuration
            with duplicated items to the existing one.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.DuplicatesOptions.SkipDuplicates">
            <summary>
            If language configuration exists in current configuration,
            new configuration will not be added.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.DuplicatesOptions.OverwriteDuplicates">
            <summary>
            If language configuration exists in current configuration,
            it will be deleted and new configuration will be added.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.DuplicatesOptions.DuplicatesNotAllowed">
            <summary>
            If language configuration exists in current configuration,
            exception will be raised.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.DuplicatesOptions.MergeDuplicates">
            <summary>
            If language configuration exists in current configuration,
            new configuration will be merged with it. New configuration
            has higher priority and will overwrite old settings.
            Usefull to redefine coloring.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Enums.ModifierKeyState">
            <summary>
            Enumeration of the states of modifier key.
            Used in <seealso cref="!:Syncfusion.Windows.Forms.Edit.KeyHandler"/>  class.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.ModifierKeyState.Indifferent">
            <summary>
            State of the modifier key is not checked.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.ModifierKeyState.Pressed">
            <summary>
            Modifier key must be pressed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.ModifierKeyState.Unpressed">
            <summary>
            Modifier key must be not pressed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Enums.UnderlineStyle">
            <summary>
            Underline styles of snippet
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.UnderlineStyle.None">
            <summary>
            No underline
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.UnderlineStyle.Solid">
            <summary>
            One line under snippet text
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.UnderlineStyle.DashDot">
            <summary>
            dash-dot line style for snippet text
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.UnderlineStyle.Dot">
            <summary>
            dot line style for snippet text
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.UnderlineStyle.Dash">
            <summary>
            dash line style for snippet text
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.UnderlineStyle.Wave">
            <summary>
            Wave line style for snippet text
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Enums.UnderlineWeight">
            <summary>
            Weight of the underline.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.UnderlineWeight.Thick">
            <summary>
            1px line
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.UnderlineWeight.Bold">
            <summary>
            2px line
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.UnderlineWeight.Double">
            <summary>
            drawing two lines in 1px weight with background color delimiter in 1px.
            Line needs 3px for drawing.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.UnderlineWeight.DoubleBold">
            <summary>
            each line takes 2 px. Lines needs 6px for drawing.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Enums.FormatType">
            <summary>
            in enum are default types supported by control render
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.FormatType.Text">
            <summary>
            default text drawing format
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.FormatType.SelectedText">
            <summary>
            Selected text format
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.FormatType.InactiveSelectedText">
            <summary>
            Selected text drawing when window which hol control loose focus
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.FormatType.Error">
            <summary>
            display part of text in error color
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.FormatType.Bookmark">
            <summary>
            special bookmark formatting
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.FormatType.EnabledBreakPoint">
            <summary>
            display line of code as is on it set breakpoint
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.FormatType.DisabledBreakPoint">
            <summary>
            disabled breakpoint look and feel
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.FormatType.WrongBreakPoint">
            <summary>
            Breakpoint placed in wrong location
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.FormatType.CurrentStatement">
            <summary>
            Current cursor position
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.FormatType.CollapsedText">
            <summary>
            Text of collapsed region caption
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.FormatType.ReadOnlyRegion">
            <summary>
            Read only parts of text. Text marked in colors which say to user
            that code can not be edited
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.FormatType.WizardCode">
            <summary>
            Special code which generated automatically by enviroment can be
            assigned to this format
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.FormatType.Comment">
            <summary>
            Comment in parsed language
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.FormatType.Operator">
            <summary>
            operators and punctuators symbols
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.FormatType.KeyWord">
            <summary>
            keyword of language
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.FormatType.PreprocessorKeyword">
            <summary>
            keyword which does not belong to language directly, and used by pre-processing
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.FormatType.String">
            <summary>
             strings  - "this is string"
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.FormatType.SingleCharacter">
            <summary>
            One charecter symbols
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.FormatType.URI">
            <summary>
            Unique resource ientifier, mostly used for web URL and e-mails
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.FormatType.Number">
            <summary>
            number value in integer or float format
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.FormatType.Whitespace">
            <summary>
            Whitespace and tabs
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.FormatType.Custom">
            <summary>
            All other formats which can not be identified directly by control
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Enums.KnownParsers">
            <summary>
            Parsers supported by control
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.KnownParsers.CSharp">
            <summary>
            these parsers we'll give to customer
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.KnownParsers.CPP">
            <summary>
            C++ language parser
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.KnownParsers.Delphi">
            <summary>
            Delphi language parser
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.KnownParsers.Text">
            <summary>
            default text parser (detect URIs in text)
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.KnownParsers.Custom">
            <summary>
            Indicate that parser is implemented by user and control use it
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Enums.SearchAttributes">
            <summary>
            Indicates different additional features for searching text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.SearchAttributes.Unknown">
            <summary>
            Unknown feature.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.SearchAttributes.MatchCase">
            <summary>
            Mathes case in searching.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.SearchAttributes.MatchWholeWord">
            <summary>
            Finds only whole word.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.SearchAttributes.SearchHidden">
            <summary>
            Searches in hidden text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.SearchAttributes.SearchUp">
            <summary>
            Searches in up direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.SearchAttributes.UseRegexp">
            <summary>
            Uses Regular expressions for searching.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Enums.SearchType">
            <summary>
            Indicates type of searching.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.SearchType.Unknown">
            <summary>
            Unknown type of searching.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.SearchType.FindNext">
            <summary>
            Find next word.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.SearchType.MarkAll">
            <summary>
            Mark all found words.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.Enums.TextChange">
            <summary>
            Type of the action on text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.TextChange.Inserted">
            <summary>
            Text was inserted.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.TextChange.Deleted">
            <summary>
            Text was deleted.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.Enums.TextChange.Changed">
            <summary>
            Text was changed.
            </summary>
        </member>
        <member name="T:Syncfusion.EditWindowsAssembly">
            <summary>
            This class holds the name of the Syncfusion.Edit.Windows assembly and provides a helper 
            routine that helps with resolving types when loading a serialization stream and when 
            the framework probes for assemblies by reflection. 
            </summary>
        </member>
        <member name="F:Syncfusion.EditWindowsAssembly.Name">
            <summary>
            The full name of this assembly without version information: "Syncfusion.Edit.Windows"
            </summary>
        </member>
        <member name="F:Syncfusion.EditWindowsAssembly.Assembly">
            <summary>
            A reference to the <see cref="T:System.Reflection.Assembly"/> for the grid assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.EditWindowsAssembly.RootNamespace">
            <summary>
            The root namespace of this assembly. Used internally for locating resources within the assembly.
            </summary>
        </member>
        <member name="M:Syncfusion.EditWindowsAssembly.AssemblyResolver(System.Object,System.ResolveEventArgs)">
            <summary>
            This delegate helps with resolving types and can be used as a eventhandler
            for a <see cref="E:System.AppDomain.AssemblyResolve"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data with information about the type.</param>
            <returns>A reference to the assembly where the type is located.</returns>
            <remarks>
            Use this handler when reading back types from a serialization stread
            saved with an earlier version of this assembly.
            </remarks>
            <example>
            <code lang="C#">
            		public static GridModel LoadSoap(Stream s)
            		{
            			try
            			{
            				AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(GridAssembly.AssemblyResolver);
            				SoapFormatter b = new SoapFormatter();
            				b.AssemblyFormat = FormatterAssemblyStyle.Simple;
            				GridModel t = b.Deserialize(s) as GridModel;
            				t.Modified = false;
            				return t;
            			}
            			finally
            			{
            				AppDomain.CurrentDomain.AssemblyResolve -= new ResolveEventHandler(GridAssembly.AssemblyResolver);
            			}
            		}
            
            </code>
            </example>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.EditControl">
            <summary>
            Summary description for EditControl.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.EditControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.EditControl.borderStyle">
            <summary>
            Border style
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.EditControl.m_timerUpdateWordWrap">
            <summary>
            Timer, that is used for remeasuring text in word-wrap mode.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ShouldSerializeText">
            <summary>
            Tells designer to serialize Text property.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ResetText">
            <summary>
            Resets text property value.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.LoadConfig(System.String,System.String)">
            <summary>
            Reads configuration from file.
            </summary>
            <param name="fileName">Name of the file with configuration.</param>
            <param name="currentFilePath">Name of the file that is currently loaded, or empty string.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ResetColoring(Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage)">
            <summary>
            Reset`s parser.
            </summary>
            <param name="lang">New language configuration to be set.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.LoadStream(System.IO.Stream)">
            <summary>
            Load file and configuration for it.
            </summary>
            <param name="stream">Name of the file to load.</param>
            <returns>True, if user has not canceled loading, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.LoadStream(System.IO.Stream,Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage)">
            <summary>
            Load file and configuration for it.
            </summary>
            <param name="stream">Name of the file to load.</param>
            <returns>True, if user has not canceled loading, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.New">
            <summary>
            Creates empty stream and makes editor to edit it.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.New(Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage)">
            <summary>
            Creates empty stream and makes editor to edit it.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.SaveToStream">
            <summary>
            Flushes changes to the current stream.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.SaveToStream(System.IO.Stream)">
            <summary>
            Saves data from current stream to the specified one.
            </summary>
            <param name="stream">Output stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.DiscardChanges">
            <summary>
            Discards all unsaved changes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.GetRealCursorPosition">
            <summary>
            Returns current ParsePoint.
            </summary>
            <returns>IParsePoint with current position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.GetLineText(System.Int32)">
            <summary>
            Gets text of the specified line.
            </summary>
            <param name="iLineIndex">Line index.</param>
            <returns>Text of the line.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.GetLine(System.Int32)">
            <summary>
            Gets line's instance.
            </summary>
            <param name="iLineIndex">Index of the line.</param>
            <returns>Instance of the line.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.AppendText(System.String)">
            <summary>
            Appends text.
            </summary>
            <param name="text">The text to be appended.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.InsertText(System.Int32,System.Int32,System.String)">
            <summary>
            Inserts text in the given position.
            </summary>
            <param name="line">Line in virtual coordinates where text should be inserted.</param>
            <param name="column">Column in virtual coordinates where text should be inserted.</param>
            <param name="text">Text to be inserted.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.GetCurrentWord">
            <summary>
            Gets word under cursor.
            </summary>
            <returns>Lexem under cursor.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.GetCurrentWordColumn">
            <summary>
            Gets column where current word starts.
            </summary>
            <returns>Index of the column of the word start.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.FindRegex(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint,System.Text.RegularExpressions.Regex,System.Boolean)">
            <summary>
            Looks for specified expression in text.
            </summary>
            <param name="start">Start position for the search.</param>
            <param name="expression">Expression to be found.</param>
            <param name="bSearchInCollapsed">Flag, that specifies whether text can be found in collapsed region.</param>
            <returns>Search results.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.MarkSearchResult(Syncfusion.Windows.Forms.Edit.Implementation.IO.FindResult)">
            <summary>
            Marks search result and sets cursor to the end of the selection.
            </summary>
            <param name="result">Find result that must be marked.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.SetCustomBookmark(System.Int32,System.Windows.Forms.PaintEventHandler)">
            <summary>
            Creates custom bookmark for the specified line.
            </summary>
            <param name="iLine">Physical line index.</param>
            <param name="painter">Paint handler.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.RemoveCustomBookmark(System.Int32,System.Windows.Forms.PaintEventHandler)">
            <summary>
            Removes custom bookmark from the specified line.
            </summary>
            <param name="iLine">Physical line index.</param>
            <param name="painter">Paint handler.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.UndoGroupOpen">
            <summary>
            Opens undo group. All futher text changes can be undone with open undo operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.UndoGroupClose">
            <summary>
            Saves and closes undo group.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.UndoGroupCancel">
            <summary>
            Cancels undo grouping.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.CollapseAll">
            <summary>
            Collapses all collapsible regions.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ExpandAll">
            <summary>
            Expands all collapsed regions.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.Collapse">
            <summary>
            Collapses all collapsible regions in currently selected area or in the current line.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.Expand">
            <summary>
            Expands all collapsed regions in currently selected area or in the current line.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.PointToVirtualPosition(System.Drawing.Point)">
            <summary>
            Converts point in client coordinates to the
            virtual position in text.
            </summary>
            <param name="point">Point in client coordinates.</param>
            <returns>Virtual position in the text.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.PointToVirtualPosition(System.Drawing.Point,System.Boolean)">
            <summary>
            Converts point in client coordinates to the
            virtual position in text.
            </summary>
            <param name="point">Point in client coordinates.</param>
            <param name="bUseScrollers">Specifies wether scrollers information should be used.</param>
            <returns>Virtual position in the text.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.PointToPhysicalPosition(System.Drawing.Point)">
            <summary>
            Converts point in client coordinates to the
            phisical position in text.
            </summary>
            <param name="point">Point in client coordinates.</param>
            <returns>Physical position in the text.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ConvertVirtualPositionToPhysical(System.Drawing.Point)">
            <summary>
            Converts virtual coordinates to phisical.
            </summary>
            <param name="point">Point in virtual coordinates.</param>
            <returns>Point in phisical coordinates or (0,0) if given virtual position is not present in the stream.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ConvertVirtualPositionToOffset(System.Drawing.Point)">
            <summary>
            Converts virtual position in text to the offset in stream.
            </summary>
            <param name="point">Virtual position.</param>
            <returns>Offset in the file or stream or -1 if such virtual position is not present in stream.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ConvertOffsetToVirtualPosition(System.Int64)">
            <summary>
            Converts in-stream offset to virtual coordinates.
            </summary>
            <param name="offset">In-Stream offset.</param>
            <returns>Virtual position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.PrintCurrentPage">
            <summary>
            Prints current page on default printer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.PrintSelection">
            <summary>
            Prints selected area on default printer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.PrintNoDialog">
            <summary>
            Prints entire document on default printer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.Print">
            <summary>
            Shows print dialog and gives user ability to start printing.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.PrintPreview">
            <summary>
            Shows print preview dialog.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.PrintPages(System.Int32,System.Int32)">
            <summary>
            Prints pages range.
            </summary>
            <param name="startPageNumber">Start page in range.</param>
            <param name="endPageNumber">End page in range.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.SaveAsXML(System.String)">
            <summary>
            Saves document`s XML representation to the file.
            </summary>
            <param name="filename">Name of the file, the document should be saved to.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.SaveAsHTML(System.String)">
            <summary>
            Saves document`s HTML representation to the file.
            </summary>
            <param name="filename">Name of the file, the document should be saved to.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.SaveAsRTF(System.String)">
            <summary>
            Saves document`s RTF representation to the file.
            </summary>
            <param name="filename">Name of the file, the document should be saved to.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.LoadFile(System.String)">
            <summary>
            Load file and configuration for it.
            </summary>
            <param name="fileName">Name of the file to load.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.LoadFile">
            <summary>
            Shows open file dialog to user and opens selected file.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.Save">
            <summary>
            Saves text to file.
            </summary>
            <returns>True if file was successfully saved.
            False is returned only if user has cancelled saving somehow.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.SaveAs">
            <summary>
            Shows SaveAs dialog and saves data to specified file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.SaveFile(System.String)">
            <summary>
            Saves content to the specified file.
            </summary>
            <param name="fileName">Name of the file to which the text has to be saved.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.SaveModified">
            <summary>
            Prompts the user with a save dialog if the current
            file was modified and saves file if needed.
            </summary>
            <returns>False if file was changed but user
            decided not to save file, otherwise true.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.NewFile">
            <summary>
            Creates new empty file with default coloring.
            </summary>
            <returns>True if file was created, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.NewFile(Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage)">
            <summary>
            Creates new empty file with specified coloring.
            </summary>
            <param name="lang">Language to be used for text coloring.</param>
            <returns>True if file was created, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.MoveLeft">
            <summary>
            Moves cursor left, if possible.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.MoveUp">
            <summary>
            Move cursor up, if possible.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.MoveDown">
            <summary>
            Moves cursor down if possible.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.MoveRight">
            <summary>
            Moves cursor right if possible.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.MovePageUp">
            <summary>
            Moves caret one page up.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.MovePageDown">
            <summary>
            Moves caret one page down.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.MoveToLineEnd">
            <summary>
            Moves caret to the end of line
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.MoveToLineStart">
            <summary>
            Moves caret to the beginning of line.
            First whitespaces will be skipped.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.MoveLeftWord">
            <summary>
            Moves caret to left by one word, or to the beginning of the current.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.MoveRightWord">
            <summary>
            Moves caret to the right by one word.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.MoveToBeginning">
            <summary>
            Moves caret to the beginning of the file.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.MoveToEnd">
            <summary>
            Moves caret to the end of file.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.StartSelection">
            <summary>
            Start selection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.StopSelection">
            <summary>
            Stops selection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ResetSelection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ToggleInsertMode">
            <summary>
            Changes insert mode.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.Paste">
            <summary>
            Inserts text from clipboard.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.Copy">
            <summary>
            Copies selected text to clipboard.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.Cut">
            <summary>
            Copies selected text to clipboard and deletes it from text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.SelectionCancel">
            <summary>
            Removes selection and causes invalidation of the area, was selected.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.DeleteChar">
            <summary>
            Deletes one char to the right.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.DeleteWord">
            <summary>
            Deletes one word to the right.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.DeleteCharLeft">
            <summary>
            Deletes one char to the left.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.DeleteWordLeft">
            <summary>
            Deletes one word to the left.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.FindDialog">
            <summary>
            Shows Find dialog window.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.FindCurrentText">
            <summary>
            Searches text under cursor, or selected text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.FindNext">
            <summary>
            Searches text under cursor, or selected text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.GoToDialog">
            <summary>
            Shows Find dialog window.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ReplaceDialog">
            <summary>
            Shows Replace dialog window.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.SelectAll">
            <summary>
            Selects all text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.BindKeyboard">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.Undo">
            <summary>
            Undoes last operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.Redo">
            <summary>
            Undoes last operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.Refresh">
            <summary>
            Refreshes screen, frees up memory, deletes a lot of parsepoints.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.SwitchCollapsingOff">
            <summary>
            Turns off collapsings.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.SwitchCollapsingOn">
            <summary>
            Turns on collapsings and collapses all.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ToggleLineCollapsing">
            <summary>
            Toggles collapsing for current line.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ShowContextPrompt">
            <summary>
            Shows Context Prompt dialog.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ShowContextChoice">
            <summary>
            Shows auto complete dialog.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.BookmarkToggle">
            <summary>
            Sets bookmark to the current line.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.BookmarkClear">
            <summary>
            Clears all bookmarks.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.BookmarkNext">
            <summary>
            Goes to the next bookmark.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.BookmarkPrevious">
            <summary>
            Goes to the next bookmark.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ToggleIndexedBookmark1">
            <summary>
            Toggles bookmark with index 1.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ToggleIndexedBookmark2">
            <summary>
            Toggles bookmark with index 2.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ToggleIndexedBookmark3">
            <summary>
            Toggles bookmark with index 3.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ToggleIndexedBookmark4">
            <summary>
            Toggles bookmark with index 4.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ToggleIndexedBookmark5">
            <summary>
            Toggles bookmark with index 5.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ToggleIndexedBookmark6">
            <summary>
            Toggles bookmark with index 6.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ToggleIndexedBookmark7">
            <summary>
            Toggles bookmark with index 1.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ToggleIndexedBookmark8">
            <summary>
            Toggles bookmark with index 8.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ToggleIndexedBookmark9">
            <summary>
            Toggles bookmark with index 9.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ToggleIndexedBookmark0">
            <summary>
            Toggles bookmark with index 0.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.SwitchIndexedBookmark1">
            <summary>
            Switchs bookmark with index 1.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.SwitchIndexedBookmark2">
            <summary>
            Switchs bookmark with index 2.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.SwitchIndexedBookmark3">
            <summary>
            Switchs bookmark with index 3.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.SwitchIndexedBookmark4">
            <summary>
            Switchs bookmark with index 4.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.SwitchIndexedBookmark5">
            <summary>
            Switchs bookmark with index 5.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.SwitchIndexedBookmark6">
            <summary>
            Switchs bookmark with index 6.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.SwitchIndexedBookmark7">
            <summary>
            Switchs bookmark with index 1.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.SwitchIndexedBookmark8">
            <summary>
            Switchs bookmark with index 8.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.SwitchIndexedBookmark9">
            <summary>
            Switchs bookmark with index 9.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.SwitchIndexedBookmark0">
            <summary>
            Switchs bookmark with index 0.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ToggleShowingWhiteSpaces">
            <summary>
            Toggles showing of whitespaces.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.AddTabsToSelection">
            <summary>
            Adds leading tab symbol to the selected lines, or just inserts tab symbol.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.RemoveTabsFromSelection">
            <summary>
            Removes leading tab symbol (or it`s spaces equivalent) from selected lines.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ResetUndoInfo">
            <summary>
            Resets undo information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.RegisterUnderlineFormat(System.Drawing.Color,Syncfusion.Windows.Forms.Edit.Enums.UnderlineStyle,Syncfusion.Windows.Forms.Edit.Enums.UnderlineWeight)">
            <summary>
            Registers custom underline format, that can be used when setting region's underlining.
            </summary>
            <param name="color">Color of the underlining.</param>
            <param name="style">Style of the underlining.</param>
            <param name="weight">Weight of the underlining.</param>
            <returns>Newly created format.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.SetUnderline(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Interfaces.ISnippetFormat)">
            <summary>
            Sets underlining of the specified text region.
            </summary>
            <param name="pointStart">Starting point.</param>
            <param name="pointEnd">End point.</param>
            <param name="format">Format to be used.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.RemoveUnderline(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint)">
            <summary>
            Removes underlining in the specified region.
            </summary>
            <param name="pointStart">Starting point.</param>
            <param name="pointEnd">End point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.#ctor">
            <summary>
            Creates and initializes edit control.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.AttachToEvents">
            <summary>
            Attaches event reraisers to edit contorl.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.SaveCommand">
            <summary>
            Saves file.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.SaveAsCommand">
            <summary>
            SaveAs command.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.OpenCommand">
            <summary>
            Opens file.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.NewCommand">
            <summary>
            Creates new file.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ExchangeWithFake(Syncfusion.Windows.Forms.Edit.FakeEditControl)">
            <summary>
            Exchanges fake editor and real editor.
            </summary>
            <param name="senderFake"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ExchangeWithFake(Syncfusion.Windows.Forms.Edit.FakeEditControl,System.Drawing.Point)">
            <summary>
            Exchanges fake editor and real editor.
            </summary>
            <param name="senderFake"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.CalculateVerticalSplitterPosition(System.Int32)">
            <summary>
            Calculates position of the vertical splitter.
            </summary>
            <param name="iPosition">Original position.</param>
            <returns>Resulting position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.UpdateVerticalSplitters">
            <summary>
            Updates sizes of the vertical splitters.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.UpdateControlSize(System.Windows.Forms.Control)">
            <summary>
            Updates size of the control, based on the parent size.
            </summary>
            <param name="control">Control to be updated.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.ReAlignAll">
            <summary>
            Manualli realigns all controls.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            Changes drag effect to copy if some file is dragged
            over the control.
            </summary>
            <param name="drgevent"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            Inserts text from the dropped to the control file.
            </summary>
            <param name="drgevent"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.OnResize(System.EventArgs)">
            <summary>
                        </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.RegisterCommands(System.Object,System.EventArgs)">
            <summary>
            Registers additional commands for key-binder.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.RegisterBindings(System.Object,System.EventArgs)">
            <summary>
            Registers additional key-bindings.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.fakeEditControl2_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Switches between fake editor and real editor.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_Resize(System.Object,System.EventArgs)">
            <summary>
            Switches to non-zero-size editor.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_WordWrapChanged(System.Object,System.EventArgs)">
            <summary>
            Handles changes of WordWrapping.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.FakeEditorDragOver(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            Handles dragging over control.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.FakeEditorDragDrop(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            Handles dropping of the object to control.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_DragOver(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            Calls OnDragOver method.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_DragDrop(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            Calls OnDragDrop method.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_DragEnter(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            Calls OnDragEnter method.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_DragLeave(System.Object,System.EventArgs)">
            <summary>
            Calls OnDragLeave method.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.VerticalSplitterMoved(System.Object,System.Windows.Forms.SplitterEventArgs)">
            <summary>
            Reallignes all controls.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.VerticalSplitterMoving(System.Object,System.Windows.Forms.SplitterEventArgs)">
            <summary>
            Corrects position in wordwrap mode.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.MeasureTimerTick(System.Object,System.EventArgs)">
            <summary>
            Stops timer and remeasures text.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.BeginInit">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.EndInit">
            <summary>
            Initializes key bindings.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_ContextChoiceItemSelected(Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice,Syncfusion.Windows.Forms.Edit.ContextChoiceItemSelectedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_ContextPromptSelectionChanged(Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt,Syncfusion.Windows.Forms.Edit.ContextPromptSelectionChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_TextChanging(System.Object,Syncfusion.Windows.Forms.Edit.TextChangingEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_TextChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_SingleLineChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_MenuFill(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_UpdateContextToolTip(System.Object,Syncfusion.Windows.Forms.Edit.Dialogs.UpdateTooltipEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_ContextPromptClose(System.Object,Syncfusion.Windows.Forms.Edit.ContextPromptCloseEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_ContextPromptOpen(System.Object,Syncfusion.Windows.Forms.Edit.ContextPromptOpenEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_ContextPromptBeforeOpen(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_ContextChoiceClose(Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_ContextChoiceOpen(Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_ContextChoiceUpdate(Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_ContextChoiceBeforeOpen(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_DrawLineMark(System.Object,Syncfusion.Windows.Forms.Edit.DrawLineMarkEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_LanguageChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_ConfigurationChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_RegisteringKeyCommands(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_RegisteringDefaultKeyBindings(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_ReadOnlyChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_ChangingStream(System.Boolean@)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_OperationStopped(Syncfusion.Windows.Forms.Edit.Interfaces.ILongOperation)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_OperationStarted(Syncfusion.Windows.Forms.Edit.Interfaces.ILongOperation)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_PaintUserMargin(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_CanUndoRedoChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_SelectionChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_CursorPositionChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.EditControl.edtCode_InsertModeChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.ContextMenuManager">
            <summary>
            Context menu manager.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.CurrentColumn">
            <summary>
            Get or Set current column.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.CurrentLine">
            <summary>
            Get or Set current line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.CurrentPosition">
            <summary>
            Current position of the cursor in virtual coordinates.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.InsertMode">
            <summary>
            Get or Set Insert mode state.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.ShowLineNumbers">
            <summary>
            If true, line numbers are shown.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.ShowMarkers">
            <summary>
            If true, line markers are shown.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.ShowCollapse">
            <summary>
            If true, collapsers are shown.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.ShowWhitespaces">
            <summary>
            Specifies whether to show whitespaces as special symbols.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.VisibleLineCount">
            <summary>
            Get count of lines in file.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.PhysicalLineCount">
            <summary>
            Get count of lines in file.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.Configurator">
            <summary>
            Gets or sets language configuration instance object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.Parser">
            <summary>
            Gets parser for internal usage
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.WordWrap">
            <summary>
            Get or Set state of the word-wrapping mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.GraphicsCompositingQuality">
            <summary>
            Get or Set compositing quality.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.GraphicsInterpolationMode">
            <summary>
            Get or Set interpolation mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.GraphicsSmoothingMode">
            <summary>
            Get or Set smoothing mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.GraphicsTextRenderingHint">
            <summary>
            Get or Set text rendering hint.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.CanUndo">
            <summary>
            Get flag that determines whether undo operation can be done.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.CanRedo">
            <summary>
            Get flag that determines whether redo operation can be done.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.CanCopy">
            <summary>
            Get flag that determines whether copy operation can be done.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.CanPaste">
            <summary>
            Get flag that determines whether paste operation can be done.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.CanCut">
            <summary>
            Get flag that determines whether cut operation can be done.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.SelectedText">
            <summary>
            Get or Set selected text.
            </summary>
            <remarks>
            If there is no text selected and you are setting new
            selected text, it will be inserted in the position of the cursor.
            Otherwise, when there is some text selected,
            it will be deleted and new text will be inserted.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.AutoIndent">
            <summary>
            Get or Set flag that specifies whether AutoIndent is On.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.TabSize">
            <summary>
            Get or Set count of spaces to be placed instead tabulation symbol.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.UseTabs">
            <summary>
            Get or Set tabulation replace sing.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.Text">
            <summary>
            Get or Set plain text representation of the text data, the
            control is working with.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.CurrentLineText">
            <summary>
            Get text of the current line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.CurrentLineInstance">
            <summary>
            Get instance of the current line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.ShowRightUserMargin">
            <summary>
            Get or Set visibility of the right user margin.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.UserMarginRightWidth">
            <summary>
            Get or Set width of the right user margin.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.Languages">
            <summary>
            Get list of available languages.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.Language">
            <summary>
            Get or Set config language currently used.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.ReadOnly">
            <summary>
            Get or Set the value indicating whether changes can be done to the input stream.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.Commands">
            <summary>
            Get list of commands.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.KeyBinder">
            <summary>
            Get root key binder.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.KeyBindingProcessor">
            <summary>
            Get or Set key binding processor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.GroupUndo">
            <summary>
            Get or Set grouping actions for undo/redo.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.CursorGraphicalLocation">
            <summary>
            Get location of the cursors right-bottom
            position in control coordinates.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.ContextMenuEnabled">
            <summary>
            Get or Set flag that specifies, whether context menu is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.SingleLineMode">
            <summary>
            Get or Set status of the single line mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.IsModified">
            <summary>
            Get whether content of the file was modified.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.PrintDocument">
            <summary>
            Get print document, that can be used to print the contents of the editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.UpdateContextChoiceList">
            <summary>
            Get or Set value that specifies whether context choice
            should be updated when it is active and user types something.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.TransparentSelection">
            <summary>
            Get or Set transparency of the selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.ConvertOnLoad">
            <summary>
            Get or Set sign, whether file should be converted when loading.
            </summary>
            <remarks>Such file conversion is needed if file contains different new-line symbols or sequences.</remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.FileOpened">
            <summary>
            Get or Set file stream, that is used as an input.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.FileName">
            <summary>
            Get or set name of the currently opened file.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.SharedFileMode">
            <summary>
            Gets or Sets whether file should be opened in shared mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.BorderStyle">
            <summary>
            Gets or sets the border style of the control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.CreateParams">
            <summary>
            Overriden. Changes <see cref="P:System.Windows.Forms.CreateParams.Style"/> to show or hide scrollbars and also consider the controls
            <see cref="P:Syncfusion.Windows.Forms.Edit.ScrollControl.BorderStyle"/> setting.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.ScrollOffsetLeft">
            <summary>
            Left offset.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.ScrollOffsetRight">
            <summary>
            Right offset.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.ScrollOffsetTop">
            <summary>
            Top offset.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.ScrollOffsetBottom">
            <summary>
            Bottom offset.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.VirtualSize">
            <summary>
            Control`s virtual size.
            </summary>
            <remarks>
            If control`s client area is smaller then virtual size, then
            scrollers will be visible.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.Selection">
            <summary>
            Gets selected text range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.ShowVerticalSplitters">
            <summary>
            Gets or Sets value that indicates wether vertical splitter is visible.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.ShowHorizontalSplitters">
            <summary>
            Gets or Sets value that indicates wether horizontal splitters are visible.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.EditControl.TransferFocusOnTab">
            <summary>
            Gets or Sets wether control accepts tabs.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.InsertModeChanged">
            <summary>
            Event that is raised when InsertMode flag has changed
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.CursorPositionChanged">
            <summary>
            Event that is raised when current cursor position has changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.SelectionChanged">
            <summary>
            Event that is raised when text selection is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.CanUndoRedoChanged">
            <summary>
            Event that is raised when Changed State was updated.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.PaintUserMargin">
            <summary>
            Event that is raised when user margin have to be painted.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.OperationStarted">
            <summary>
            Event that is raised on the start of the long operation.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.OperationStopped">
            <summary>
            Even that is raised on the end of the long operation.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.ChangingStream">
            <summary>
            Event that is raised when currect stream instance is to be changed to some other one.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.ReadOnlyChanged">
            <summary>
            Event that is raised when ReadOnly mode changes.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.RegisteringDefaultKeyBindings">
            <summary>
            Event that is raised when class registers default key bindings.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.RegisteringKeyCommands">
            <summary>
            Event that is raised when class registers commands for key-binding.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.ConfigurationChanged">
            <summary>
            Event that is raised after changing configuration.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.LanguageChanged">
            <summary>
            Event that is raised after changing parsers language.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.DrawLineMark">
            <summary>
            Event that is raised when line mark should be drawn.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.ContextChoiceBeforeOpen">
            <summary>
            Event that is raised before the ContextChoice dialog is shown to user.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.ContextChoiceUpdate">
            <summary>
            Event that is raised when auto-complete dialog should be updated.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.ContextChoiceOpen">
            <summary>
            Event that is raised when auto-complete dialog has been opened.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.ContextChoiceClose">
            <summary>
            Event that is raised when auto-complete dialog has been closed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.ContextPromptBeforeOpen">
            <summary>
            Event that is raised before context prompt should be shown.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.ContextPromptOpen">
            <summary>
            Event that is raised when context prompt should be shown.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.ContextPromptClose">
            <summary>
            Event that is raised when context prompt should be shown.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.UpdateContextToolTip">
            <summary>
            Event that is raised when text should be updated.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.MenuFill">
            <summary>
            Event, that is raised, when user should fill menu with menu items.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.SingleLineChanged">
            <summary>
            Raised, when single line mode has been changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.TextChanged">
            <summary>
            Event, that is raised when text is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.TextChanging">
            <summary>
            Event, that is raised when text is to be changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.ContextChoiceItemSelected">
            <summary>
            Event, that is raised when some contecxt choice list item gets selected.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.ContextPromptSelectionChanged">
            <summary>
            Event, that is raised when context prompt selection is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.EditControl.WordWrapChanged">
            <summary>
            Event, that is raised when word-wrap mode is changed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.FakeEditControl">
            <summary>
            Control that is used to render content of the StreamEditControl.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl">
            <summary>
            Scrollable control, that supports intelly mouse.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.HybridScrollControl">
            <summary>
            Hybrid between Syncfusion`s scroller and windows scroller. 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.ScrollControl">
            <summary>
            Defines a base class for custom controls that support scrolling behavior.
            </summary>
            <remarks>
            The ScrollControl class acts as a base class for controls that require the
            ability to scroll. To allow a control to display scroll bars as needed,
            set the AutoScroll property to true. To select which scroll bars should be visible,
            set the VScroll and HScroll properties. <para/>
            You can also associate stand-alone scrollbars with the ScrollControl. The VertScrollBar
            and HorizScrollBar properties allow you to associate external scrollbars. This is of benefit
            if you want to share one scrollbar with a parent control. For example, if the ScrollControl
            is a view inside a workbook or dynamic splitter frame.<para/>
            ScrollControl supports automatic scrolling when the user drags the mouse. In a grid
            when the user starts selecting cells the user can drag the mouse outside the grid
            area and the grid will automatically scroll. To enable auto scrolling, override the
            OnMouseDown event in your dervied control and intialize the AutoScrolling, AutoScrollBounds
            and InsideScrollBounds properties.<para/>
            When the user scrolls your control and holds down the mouse on the down or up arrow
            of the scrollbar, the scrolling speed will accelerate.<para/>
            The FixRenderOrigin method will ensure correct initialization of the rendering origin
            for brushes and patterns. You can call FixRenderOrigin from your control's OnPaint method.
            ScrollControl supports scrolling with the mouse wheel and also cooperates fine with
            with the IntelliMouseDragScroll class.<para/>
            If you want to provide context information about your control and change the cursor on
            the fly while the user moves the mouse, set the OverrideCursor property to the cursor
            you want to show. Instead you can also implement IMouseController and add the object
            to MouseControllerDispatcher.<para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.LastMousePositionToClient">
            <summary>
            Returns PointToClient(LastMousePosition);
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Syncfusion.Windows.Forms.Edit.ScrollControl"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnParentChanged(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.Dispose(System.Boolean)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnScrollbarsVisibleChanged(System.EventArgs)">
            <summary>
            This method fires the ScrollbarsVisibleChanged
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.ProcessMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Call this method if you want to delegate MouseWheelEvent from a
            child control.
            </summary>
            <param name="e">A MouseEventArgs that holds event data.</param>
            <remarks>
            <code>
            public class GridTextBox: RichTextBox
            {
            	private GridTextBoxCell parent;
            	protected override void OnMouseWheel(MouseEventArgs e)
            	{
            		parent.Grid.ProcessMouseWheel(e);
            	}
            }
            </code>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.SetVisibleScrollbars(System.Boolean,System.Boolean)">
            <summary>
                Actually displays or hides the horiz and vert autoscrollbars. This will
                also adjust the values of formState to reflect the new state
            </summary>
            <param name='horiz'>
                True if the horiz scrollbar should be displayed
            </param>
            <param name='vert'>
                True if the vert scrollbar should be displayed
            </param>
            <returns>
                True if the form needs to be re-layed out
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.WndProc(System.Windows.Forms.Message@)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnHScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
               <para>
                  Listens
                  for the horizontal scrollbar's scroll event.
               </para>
            </summary>
            <param name="sender">
               An <see cref="T:System.Object"/> that contains data about the control.
            </param>
            <param name="se">
               A <see cref="T:System.Windows.Forms.ScrollEventArgs"/> that contains the event data.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnVScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
               <para>
                  Listens
                  for the vertical scrollbar's scroll event.
               </para>
            </summary>
            <param name="sender">
               An <see cref="T:System.Object"/> that contains data about the control.
            </param>
            <param name="se">
               A <see cref="T:System.Windows.Forms.ScrollEventArgs"/> that contains the event data.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.ResetInsideScrollMargins">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Edit.ScrollControl.InsideScrollMargins"/> property to its default value.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.FixRenderOrigin(System.Drawing.Graphics)">
            <summary>
            Call this method from your controls OnPaint method to ensure correct
            rendering origin for brushes and patterns.
            </summary>
            <param name="g">The graphics object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.UpdateScrollBars">
            <summary>
            Update scrollbars to reflect recent changes in scroll position, minimum and maximum scoll position values.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.ShouldPrepareUpdate">
            <summary>
            Call this method to check if you should do any update calculations for the view in your control and to notify scrollcontrol
            that the controls content need to be updated.
            </summary>
            <returns>true if you should invalidate areas that need to be redrawn; false if a complete Refresh for the control is pending
            and therefore invalidating the view is not necessary.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.ShouldPrepareUpdate(System.Boolean)">
            <summary>
            Call this method to check if you should do any update calculations for the view in your control and to notify scrollcontrol
            that the controls content need to be updated.
            </summary>
            <param name="markPaintPending">If markPaintPending is true ScrollControl will assume the control needs to be repainted in a subsequent EndUpdate call.</param>
            <returns>true if you should Invalidate regions to be repainted in your control. It will return false if a complete Refresh of
            the control is pending and you don't need to invalidate individual regions of your control.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.BeginUpdate">
            <summary>
            Suspends the painting of the control until the <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.EndUpdate"/> method is called.
            </summary>
            <remarks>
            When many paint are made to the appearance of a control you should invoke the
            BeginUpdate method to temporarily freeze the drawing of the control. This results
            in less distraction to the user, and a performance gain. After all updates have
            been made, invoke the EndUpdate method to resume drawing of the control.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.BeginUpdate(Syncfusion.Windows.Forms.Edit.BeginUpdateOptions)">
            <summary>
            Suspends the painting of the control until the <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.EndUpdate"/> method is called.
            </summary>
            <param name="options">Specifies the painting support during the BeginUpdate, EndUpdate batch.</param>
            <remarks>
            <para>When many paint are made to the appearance of a control you should invoke the
            BeginUpdate method to temporarily freeze the drawing of the control. This results
            in less distraction to the user, and a performance gain. After all updates have
            been made, invoke the EndUpdate method to resume drawing of the control.</para>
            <para>
            Pass BeginUpdateOptions if you do not want to do a complete Refresh of the control and instead
            want to have certain regions of your control be invalidated or scroll the contents of control.</para>
            If you call BeginUpdate() and then later EndUpdate() the control will know if a paint is pending and only
            refresh the control if a paint is pending. Either call to ShouldPrepareUpdate, Invalidate or a WM_PAINT message during
            the BeginUpdate EndUpdate block will signal the control that a paint is pending.
            </remarks>
            <seealso cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.ShouldPrepareUpdate"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.EndUpdate"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnBeginUpdateScrollBars">
            <summary>
            Call <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.BeginUpdate"/> for both scrollbars.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnEndUpdateScrollBars">
            <summary>
            Call <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.EndUpdate"/> for both scrollbars.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.EndUpdate">
            <summary>
            Resumes the painting of the control suspended by calling the BeginUpdate method.
            </summary>
            <remarks>
            When many paint are made to the appearance of a control you should invoke the
            BeginUpdate method to temporarily freeze the drawing of the control. This results
            in less distraction to the user, and a performance gain. After all updates have
            been made, invoke the EndUpdate method to resume drawing of the control.
            </remarks>
            <seealso cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.BeginUpdate"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.CancelUpdate">
            <summary>
            Cancels any prior <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.BeginUpdate"/> calls.
            </summary>
            <seealso cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.BeginUpdate"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.EndUpdate(System.Boolean)">
            <summary>
            Resumes the painting of the control suspended by calling the BeginUpdate method.
            </summary>
            <remarks>
            When many paint are made to the appearance of a control you should invoke the
            BeginUpdate method to temporarily freeze the drawing of the control. This results
            in less distraction to the user, and a performance gain. After all updates have
            been made, invoke the EndUpdate method to resume drawing of the control.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnUpdatingChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Edit.ScrollControl.UpdatingChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
            <remarks>
            The event handler for this event can check <see cref="P:Syncfusion.Windows.Forms.Edit.ScrollControl.Updating"/>
            to determine if <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.BeginUpdate"/> or <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.EndUpdate"/>
            was called.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
            <summary>
              Overriden. See <see cref="E:System.Windows.Forms.Control.Invalidated"/> event.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Forms.InvalidateEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.ScrollWindow(System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Scrolls the contents of the control similar to the ScrollWindow Windows API.
            </summary>
            <remarks>
            The method will raise a WindowScrolling event before the contents are scrolled and a WindowScrolled event after
            the contents have been scrolled.
            <para>If DisableScrollWindow is true any calls to the ScrollWindow method will simply invalidate the affect region. The rendering origin will
            still be recorded correctly and WindowScrolling and WindowScrolled events will be raised.</para>
            <para>If DisableScrollWindow is false ScrollWindow will scroll the contents of the control.
            </para>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnEnter(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnLeave(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnValidating(System.ComponentModel.CancelEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnValidated(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnLostFocus(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnGotFocus(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnDeactivated(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Edit.ScrollControl.Deactivated"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.QueryFocusInside">
            <summary>
            Determines if this control contains focus. Override this method if you
            want to show dropdown windows and indicate the control has not lost focus when
            the dropdown is shown.
            </summary>
            <returns>true if the control or any child control has focus; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnControlGotFocus">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.GotFocus"/> event. This method is called when the control
            or any child control got focus and this control did not have focus before.
            </summary>
            <remarks>
            Inheriting classed should override this method instead of overriding <see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)"/>
            because <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnControlGotFocus"/> is also called when child controls got focus and it
            is not called when focus is moved within child controls of this control.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnControlLostFocus">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.LostFocus"/> event. This method is called when the control
            or any child control looses focus and the new focused control is not a child of this control.
            </summary>
            <remarks>
            Inheriting classed should override this method instead of overriding <see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)"/>
            because <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnControlLostFocus"/> is also called when child controls loose focus and it
            is not called when focus is moved within child controls of this control.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnValidatingLostFocus">
            <summary>
            This method is called if the controls <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnControlLostFocus"/> notification occurs
            while handling a <see cref="E:System.Windows.Forms.Control.Validating"/> event. This typically occurs if a
            message box is displayed from a <see cref="E:System.Windows.Forms.Control.Validating"/> event handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnSizeChanged(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnLocationChanged(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnHandleCreated(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnVisibleChanged(System.EventArgs)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnEnsurePaintCodeJitted">
            <summary>
            This method is called to minize the time the first time the control is drawn. Calling
            OnPaint before the control is made visible ensures that all relevant code for drawnig
            has been jitted.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollControl.EnsurePaintCodeJitted(System.Boolean)">
            <summary>
            This method checks if the control is visible, a window handle has been created
            and if it has not been drawn before, it calls <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnEnsurePaintCodeJitted"/>.
            </summary>
            <param name="ignoreVisible">Set this true if you want to force a call to
            <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnEnsurePaintCodeJitted"/> even if the control is not visible and/or
            no window handle has been created.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.DiscardPaintMessagesAfterBeginUpdate">
            <summary>
            When you call BeginUpdate() the control by default does not handle WM_PAINT messages. Only
            once you call EndUpdate they will be processed. If this causes problems in your application, you can
            set this static property to true. In such cases WM_PAINT messages will be simply discarded and
            any invalid regions will be validated.
            </summary>
            <remarks>
            There is a problem with the default implementation of BeginUpdate. If a screen region is marked
            invalid the WndProc will be repeatedly called with WM_PAINT at the the top of the WndProc
            until EndUpdate is called. This can cause your application to freeze if another window gets created
            or if you make a web service call and WndProc messages need to be processed.<para/>
            Setting DiscardPaintMessagesAfterBeginUpdate = true will help avoid these scenarios.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.LastMousePosition">
            <summary>
            Property MousePosition (Point) - cached Control.MousePosition. The variable is set
            before any WM_MOUSE* messages are processed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.ScrollControl.UpdatingChanged">
            <summary>
            Occurs when <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.BeginUpdate"/> has been called the first time or <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.EndUpdate"/>
            has been called the last time.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.CreateParams">
            <summary>
            Overriden. Changes <see cref="P:System.Windows.Forms.CreateParams.Style"/> to show or hide scrollbars and also consider the controls
            <see cref="P:Syncfusion.Windows.Forms.Edit.ScrollControl.BorderStyle"/> setting.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.BorderStyle">
            <summary>
              <para>Gets or sets the border style of the control.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.HScroll">
            <summary>
               <para>
                  Gets or
                  sets a value indicating whether the vertical scroll bar is visible.
               </para>
            </summary>
            <value>
               <para>
               <see langword="true"/> if the vertical scroll bar is
                  visible; otherwise, <see langword="false"/> .
               </para>
            </value>
            <seealso cref="P:System.Windows.Forms.ScrollableControl.HScroll"/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.VScroll">
            <summary>
               <para>
                  Gets or
                  sets a value indicating whether the vertical scroll bar is visible.
               </para>
            </summary>
            <value>
               <para>
               <see langword="true"/> if the vertical scroll bar is
                  visible; otherwise, <see langword="false"/> .
               </para>
            </value>
            <seealso cref="P:System.Windows.Forms.ScrollableControl.HScroll"/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.UseSharedScrollBars">
            <summary>
            Enable shared scrollbars. Use this if the control is not embedded in a container control
            that implements IScrollBarFrame and you want to provide your own scrollbars.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.PaneDesc">
            <summary>
            Pane information.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.IgnoreUICues">
            <summary>
            ScrollControlMouseController checks this to see if it should cancel
            existint mouse operation and call ScrollControlMouseController.CancelMode
            when a UICuesChanged event is sent. That can happen when user activates
            another application or simply when styles for a child window have changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.InsideScrollMargins">
            <summary>
            The default margins for the scrolling area when the user moves the mouse to the
            margin between InsideScrollBounds and AutoScrollBounds.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.VScrollBar">
            <summary>
            Returns a reference to an object with vertical scrollbar settings of the control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.HScrollBar">
            <summary>
            Returns a reference to an object with horizontal scrollbar settings of the control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.Size">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.TabIndex">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.UpdateOptions">
            <summary>
            Returns the settings for the current BeginUpdate option.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.Updating">
            <summary>
            Determines if BeginUpdate() has been called and the painting for a control is suspended.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.PaintPending">
            <summary>
            Determines if there are updates pending for the control when painting is suspended with BeginUpdate.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.DisableScrollWindow">
            <summary>
            Lets you check or specify the setting if the window should be scrolled when ScrollWindow is called.
            </summary>
            <remarks>
            <para>If DisableScrollWindow is true any calls to the ScrollWindow method will simply invalidate the affect region. The rendering origin will
            still be recorded correctly and WindowScrolling and WindowScrolled events will be raised.</para>
            <para>If DisableScrollWindow is false ScrollWindow will scroll the contents of the control.
            </para>
            <para>If DisableScrollWindow will return true if BeginUpdate was called without the BeginUpdateOptions.ScrollWindow option.
            </para>
            </remarks>
            <seealso cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.BeginUpdate"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Edit.ScrollControl.Updating"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.ScrollWindow(System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)"/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.SupportsThumbTrack">
            <summary>
            Specifies if the control should scroll while the user is dragging a scrollbars thumb
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.VerticalThumbTrack">
            <summary>
            Specifies if the control should scroll while the user is dragging a vertical scrollbars thumb.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.HorizontalThumbTrack">
            <summary>
            Specifies if the control should scroll while the user is dragging a horizontal scrollbars thumb.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.VerticalScrollTips">
            <summary>
            Specifies if the control should show scroll tips while the user is dragging a vertical scrollbars thumb.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.HorizontalScrollTips">
            <summary>
            Specifies if the control should show scroll tips while the user is dragging a horizontal scrollbars thumb.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.IsValidating">
            <summary>
            Inidicates if the <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnValidating(System.ComponentModel.CancelEventArgs)"/> method has been called. <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnLeave(System.EventArgs)"/> and <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnEnter(System.EventArgs)"/> reset this flag.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.IsValidated">
            <summary>
            Inidicates if the <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnValidated(System.EventArgs)"/> method has been called. <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnLeave(System.EventArgs)"/> and <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnEnter(System.EventArgs)"/> reset this flag.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.IsActiveControl">
            <summary>
            Inidicates if the <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnEnter(System.EventArgs)"/> has been called. <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnLeave(System.EventArgs)"/> resets this flag.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.IsDeactivated">
            <summary>
            Inidicates if both <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnDeactivated(System.EventArgs)"/> has been called. <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnEnter(System.EventArgs)"/> resets this flag.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.HasControlFocus">
            <summary>
            Inidicates if both <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnControlGotFocus"/> has been called. <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnControlLostFocus"/> resets this flag.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.ScrollControl.Deactivated">
            <summary>
            Occurs when both <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnControlLostFocus"/> and <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollControl.OnLeave(System.EventArgs)"/> occured.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollControl.PreJitPaint">
            <summary>
            Lets you specify if the time the first time the control is drawn should be optimized
            by calling OnPaint before the control is made visible and so that all relevant code for drawnig
            has been jitted.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.HybridScrollControl.DEF_FAST_SCROLL_OFFSET">
            <summary>
            Offset in pixels of the mouse from the border of the control,
            where fast scrolling starts.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.HybridScrollControl.DEF_SCROLLING_INTERVAL">
            <summary>
            Interval of the autoscroll timer.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.HybridScrollControl.m_ScrollOffsetLeft">
            <summary>
            Left offset.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.HybridScrollControl.m_ScrollOffsetRight">
            <summary>
            Right offset.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.HybridScrollControl.m_ScrollOffsetTop">
            <summary>
            Top offset.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.HybridScrollControl.m_ScrollOffsetBottom">
            <summary>
            Bottom offset.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.HybridScrollControl.m_AutoScrollTimer">
            <summary>
            Timer, used for autoscrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.HybridScrollControl.m_SlowScrollingStep">
            <summary>
            Step of the slow scrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.HybridScrollControl.m_FastScrollingStep">
            <summary>
            Step of the fast scrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.HybridScrollControl.m_FastScrollOffset">
            <summary>
            Destination from the control`s border, the fast scrolling is activated after.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.HybridScrollControl.m_oldSmallChangeV">
            <summary>
            Old vertical small change.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.HybridScrollControl.m_oldSmallChangeH">
            <summary>
            Old horisontal small change.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.HybridScrollControl.m_scrollPosition">
            <summary>
            Current position of the auto-scrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.HybridScrollControl.m_lastScrollTime">
            <summary>
            Time of the last scrolling.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.HybridScrollControl.UpdateScrollBarsSize">
            <summary>
            Updates size and page size of the scrollbars.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.HybridScrollControl.UpdateScrollBarsVisibility">
            <summary>
            Updates visibility of the ScrollBars.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.HybridScrollControl.ScrollLines(Syncfusion.Windows.Forms.Edit.HybridScrollControl.ScrollDirection,System.Single)">
            <summary>
            Scrolls control vertically by specified amount of lines.
            </summary>
            <param name="fLinesCount">Count of lines to scroll. Must be always positive.</param>
            <param name="direction">Direction of scrolling.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.HybridScrollControl.ScrollLines(System.Single)">
            <summary>
            Scrolls control vertically by specified amount of lines.
            </summary>
            <param name="fLinesCount">Count of lines to scroll.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.HybridScrollControl.ScrollHorisontalFastOrSlow(System.Int32)">
            <summary>
            Scrolls specified scroller.
            </summary>
            <param name="scroller"></param>
            <param name="offset"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.HybridScrollControl.ScrollScroller(Syncfusion.Windows.Forms.Edit.ScrollBarWrapper,System.Int32)">
            <summary>
            Scrolls specified scroller.
            </summary>
            <param name="scroller"></param>
            <param name="offset"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.HybridScrollControl.SetScrollerPosition(Syncfusion.Windows.Forms.Edit.ScrollBarWrapper,System.Int32)">
            <summary>
            Sets new position of the scroller. Supports short smooth jumps and long jumps.
            </summary>
            <param name="wrapper">Scroller to be scrolled.</param>
            <param name="position">New position of the scroller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.HybridScrollControl.ScrollWindow(System.Int32,System.Int32)">
            <summary>
            Scrolls window by specified amoutns of pixels.
            </summary>
            <param name="xAmount"></param>
            <param name="yAmount"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.HybridScrollControl.OnResize(System.EventArgs)">
            <summary>
            Handler of the WM_SIZE event.
            </summary>
            <remarks>
            On window resize scrollers are updated:
            their maximum size changes and their page size changes.
            </remarks>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.HybridScrollControl.CorrectScroller(Syncfusion.Windows.Forms.Edit.ScrollBarWrapper)">
            <summary>
            Correctes value of the given scrollbar.
            </summary>
            <param name="bar"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.HybridScrollControl.OnHScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Processes horizontal scroll event.
            </summary>
            <param name="sender"></param>
            <param name="se"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.HybridScrollControl.OnVScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Processes vertical scroll event.
            </summary>
            <param name="sender"></param>
            <param name="se"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.HybridScrollControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Enables autoscrolling.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.HybridScrollControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Disables autoscrolling.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.HybridScrollControl.OnLostFocus(System.EventArgs)">
            <summary>
            Stops scrolling.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.HybridScrollControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles mouse wheel processing for our scrollbars.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.HybridScrollControl.BeforeAutoScroll">
            <summary>
            Called before scrolling by timer on every timer tick. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.HybridScrollControl.AfterAutoScroll">
            <summary>
            Called after scrolling by timer on every timer tick. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.HybridScrollControl.#ctor">
            <summary>
            Initializes sublying ScrollControl.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.HybridScrollControl.m_AutoScrollTimer_Tick(System.Object,System.EventArgs)">
            <summary>
            Handler of the Tick event of the AutoScroll timer.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.HybridScrollControl.ScrollOffsetLeft">
            <summary>
            Left offset.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.HybridScrollControl.ScrollOffsetRight">
            <summary>
            Right offset.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.HybridScrollControl.ScrollOffsetTop">
            <summary>
            Top offset.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.HybridScrollControl.ScrollOffsetBottom">
            <summary>
            Bottom offset.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.HybridScrollControl.VirtualSize">
            <summary>
            Control`s virtual size.
            </summary>
            <remarks>
            If control`s client area is smaller then virtual size, then
            scrollers will be visible.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.HybridScrollControl.AutoScrollPosition">
            <summary>
            Position of the scroller.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.HybridScrollControl.SlowScrollingStep">
            <summary>
            Step of the slow scrolling.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.HybridScrollControl.FastScrollingStep">
            <summary>
            Step of the fast scrolling.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.HybridScrollControl.FastScrollOffset">
            <summary>
            Distance from the control`s border, where scrolling starts
            using <see cref="P:Syncfusion.Windows.Forms.Edit.HybridScrollControl.FastScrollingStep"/> instead of <see cref="P:Syncfusion.Windows.Forms.Edit.HybridScrollControl.SlowScrollingStep"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.HybridScrollControl.IsAutoScrolling">
            <summary>
            Gets value, indicating whether control is now in autoscroll mode.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.HybridScrollControl.ScrollDirection">
            <summary>
            Direction of scrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_CommonCursorName">
            <summary>
            Name of the resource with common movement cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_UpCursorName">
            <summary>
            Name of the resource with up movement cursor.
            </summary>                                       
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_DownCursorName">
            <summary>
            Name of the resource with down movement cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_LeftCursorName">
            <summary>
            Name of the resource with left movement cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_RightCursorName">
            <summary>
            Name of the resource with down movement cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_UpLeftCursorName">
            <summary>
            Name of the resource with up left movement cursor.
            </summary>                                       
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_DownRightCursorName">
            <summary>
            Name of the resource with down right movement cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_DownLeftCursorName">
            <summary>
            Name of the resource with down left movement cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_UpRightCursorName">
            <summary>
            Name of the resource with down right movement cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.WM_SETCURSOR">
            <summary>
            WM_SETCURSOR message.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.DEF_CURSOR_MIN_DISTANCE">
            <summary>
            Minimum distance between click position and currnt mouse position to begin scrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_mouseClickPoint">
            <summary>
            Last point, where user clicked by middle button.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_pressed">
            <summary>
            Determines, wheather middle button is in pressed state.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_direction">
            <summary>
            Current scrolling direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_olddirection">
            <summary>
            Old scrolling direction.
            <seealso cref="M:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.UpdateCursor"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_ScrollingSpeedFactor">
            <summary>
            Scrolling speed factor.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_distanceDivisionFactor">
            <summary>
            Number, the distance will be devided to when calculating speed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_scrollTimer">
            <summary>
            Timer, used for scrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_ScrollingSpeed">
            <summary>
            Scrolling speed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_oldScrollPosition">
            <summary>
            Scrool position, saved when mouse is clicked.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_cursorSpecial">
            <summary>
            Special cursor, not used if null.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_CommonCursor">
            <summary>
            Common movement cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_UpCursor">
            <summary>
            Up movement cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_DownCursor">
            <summary>
            Down movement cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_LeftCursor">
            <summary>
            Left movement cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_RightCursor">
            <summary>
            Right movement cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_UpLeftCursor">
            <summary>
            Up movement cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_DownLeftCursor">
            <summary>
            Down movement cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_DownRightCursor">
            <summary>
            Left movement cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.m_UpRightCursor">
            <summary>
            Right movement cursor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.#cctor">
            <summary>
            Initializes static resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.#ctor">
            <summary>
            Initializes timer, used for scrolling.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.Dispose(System.Boolean)">
            <summary>
            Disposes timer, used for scrolling.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes presses of the middle button.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes mouse movement, sets scrolling mode and speed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Stops scrolling.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes WM_SETCURSOR.
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.OnCursorChanged(System.EventArgs)">
            <summary>
            Resets cached info about current cursor.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.OnLostFocus(System.EventArgs)">
            <summary>
            Stops scrolling.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.ResetCursor">
            <summary>
            Resets cached info about current cursor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.UpdateCursor">
            <summary>
            Updates current cursor according to the scroll direction.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.ScrollTimerTick(System.Object,System.EventArgs)">
            <summary>
            Processes timer Tick events and scrolls window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.CommonCursor">
            <summary>
            GET cursor, that shows four directions all together.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.UpRightCursor">
            <summary>
            GET cursor with Up-right arrow.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.DownLeftCursor">
            <summary>
            GET cursor with down-left arrow.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.DownRightCursor">
            <summary>
            GET cursor with down-right arrow.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.UpLeftCursor">
            <summary>
            GET cursor with up-left arrow.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.RightCursor">
            <summary>
            GET cursor with right arrow.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.LeftCursor">
            <summary>
            GET cursor with left arrow.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.DownCursor">
            <summary>
            GET cursor with down arrow.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.UpCursor">
            <summary>
            GET cursor, with up-arrow.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.IsIntellyScrollActive">
            <summary>
            GET state of the Intelly scrolling.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.SpecialCursor">
            <summary>
            GET, SET special cursor, that should be used 
            instead of the default control's cursor.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.IntelliScrollableControl.ScrollingDirection">
            <summary>
            Current scrolling direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.FakeEditControl.m_control">
            <summary>
            Real edit control used as a source for the data.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.FakeEditControl.#ctor">
            <summary>
            Creates and initializes new instance of the control.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.FakeEditControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.FakeEditControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints background and foreground of the control
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.FakeEditControl.OnVScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Processes vertical scroll event.
            </summary>
            <param name="sender"></param>
            <param name="se"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.FakeEditControl.ScrollLines(Syncfusion.Windows.Forms.Edit.HybridScrollControl.ScrollDirection,System.Single)">
            <summary>
            Scrolls control vertically by specified amount of lines.
            </summary>
            <param name="fLinesCount">Count of lines to scroll.</param>
            <param name="direction">Direction of scrolling.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.FakeEditControl.m_control_InvalidateArea(Syncfusion.Windows.Forms.Edit.StreamEditControl,System.Drawing.Rectangle)">
            <summary>
            Invalidates control.
            </summary>
            <param name="initiator"></param>
            <param name="areaToInvalidate"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.FakeEditControl.Control">
            <summary>
            Gets, Sets real edit control used as a source for the data.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.FakeEditControl.MaxWidth">
            <summary>
            Get maximum width of the line. Used for WordWrapping.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.FileEditControl">
            <summary>
            Summary description for FileEditControl.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.StreamEditControl">
            <summary>
            Control for editing source files.
            Loads language configuration from file.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.DEF_CONVERT_REGEX">
            <summary>
            Regex conversion pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.DEF_NUMBERS_SIZE">
            <summary>
            Default lines count which is used when there are no lines in the file.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.DEF_MARKER_AREA">
            <summary>
            Width of the markers area
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.DEF_COLLAPSE_AREA">
            <summary>
            Width of the collapsers area
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.DEF_IDLE_LOAD_LINES_COUNT">
            <summary>
            Count of lines that will be loaded in one pass when the user is idle.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.DEF_IDLE_TIMER_DELAY">
            <summary>
            Delay in miliseconds between every idle-processing.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.DEF_RIGHT_MARGIN">
            <summary>
            Default with of right margin
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.DEF_XSL_TRANSFORM">
            <summary>
            Name of the resource with XSL transformation for XML representation of the text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.DEF_XSL_TRANSFORM_RTF">
            <summary>
            Name of the resource with XSL transformation for XML representation of the text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.DEF_SMART_TEXT_CHECK">
            <summary>
            Regular expression for checking selected text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.DEF_LINE_SCROLLING_STEP">
            <summary>
            Step for scrolling when line by line scrolling is performed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.DEF_LAYER_NAME_SELECTION">
            <summary>
            Name of the selection layer in dynamic formattings.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.DEF_LAYER_NAME_WAVELINE">
            <summary>
            Name of the dynamic formats layer that contains wavelines.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.DEF_MAX_UNRENDERED_LINES">
            <summary>
            Maximum count of the unrendered lines that can be shown by the scrollbar.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.DEF_IDLE_SLEEP_INTERVAL">
            <summary>
            Sleep interval for idle-processing timer.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.DEF_TOOLTIP_MAX_LINES">
            <summary>
            Maximum count of lines in a tooltip.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl._graphics">
            <summary>
            Default Graphics object.
            Used for measuring.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.DEF_LINE_NUMBERS">
            <summary>
            Width of the line numbers area
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_Configuration">
            <summary>
            Current configuration.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_bInsertMode">
            <summary>
            Flag of the InsertMode.
            InsertedMode is turned on by default.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_updateLockCounter">
            <summary>
            Counter for the update locks.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_wrapper">
            <summary>
            Input stream.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_parser">
            <summary>
            Lexem parser instance.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_centFormat">
            <summary>
            StringFormat instance used for drawing and measuring strings, verticaly centered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_bShowLines">
            <summary>
            Flag of line numbers showing.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_bShowMarkers">
             <summary>
            Flag of markers showing.
             </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_bShowCollapse">
            <summary>
            Flag of collapsers showing.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_bKeyPressHandeled">
            <summary>
            Determines whether KeyPress was handled.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_scanTimer_Callback">
            <summary>
            Timer based on other thread, used to scan file while user is idle.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_formatManager">
            <summary>
            Manager of dynamic formattings.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_selection">
            <summary>
            Selection range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_bSelecting">
            <summary>
            Flag that indicates whether control currently is in selection mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_keyBinder">
            <summary>
            Binder of the keyboard.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_GreenDotsPen">
            <summary>
            Pen used to draw green dots.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_findDialog">
            <summary>
            Find dialog.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_gotoDialog">
            <summary>
            Goto dialog.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_replaceDialog">
            <summary>
            Replace dialog.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_contextChoice">
            <summary>
            Form with auto complete symbols
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_contextPrompt">
            <summary>
            Context prompt window.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_CompositingQuality">
            <summary>
            Quality of compositing.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_InterpolationMode">
            <summary>
            Interpolation mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_SmoothingMode">
            <summary>
            Smoothing mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_TextRenderingHint">
            <summary>
            Text rendering hint.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_CursorManager">
            <summary>
            Cursor manager.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_bIndent">
            <summary>
            Flag that specifies whether AutoIndent is On.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_bUseTabs">
            <summary>
            Specifies whether tab symbols must be used.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_bookmarks">
            <summary>
            List of bookmarks.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_customMarks">
            <summary>
            List of bookmarks.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_bUsrMargnRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_iUserMarginRightWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_operationLevel">
            <summary>
            Count of long operation currently started.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_backgroundBrush">
            <summary>
            Brush used to draw background.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_bReadOnly">
            <summary>
            Read-only mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_undoGroups">
            <summary>
            Stack of the undo groups (UndoGroup stucture).
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_redoGroups">
            <summary>
            Stack of the redo groups (UndoGroup stucture).
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_iUndoGroupOpened">
            <summary>
            If true, it means that undo group was opened, no undo operations can be done,
            all changes in group can be undone by a single undo operation.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_iUndoGroupStart">
            <summary>
            Count of the action in the undo queue, stored when undo group was opened.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_bGroupUndo">
            <summary>
            Specifies whether group undo is on.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_UndoMarkers">
            <summary>
            Group undo markers.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_RedoMarkers">
            <summary>
            Group redo markers.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_lastOperation">
            <summary>
            Last executed operation.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_bWordWrapping">
            <summary>
            WordWrapping mode sign.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_iOldWidth">
            <summary>
            Old width of the control.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_iTabSize">
            <summary>
            Tab size.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_bShowWhitespaces">
            <summary>
            Whitespacs visibility.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_tip">
            <summary>
            Context tooltip.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_menuManager">
            <summary>
            Context menu manager.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_bSingleLineEnabled">
            <summary>
            Single line mode status.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_iPrintPageNumber">
            <summary>
            Number of the page to be printed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_iPrintPageY">
            <summary>
            Y offset of the page to be printed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_regionAreaToPrint">
            <summary>
            Text Region to be printed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_printDoc">
            <summary>
            Print document.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_bUpdateContextChoice">
            <summary>
            Specifies whether chontext choice should be updated
            when user types something.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_bTransparentSelection">
            <summary>
            XP-Style transparent selection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_listFakeCopies">
            <summary>
            List of the fake copies of the control.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_bPrintCurrentPage">
            <summary>
            Specifies wether only current page should be printed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_iUnderlineNumber">
            <summary>
            Number of the last underline.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_bTransferFocusOnTab">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ShouldSerializeText">
            <summary>
            Tells designer to serialize Text property.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.#ctor">
            <summary>
            Creates new instance of StreamEditControl class and initializes it.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.Finalize">
            <summary>
            Default finalizer for the class. Simply calls <see cref="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.Dispose(System.Boolean)"/> method.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.RecalculateSpaces(System.Int32)">
            <summary>
            Recalculates space, needed for drawing line index.
            </summary>
            <param name="lineCount">Line count.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.Dispose(System.Boolean)">
            <summary>
            Disposes object and frees all used resources and suppresses
            object`s finalization.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.LoadConfig(System.String,System.String)">
            <summary>
            Reads configuration from file.
            </summary>
            <param name="fileName">Name of the file with configuration.</param>
            <param name="currentFilePath">Name of the file that is currently loaded, or empty string.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ResetColoring(Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage)">
            <summary>
            Reset`s parser.
            </summary>
            <param name="lang">New language configuration to be set.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.LoadStream(System.IO.Stream)">
            <summary>
            Load file and configuration for it.
            </summary>
            <param name="stream">Name of the file to load.</param>
            <returns>True, if user has not canceled loading, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.LoadStream(System.IO.Stream,Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage)">
            <summary>
            Load file and configuration for it.
            </summary>
            <param name="stream">Name of the file to load.</param>
            <returns>True, if user has not canceled loading, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.New">
            <summary>
            Creates empty stream and makes editor to edit it.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.New(Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage)">
            <summary>
            Creates empty stream and makes editor to edit it.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SaveToStream">
            <summary>
            Flushes changes to the current stream.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SaveToStream(System.IO.Stream)">
            <summary>
            Saves data from current stream to the specified one.
            </summary>
            <param name="stream">Output stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.DiscardChanges">
            <summary>
            Discards all unsaved changes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GetRealCursorPosition">
            <summary>
            Returns current ParsePoint.
            </summary>
            <returns>IParsePoint with current position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GetLineText(System.Int32)">
            <summary>
            Gets text of the specified line.
            </summary>
            <param name="iLineIndex">Line index.</param>
            <returns>Text of the line.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GetLine(System.Int32)">
            <summary>
            Gets line's instance.
            </summary>
            <param name="iLineIndex">Index of the line.</param>
            <returns>Instance of the line.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.AppendText(System.String)">
            <summary>
            Appends text.
            </summary>
            <param name="text">The text to be appended.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.InsertText(System.Int32,System.Int32,System.String)">
            <summary>
            Inserts text in the given position.
            </summary>
            <param name="line">Line in virtual coordinates where text should be inserted.</param>
            <param name="column">Column in virtual coordinates where text should be inserted.</param>
            <param name="text">Text to be inserted.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GetCurrentWord">
            <summary>
            Gets word under cursor.
            </summary>
            <returns>Lexem under cursor.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GetCurrentWordColumn">
            <summary>
            Gets column where current word starts.
            </summary>
            <returns>Index of the column of the word start.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.FindRegex(Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint,System.Text.RegularExpressions.Regex,System.Boolean)">
            <summary>
            Looks for specified expression in text.
            </summary>
            <param name="start">Start position for the search.</param>
            <param name="expression">Expression to be found.</param>
            <param name="bSearchInCollapsed">Flag, that specifies whether text can be found in collapsed region.</param>
            <returns>Search results.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.MarkSearchResult(Syncfusion.Windows.Forms.Edit.Implementation.IO.FindResult)">
            <summary>
            Marks search result and sets cursor to the end of the selection.
            </summary>
            <param name="result">Find result that must be marked.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SetCustomBookmark(System.Int32,System.Windows.Forms.PaintEventHandler)">
            <summary>
            Creates custom bookmark for the specified line.
            </summary>
            <param name="iLine">Physical line index.</param>
            <param name="painter">Paint handler.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.RemoveCustomBookmark(System.Int32,System.Windows.Forms.PaintEventHandler)">
            <summary>
            Removes custom bookmark from the specified line.
            </summary>
            <param name="iLine">Physical line index.</param>
            <param name="painter">Paint handler.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.UndoGroupOpen">
            <summary>
            Opens undo group. All futher text changes can be undone with open undo operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.UndoGroupClose">
            <summary>
            Saves and closes undo group.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.UndoGroupCancel">
            <summary>
            Cancels undo grouping.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.CollapseAll">
            <summary>
            Collapses all collapsible regions.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ExpandAll">
            <summary>
            Expands all collapsed regions.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.Collapse">
            <summary>
            Collapses all collapsible regions in currently selected area or in the current line.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.Expand">
            <summary>
            Expands all collapsed regions in currently selected area or in the current line.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.PointToVirtualPosition(System.Drawing.Point)">
            <summary>
            Converts point in client coordinates to the
            virtual position in text.
            </summary>
            <param name="point">Point in client coordinates.</param>
            <returns>Virtual position in the text.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.PointToVirtualPosition(System.Drawing.Point,System.Boolean)">
            <summary>
            Converts point in client coordinates to the
            virtual position in text.
            </summary>
            <param name="point">Point in client coordinates.</param>
            <param name="bUseScrollers">Specifies wether scrollers information should be used.</param>
            <returns>Virtual position in the text.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.PointToPhysicalPosition(System.Drawing.Point)">
            <summary>
            Converts point in client coordinates to the
            phisical position in text.
            </summary>
            <param name="point">Point in client coordinates.</param>
            <returns>Physical position in the text.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ConvertVirtualPositionToPhysical(System.Drawing.Point)">
            <summary>
            Converts virtual coordinates to phisical.
            </summary>
            <param name="point">Point in virtual coordinates.</param>
            <returns>Point in phisical coordinates or (0,0) if given virtual position is not present in the stream.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ConvertVirtualPositionToOffset(System.Drawing.Point)">
            <summary>
            Converts virtual position in text to the offset in stream.
            </summary>
            <param name="point">Virtual position.</param>
            <returns>Offset in the file or stream or -1 if such virtual position is not present in stream.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ConvertOffsetToVirtualPosition(System.Int64)">
            <summary>
            Converts in-stream offset to virtual coordinates.
            </summary>
            <param name="offset">In-Stream offset.</param>
            <returns>Virtual position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.PrintCurrentPage">
            <summary>
            Prints current page on default printer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.PrintSelection">
            <summary>
            Prints selected area on default printer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.PrintNoDialog">
            <summary>
            Prints entire document on default printer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.Print">
            <summary>
            Shows print dialog and gives user ability to start printing.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.PrintPreview">
            <summary>
            Shows print preview dialog.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.PrintPages(System.Int32,System.Int32)">
            <summary>
            Prints pages range.
            </summary>
            <param name="startPageNumber">Start page in range.</param>
            <param name="endPageNumber">End page in range.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SaveAsXML(System.String)">
            <summary>
            Saves document`s XML representation to the file.
            </summary>
            <param name="filename">Name of the file, the document should be saved to.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SaveAsHTML(System.String)">
            <summary>
            Saves document`s HTML representation to the file.
            </summary>
            <param name="filename">Name of the file, the document should be saved to.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SaveAsRTF(System.String)">
            <summary>
            Saves document`s RTF representation to the file.
            </summary>
            <param name="filename">Name of the file, the document should be saved to.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ResetUndoInfo">
            <summary>
            Resets undo information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SetUnderline(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Interfaces.ISnippetFormat)">
            <summary>
            Sets underlining of the specified text region.
            </summary>
            <param name="pointStart">Starting point.</param>
            <param name="pointEnd">End point.</param>
            <param name="format">Format to be used.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.RemoveUnderline(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint)">
            <summary>
            Removes underlining in the specified region.
            </summary>
            <param name="pointStart">Starting point.</param>
            <param name="pointEnd">End point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.RegisterUnderlineFormat(System.Drawing.Color,Syncfusion.Windows.Forms.Edit.Enums.UnderlineStyle,Syncfusion.Windows.Forms.Edit.Enums.UnderlineWeight)">
            <summary>
            Register custom underline format, that can be used when setting region's underlining.
            </summary>
            <param name="color">Color of the underlining.</param>
            <param name="style">Style of the underlining.</param>
            <param name="weight">Weight of the underlining.</param>
            <returns>Newly created format.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.RemeasureLinesWrapping">
            <summary>
            Updates line widths in word-wrap mode.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.Syncfusion#Windows#Forms#Edit#Interfaces#ILongOperationControllerInternal#RaiseOperationStart(Syncfusion.Windows.Forms.Edit.Interfaces.ILongOperation)">
            <summary>
            Raises OperationStarted event.
            </summary>
            <param name="operation">Operation, that is started.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.Syncfusion#Windows#Forms#Edit#Interfaces#ILongOperationControllerInternal#RaiseOperationEnd(Syncfusion.Windows.Forms.Edit.Interfaces.ILongOperation)">
            <summary>
            Raises OperationStopped event.
            </summary>
            <param name="operation">Operation, that is stopped.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.RaiseInsertModeChangedEvent">
            <summary>
            Raises InsertModeChanged event
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.RaiseCursorPositionChangedEvent">
            <summary>
            Raises CursorPositionChanged event
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.RaiseUpdateChangedStateEvent">
            <summary>
            Raises CanUndoRedoChanged event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.RaisePaintUserMarginEvent(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Raises PaintUserMargin event.
            </summary>
            <param name="g"></param>
            <param name="clip"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.RaiseChangingStreamEvent">
            <summary>
            Raises ChangingStream event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.RaiseReadOnlyChangedEvent">
            <summary>
            Raises ReadOnlyChanged event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.RaiseConfigurationChangedEvent">
            <summary>
            Raises ConfigurationChanged event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.RaiseLanguageChangedEvent">
            <summary>
            Raises LanguageChanged event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.OnFakeControlBinded(Syncfusion.Windows.Forms.Edit.FakeEditControl)">
            <summary>
            Puts newly-binded fake edit control to the list and disables word wrapping.
            </summary>
            <param name="control">Fake edit control, binded to this control.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.OnFakeControlUnbinded(Syncfusion.Windows.Forms.Edit.FakeEditControl)">
            <summary>
            Removes binded fake edit control from the list.
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.OnSingeLineChanged">
            <summary>
            Raises SingleLineChanged event and updates form size if needed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ConvertStream(System.IO.Stream,System.String,System.Text.Encoding)">
            <summary>
            Changes encoding and new-line style of the content of the stream.
            </summary>
            <param name="textStream">Input stream.</param>
            <param name="newLine">New new-line style.</param>
            <param name="encoding">New encoding.</param>
            <returns>Newly created stream, or input stream if no changes where done.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ConvertStream(System.IO.Stream,System.String)">
            <summary>
            Changes new-line style of the content of the stream.
            </summary>
            <param name="textStream">Input stream.</param>
            <param name="newLine">New new-line style.</param>
            <returns>Newly created stream, or input stream if no changes where done.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ConvertStream(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Changes encoding and new-line style of the content of the stream.
            </summary>
            <param name="textStream">Input stream.</param>
            <param name="encoding">New encoding, can be null to leave the previous one.</param>
            <returns>Newly created stream, or input stream if no changes where done.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ConvertStream(System.IO.Stream)">
            <summary>
            Sets the same new-line style for the entire stream.
            </summary>
            <param name="textStream">Input stream.</param>
            <returns>Newly created stream or input stream if no changes where done.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ConvertStreamInternal(System.IO.Stream,System.String,System.Text.Encoding)">
            <summary>
            Changes encoding and new-line style of the content of the stream.
            </summary>
            <param name="textStream">Input stream will be closed after usage.</param>
            <param name="newLine">New new-line style can be empty string for autodetection.</param>
            <param name="encoding">New encoding can be null to leave the previous one.</param>
            <returns>Newly created stream or input stream if no changes where done.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.CheckControlState">
            <summary>
            Checks whether control is in workable state,
            if not, throws an exception.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GetCurrentWord(System.Int32@)">
            <summary>
            Gets word under cursor.
            </summary>
            <param name="iWordColumn">OUT start column of the word.</param>
            <returns>Lexem under cursor.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.Syncfusion#Windows#Forms#Edit#Interfaces#ILongOperationController#StartOperation(System.String)">
            <summary>
            Starts new operation.
            </summary>
            <param name="name">Name of the operation.</param>
            <returns>Operation.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.TextInsertInternal(System.Int32,System.Int32,System.String)">
            <summary>
            Inserts text and set`s cursor`s position after the text.
            </summary>
            <param name="iLine">Line where text must be inserted.</param>
            <param name="iColumn">Column where text must be inserted.</param>
            <param name="str">Text to be inserted.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.TextDeleteInternal(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Deletes text in specified range.
            </summary>
            <param name="iLineStart">Start line of text to be deleted.</param>
            <param name="iColumnStart">Start column of text to be deleted.</param>
            <param name="iLineEnd">End line of text to be deleted.</param>
            <param name="iColumnEnd">End column of text to be deleted.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.OnConfigurationChanged">
            <summary>
            Executes some actions after changing configuration.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.OnLanguageChanged">
            <summary>
            Executes some actions after changing configuration language.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.CloseStream">
            <summary>
            Closes input stream wrapper.
            Does not close underlying stream.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ProcessOperationStart(Syncfusion.Windows.Forms.Edit.Interfaces.ILongOperation)">
            <summary>
            Handler of OperationStarted event of parser.
            </summary>
            <param name="operation"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ProcessOperationEnd(Syncfusion.Windows.Forms.Edit.Interfaces.ILongOperation)">
            <summary>
            Handler of OperationStopped event of parser.
            </summary>
            <param name="operation"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GetNextPreRenderedLine(Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine)">
            <summary>
            Gets line that is next to the given one.
            </summary>
            <param name="line">Current line.</param>
            <returns>RenderedLine object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GetFileLanguage(System.String)">
            <summary>
            Get language configuration by given filename.
            Filename can include path.
            If there is not special configuration for such type of files, then
            Default configuration will be used.
            </summary>
            <param name="fileName">Path to the file.</param>
            <returns>Language configuration.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GetLineLength(System.Int32)">
            <summary>
            Gets length of the line.
            </summary>
            <param name="iLine">Index of the line, to be measured.</param>
            <returns>Length of the line.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SetCursorToClientPoint(System.Int32,System.Int32)">
            <summary>
            Sets caret to given (x, y) position.
            Positition is in coordinates of client area.
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SetCursorToPoint(System.Int32,System.Int32)">
            <summary>
            Sets caret to given (x, y) position.
            Position is in coordinates of entire control area.
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.UpdateScrollInfo">
            <summary>
            Updates scrollbars positions to ensure that caret is visible
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SetSelectionStart(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint)">
            <summary>
            Removes current selection and sets new with start
            and end in given point. Later it can be changed using
            <seealso cref="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SetSelectionEnd(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint)"/> method.
            </summary>
            <remarks>
            Note: If you just use <c>SetSelectionStart</c> method,
            no selection will be visible, but it will be created,
            and all commands will work as if selection is set.
            </remarks>
            <param name="point">ParsePoint with position of selection start.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SetSelectionEnd(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint)">
            <summary>
            Sets end of the selection.
            </summary>
            <remarks>
            Note: Selection must be already present.
            <para>Old selection will be simply removed.</para>
            </remarks>
            <param name="point">ParsePoint of end of selection.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GetNearestParsePointRight(System.Int32,System.Int32)">
            <summary>
            Searchs for the <see cref="T:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint"/>
            at the given position.
            </summary>
            <remarks>
            If it can not be found (it is in virtual space), then
            you will get parse point, pointing to the beginning of the
            next line. If it can not be done, ParsePoint, pointing to
            the end of current line will be returned.
            </remarks>
            <param name="iLine">Line index, the ParsePoint is needed for.</param>
            <param name="iColumn">Column index, the ParsePoint is needed for. Can be 0.</param>
            <returns>ParsePoint to the given position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GetNearestParsePointLeft(System.Int32,System.Int32)">
            <summary>
            Searches for the <see cref="T:Syncfusion.Windows.Forms.Edit.Interfaces.IParsePoint"/>
            at the given position.
            </summary>
            <remarks>
            If it can not be found ( or column is 0), and
            if it is in virtual space, then you will get parse point
            to the end of given line; If column is 0, then you will get
            parse point to the end of the previous line( if it is one ).
            </remarks>
            <param name="iLine">Line index the ParsePoint is needed for.</param>
            <param name="iColumn">Column index the ParsePoint is needed for. Can be 0.</param>
            <returns>ParsePoint to the given position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.RegisterKeyCommands">
            <summary>
            Registers default commands.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.RegisterDefaultKeyBindings">
            <summary>
            Registers default commands.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ProcessClickOnLineCollapse(Syncfusion.Windows.Forms.Edit.Interfaces.ILexemLine)">
            <summary>
            Processes click on collapse rectangle of some line.
            </summary>
            <param name="line">Clicked line.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.FillLineCollapsers(Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine,System.Collections.IList,System.Collections.IList)">
            <summary>
            Fills lists of collapsed and uncollapsed regions from specified line.
            </summary>
            <param name="line">Line to be inspected.</param>
            <param name="collapsed">List of collapsed regions.(Must be empty)</param>
            <param name="notCollapsed">List of uncollapsed regions.(Must be empty)</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ProcessCollapsing(System.Collections.IList,System.Boolean)">
            <summary>
            Collapses and expands specified regions in specified line.
            </summary>
            <param name="toCollapse">List of <see cref="T:Syncfusion.Windows.Forms.Edit.Implementation.Parser.CollapsableRegion"/> to be collapsed.</param>
            <param name="bCollapse">If true, regions will be collapsed,
            otherwise - uncollapsed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.IncrementNextLinesYPosition(Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine,System.Single)">
            <summary>
            Increments y coordinates of all lines starting from given one.
            </summary>
            <param name="startLine">Start line.</param>
            <param name="increment">Y coordinate increment.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GetAndConvertFormattings(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Interfaces.ISnippetFormat@)">
            <summary>
            Searches additional formattings for specified region
            and converts it to array of
            <see cref="T:Syncfusion.Windows.Forms.Edit.Utils.AdditionalFormatting"/> objects.
            </summary>
            <param name="startPoint">Start of the region.</param>
            <param name="endPoint">End of the region.</param>
            <param name="afterTextFormat">OUT format that continues after region end.</param>
            <returns>Array of <see cref="T:Syncfusion.Windows.Forms.Edit.Utils.AdditionalFormatting"/> objects.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.DeleteSelected">
            <summary>
            Removes selected text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.DestroyParser">
            <summary>
            Destroys parser.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.CreateParser(Syncfusion.Windows.Forms.Edit.Implementation.IO.StreamsWrapper,Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage)">
            <summary>
            Creates new lexem parser and disposes old one.
            </summary>
            <param name="newWrapper">StreamsWrapper to be used.</param>
            <param name="newLang">Configuration language.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GetLexemUnderCursor">
            <summary>
            Gets lexem under cursor.
            </summary>
            <returns>IRenderedLexem instance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GetLexemUnderCursor(System.Boolean)">
            <summary>
            Gets lexem under cursor.
            </summary>
            <param name="correct">Specifies whather function should
            return nearest lexem if there is no lexem under cursor.</param>
            <returns>IRenderedLexem instance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SmartGetCurrentText">
            <summary>
            If there is some text selected, then check whether it matches (\w|\s|\d)+ mask,
            or if there is no selected text, then just get current lexem.
            </summary>
            <returns>String.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ToggleIndexedBookmark(System.Int32)">
            <summary>
            Toggles indexed bookmark in current line.
            </summary>
            <param name="iIndex"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SwitchIndexedBookmark(System.Int32)">
            <summary>
            Switches indexed bookmark in current line.
            </summary>
            <param name="iIndex"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.InternalGetLineByVirtualY(System.Int32)">
            <summary>
            Gets line by y coordinate.
            </summary>
            <param name="y">Y in control`s coordinates.</param>
            <returns>Line instance or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.InternalGetLineByAbsoluteY(System.Int32)">
            <summary>
            Gets line by y coordinate.
            </summary>
            <param name="y">Y in virtual coordinates.</param>
            <returns>Line instance or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.InternalGetLine(System.Int32,System.Boolean)">
            <summary>
            Gets line by index.
            </summary>
            <param name="iLine">Line index.</param>
            <returns>Line instance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.UpdateContextChoice">
            <summary>
            Updates auto-complete dialog.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GetLineTextInternal(System.Int32)">
            <summary>
            Gets text of the line.
            </summary>
            <param name="iVirtualLine">Index of the line.</param>
            <returns>Text of the line excluding end-line symbols.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GetPhysicalLineTextInternal(System.Int32)">
            <summary>
            Gets text of the line.
            </summary>
            <returns>Text of the line excluding end-line symbols.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.UpdateMeasuringInfo">
            <summary>
            Drops measuring info for lines,
            if it is incorrect according to
            the current maxwidth.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ChangeEncoding(System.Text.Encoding)">
            <summary>
            Changes encoding of the underlying stream.
            </summary>
            <param name="newEncoding">New encoding.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.UpdateScrollerVerticalSize">
            <summary>
            Updates vertical scroller size.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.UpdateScrollerVerticalSize(Syncfusion.Windows.Forms.Edit.IntelliScrollableControl,System.Boolean)">
            <summary>
            Updates vertical scroller size.
            </summary>
            <param name="bUpdateCursor">If true, cursor and it`s position will be updated.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.UpdateScrollerOffsets(Syncfusion.Windows.Forms.Edit.IntelliScrollableControl)">
            <summary>
            Updates offsets of the scrollable area.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.CheckForSupportedData(System.Windows.Forms.IDataObject)">
            <summary>
            Checks whether there is some supported data format
            in given data object.
            </summary>
            <param name="data">Object, that keeps data in different formats.</param>
            <returns>True if given data object contains data in one of the supported formats, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.PasteData(System.Windows.Forms.IDataObject)">
            <summary>
            Inserts data from data object if it contains any
            supported format.
            </summary>
            <param name="data">Object, that keeps data in different formats.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.OnSelectionChanged">
            <summary>
            Raises SelectionChanged event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.CoordinatesBelongsToSelection(System.Int32,System.Int32)">
            <summary>
            Checks, whether given coordinates belong to the selected area.
            </summary>
            <param name="line">Line number.</param>
            <param name="column">Column number.</param>
            <returns>True, if there is some area selected and given coordinates belong to the selection, otherwise - false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.PointBelongsToSelection(System.Drawing.Point)">
            <summary>
            Checks, whether given client coordinates belong to the selected area.
            </summary>
            <param name="mousePoint">Point in client coordinates.</param>
            <returns>True, if there is some area selected and given coordinates belong to the selection, otherwise - false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GenerateXMLDocument">
            <summary>
            Generates XML representation of the document.
            </summary>
            <returns>Generated XML document.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GenerateHTMLText">
            <summary>
            Generates HTML representation of the document.
            </summary>
            <returns>String with HTML text.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GenerateRTFText">
            <summary>
            Generates RTF representation of the document.
            </summary>
            <returns>String with RTF text.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GetTextDrawPath(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint)">
            <summary>
            Calculates region that is used to display text
            withing specified range.
            </summary>
            <param name="startPoint">Start of the range.</param>
            <param name="endPoint">End of the range.</param>
            <returns>Region that is used to display text
            withing specified range.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GetTextDrawRegion(Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint)">
            <summary>
            Calculates region that is used to display text
            withing specified range.
            </summary>
            <param name="startPoint">Start of the range.</param>
            <param name="endPoint">End of the range.</param>
            <returns>Region that is used to display text
            withing specified range.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GetSelectedTextDrawRegion">
            <summary>
            Calculates region, used to draw selected text.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GetSelectedTextDrawPath">
            <summary>
            Calculates region, used to draw selected text.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.InvalidateAll">
            <summary>
            Invalidates client area of control and all attached fake edit controls.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.InvalidateAll(System.Drawing.Rectangle)">
            <summary>
            Invalidates specified area of control and all attached fake edit controls.
            </summary>
            <param name="rect"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.MoveLeft">
            <summary>
            Moves cursor left, if possible.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.MoveUp">
            <summary>
            Move cursor up, if possible.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.MoveDown">
            <summary>
            Moves cursor down if possible.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.MoveRight">
            <summary>
            Moves cursor right if possible.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.MovePageUp">
            <summary>
            Moves caret one page up.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.MovePageDown">
            <summary>
            Moves caret one page down.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.MoveToLineEnd">
            <summary>
            Moves caret to the end of line
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.MoveToLineStart">
            <summary>
            Moves caret to the beginning of line.
            First whitespaces will be skipped.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.MoveLeftWord">
            <summary>
            Moves caret to left by one word, or to the beginning of the current.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.MoveRightWord">
            <summary>
            Moves caret to the right by one word.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.MoveToBeginning">
            <summary>
            Moves caret to the beginning of the file.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.MoveToEnd">
            <summary>
            Moves caret to the end of file.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.StartSelection">
            <summary>
            Start selection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.StopSelection">
            <summary>
            Stops selection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ResetSelection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ToggleInsertMode">
            <summary>
            Changes insert mode.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.Paste">
            <summary>
            Inserts text from clipboard.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.Copy">
            <summary>
            Copies selected text to clipboard.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.Cut">
            <summary>
            Copies selected text to clipboard and deletes it from text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SelectionCancel">
            <summary>
            Removes selection and causes invalidation of the area, was selected.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.DeleteChar">
            <summary>
            Deletes one char to the right.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.DeleteWord">
            <summary>
            Deletes one word to the right.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.DeleteCharLeft">
            <summary>
            Deletes one char to the left.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.DeleteWordLeft">
            <summary>
            Deletes one word to the left.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.FindDialog">
            <summary>
            Shows Find dialog window.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.FindCurrentText">
            <summary>
            Searches text under cursor, or selected text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.FindNext">
            <summary>
            Searches text under cursor, or selected text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GoToDialog">
            <summary>
            Shows Find dialog window.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ReplaceDialog">
            <summary>
            Shows Replace dialog window.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SelectAll">
            <summary>
            Selects all text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.BindKeyboard">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.Undo">
            <summary>
            Undoes last operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.Redo">
            <summary>
            Undoes last operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.Refresh">
            <summary>
            Refreshes screen, frees up memory, deletes a lot of parsepoints.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SwitchCollapsingOff">
            <summary>
            Turns off collapsings.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SwitchCollapsingOn">
            <summary>
            Turns on collapsings and collapses all.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ToggleLineCollapsing">
            <summary>
            Toggles collapsing for current line.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GenerateHTML">
            <summary>
            Generates HTML document and put`s it to the clipboard.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ShowContextPrompt">
            <summary>
            Shows Context Prompt dialog.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ShowContextChoice">
            <summary>
            Shows auto complete dialog.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.BookmarkToggle">
            <summary>
            Sets bookmark to the current line.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.BookmarkClear">
            <summary>
            Clears all bookmarks.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.BookmarkNext">
            <summary>
            Goes to the next bookmark.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.BookmarkPrevious">
            <summary>
            Goes to the next bookmark.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ToggleIndexedBookmark1">
            <summary>
            Toggles bookmark with index 1.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ToggleIndexedBookmark2">
            <summary>
            Toggles bookmark with index 2.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ToggleIndexedBookmark3">
            <summary>
            Toggles bookmark with index 3.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ToggleIndexedBookmark4">
            <summary>
            Toggles bookmark with index 4.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ToggleIndexedBookmark5">
            <summary>
            Toggles bookmark with index 5.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ToggleIndexedBookmark6">
            <summary>
            Toggles bookmark with index 6.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ToggleIndexedBookmark7">
            <summary>
            Toggles bookmark with index 1.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ToggleIndexedBookmark8">
            <summary>
            Toggles bookmark with index 8.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ToggleIndexedBookmark9">
            <summary>
            Toggles bookmark with index 9.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ToggleIndexedBookmark0">
            <summary>
            Toggles bookmark with index 0.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SwitchIndexedBookmark1">
            <summary>
            Switchs bookmark with index 1.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SwitchIndexedBookmark2">
            <summary>
            Switchs bookmark with index 2.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SwitchIndexedBookmark3">
            <summary>
            Switchs bookmark with index 3.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SwitchIndexedBookmark4">
            <summary>
            Switchs bookmark with index 4.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SwitchIndexedBookmark5">
            <summary>
            Switchs bookmark with index 5.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SwitchIndexedBookmark6">
            <summary>
            Switchs bookmark with index 6.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SwitchIndexedBookmark7">
            <summary>
            Switchs bookmark with index 1.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SwitchIndexedBookmark8">
            <summary>
            Switchs bookmark with index 8.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SwitchIndexedBookmark9">
            <summary>
            Switchs bookmark with index 9.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SwitchIndexedBookmark0">
            <summary>
            Switchs bookmark with index 0.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ToggleShowingWhiteSpaces">
            <summary>
            Toggles showing of whitespaces.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.AddTabsToSelection">
            <summary>
            Adds leading tab symbol to the selected lines, or just inserts tab symbol.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.RemoveTabsFromSelection">
            <summary>
            Removes leading tab symbol (or it`s spaces equivalent) from selected lines.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.TestProc">
            <summary>
            Proceedes with some tests.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GenerateDebugMap">
            <summary>
            Generates parsing map of the file.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.GenerateDebugKeyMap">
            <summary>
            Generates parsing map of the file.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.DrawLexemLine(System.Drawing.Graphics,Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine,System.Single,System.Single,System.Boolean)">
            <summary>
            Draws PreRenderedLine on the given graphics object.
            Line must be previously measured, or it will not be rendered correctly.
            </summary>
            <param name="g">Graphics object, line must be rendered to.</param>
            <param name="line">Line, to be rendered.</param>
            <param name="x">X Position of the rendering.</param>
            <param name="y">Y Position of the rendering.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints foreground of the control
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.DrawRightMarginArea(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws user margin area.
            </summary>
            <param name="g">Graphics object, margin area should be drawn on.</param>
            <param name="rect">Rectangle in the area to be drawn.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.DrawArea(System.Drawing.Graphics,System.Drawing.RectangleF,System.Single,System.Single@,System.Boolean)">
            <summary>
            Draws some part of the text area.
            </summary>
            <param name="g">Graphics, text should be drawn on.</param>
            <param name="rect">Rectangle in the area to be drawn.</param>
            <returns>Last rendered line or null if no lines where rendered.</returns>
            <remarks>
            Given area will be drawn without using information about scrollers.
            To scroll area use transformation matrices of the Graphics object.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.DrawAreaBackground(System.Drawing.Graphics,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Draws background of the control area.
            </summary>
            <param name="g">Graphics, text should be drawn on.</param>
            <param name="rect">Rectangle in the area to be drawn.</param>
            <param name="fillBackgroundArea">If false, text backgrounbd
            will not be drawn. Usefull for printing.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.DrawCollapseRect(Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine,System.Drawing.Graphics)">
            <summary>
            Draws rectangle with plus or minus sign
            in the collapsers area if line supports
            collapsing.
            </summary>
            <param name="line">Line, to draw sign for.</param>
            <param name="g">Graphics object, where sign can be drawn.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.DrawBookmark(Syncfusion.Windows.Forms.Edit.Implementation.Parser.RenderedLine,System.Drawing.Graphics)">
            <summary>
            Draws rectangle with plus or minus sign
            in the collapsers area if line supports
            collapsing.
            </summary>
            <param name="line">Line, to draw sign for.</param>
            <param name="g">Graphics object, where sign can be drawn.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.DrawTransparentSelection(System.Drawing.Graphics,System.Single)">
            <summary>
            Draws transparent selection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.DrawWaveLines(System.Drawing.Graphics,Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,Syncfusion.Windows.Forms.Edit.Utils.CoordinatePoint,System.Single)">
            <summary>
            Draws WaveLines.
            </summary>
            <param name="g">Graphics object.</param>
            <param name="start">Start coordinate of the line.</param>
            <param name="end">End coordinate of the line.</param>
            <param name="xScroll">X coordinate of the line start.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.OnBackColorChanged(System.EventArgs)">
            <summary>
            Updates background brush.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.OnGotFocus(System.EventArgs)">
            <summary>
            Raised when control gets input focus.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.OnLostFocus(System.EventArgs)">
            <summary>
            Raised when control loses input focus.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Windows Messages Handler.
            </summary>
            <param name="m">Message.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raised when user pushes down some key.
            All key-presses should be processed by KeyBinder.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raised when some pressed key was released.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raised when user presses some key.
            </summary>
            <remarks>
            Note:
              If <see cref="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_bKeyPressHandeled"/> is true, then no key-presses should be processed.
            </remarks>
            <param name="e"><see cref="T:System.Windows.Forms.KeyPressEventArgs"/> instance with information about key-press.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raised when mouse is moved over the control.
            </summary>
            <param name="e"><see cref="T:System.Windows.Forms.MouseEventArgs"/> with information about mouse movement.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when mouse button is pressed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raised when mouse button is released.
            </summary>
            <param name="e"><see cref="T:System.Windows.Forms.MouseEventArgs"/> with information about mouse.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.OnDoubleClick(System.EventArgs)">
            <summary>
            Processes double-click, selects word.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.OnHScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Processes horizontal scroll event.
            </summary>
            <param name="sender"></param>
            <param name="se"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.OnVScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Processes vertical scroll event.
            </summary>
            <param name="sender"></param>
            <param name="se"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.OnSizeChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ScrollLines(Syncfusion.Windows.Forms.Edit.HybridScrollControl.ScrollDirection,System.Single)">
            <summary>
            Scrolls control vertically by specified amount of lines.
            </summary>
            <param name="fLinesCount">Count of lines to scroll.</param>
            <param name="direction">Direction of scrolling.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.AfterAutoScroll">
            <summary>
            Called before scrolling by timer on every timer tick.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.OnResize(System.EventArgs)">
            <summary>
            Updates data for word-wrapping.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            Changes drag effect to copy if some file is dragged
            over the control.
            </summary>
            <param name="drgevent"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            Inserts text from the dropped to the control file.
            </summary>
            <param name="drgevent"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_CursorManager_CoordinatesChanged(System.Object,System.EventArgs)">
            <summary>
            Handler of the CoordinatesChanged event of the
            cursor manager.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.TextChangedEventHandler(System.Object,Syncfusion.Windows.Forms.Edit.TextChangedEventArgs)">
            <summary>
            Handler of the Delete and Insert events of the lexem parser.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.OnInsertModeChanged">
            <summary>
            Called when Insert Mode changed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            Called when system colors changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.SystemEvents_DisplaySettingsChanged(System.Object,System.EventArgs)">
            <summary>
            Called when display settings changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.UnprocessedKeyPress(System.Windows.Forms.Keys)">
            <summary>
            Handler of the UnprocessedKey event of the KeyCommandBinder.
            </summary>
            <param name="key">Key, that was pressed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.m_parser_LineInstanceDeleted(System.Object,System.EventArgs)">
            <summary>
            Handler of the LineInstanceDeleted event.
            </summary>
            <param name="sender">Line, that was deleted.</param>
            <param name="e">Empty params.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.IdleStreamProcess">
            <summary>
            Parses some lines in stream.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.LinesCountChanged(System.Object,Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs)">
            <summary>
            Handler of the LinesCountChanged of the LexemParser.
            </summary>
            <param name="sender">Sender of the event. Can be null.</param>
            <param name="e"><see cref="T:Syncfusion.Windows.Forms.Edit.ValueChangedEventArgs"/> instance with parameters. Can be null.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ContextChoice_Closed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ContextPrompt_Closed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.BookmarkPointDeleted(System.Object,System.EventArgs)">
            <summary>
            Removes bookmark, assigned to the deleted parsepoint.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.BaseStream_UndoBufferFlush(System.Object,System.EventArgs)">
            <summary>
            Handler for the UndoBufferFlushed event of the changes stream.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.BaseStream_RedoBufferFlush(System.Object,System.EventArgs)">
            <summary>
            Handler for the RedoBufferFlushed event of the changes stream.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.CustomMarkPointDeleted(System.Object,System.EventArgs)">
            <summary>
            Deletes custom bookmark.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.UpdateToolTip(System.Object,Syncfusion.Windows.Forms.Edit.Dialogs.UpdateTooltipEventArgs)">
            <summary>
            Updates text of the tooltip.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.TruncateAndUnindentTooltipText(System.String)">
            <summary>
            Truncates and unindents text of the tooltip.
            </summary>
            <param name="text">Text of the tooltip.</param>
            <returns>String with truncated and unindented text of the tooltip.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.IdleTextParsing(System.Object,System.EventArgs)">
            <summary>
            Processes stream.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ConfiguratorChanged(System.Object,System.EventArgs)">
            <summary>
            Calls OnConfigurationChanged() when user changes smth. withing active configurator.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.FillMenu(System.Object,System.EventArgs)">
            <summary>
            Fills default context menu.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.MenuHandlerCopy(System.Object,System.EventArgs)">
            <summary>
            Handles copy operation.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.MenuHandlerCut(System.Object,System.EventArgs)">
            <summary>
            Handles cut operation.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.MenuHandlerPaste(System.Object,System.EventArgs)">
            <summary>
            Handles paste operation.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.MenuHandlerCollapseAll(System.Object,System.EventArgs)">
            <summary>
            Handles "collapse all" operation.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.MenuHandlerExpandAll(System.Object,System.EventArgs)">
            <summary>
            Handles "expand all" operation.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.doc_BeginPrint(System.Object,System.Drawing.Printing.PrintEventArgs)">
            <summary>
            Initializes data, needed for printing of the document.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.doc_EndPrint(System.Object,System.Drawing.Printing.PrintEventArgs)">
            <summary>
            Remeasures lines using width op the control.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.PrintDocumentPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            Prints single page.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ContextChoice_ItemSelected(Syncfusion.Windows.Forms.Edit.Dialogs.frmContextChoice,Syncfusion.Windows.Forms.Edit.ContextChoiceItemSelectedEventArgs)">
            <summary>
            Raises ContextChoiceItemSelected event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.ContextPrompt_SelectedPromptChanged(Syncfusion.Windows.Forms.Edit.Dialogs.frmContextPrompt,Syncfusion.Windows.Forms.Edit.ContextPromptSelectionChangedEventArgs)">
            <summary>
            Raises ContextPromptSelectionChanged event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.DynamicFormatLayerChanged(System.Object,System.EventArgs)">
            <summary>
            Invalidates control.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.BeginInit">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.EndInit">
            <summary>
            Initializes key bindings.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.DefaultGraphics">
            <summary>
            Default Graphics object.
            Used for measuring.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.Selection">
            <summary>
            Gets selected text range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.CursorManager">
            <summary>
            Gets cursor manager.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.ContextMenuManager">
            <summary>
            Context menu manager.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.CurrentColumn">
            <summary>
            Get or Set current column.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.CurrentLine">
            <summary>
            Get or Set current line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.CurrentPosition">
            <summary>
            Current position of the cursor in virtual coordinates.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.InsertMode">
            <summary>
            Get or Set Insert mode state.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.ShowLineNumbers">
            <summary>
            If true, line numbers are shown.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.ShowMarkers">
            <summary>
            If true, line markers are shown.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.ShowCollapse">
            <summary>
            If true, collapsers are shown.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.ShowWhitespaces">
            <summary>
            Specifies whether to show whitespaces as special symbols.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.VisibleLineCount">
            <summary>
            Get count of lines in file.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.PhysicalLineCount">
            <summary>
            Get count of lines in file.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.Configurator">
            <summary>
            Gets or sets language configuration instance object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.Parser">
            <summary>
            Gets parser for internal usage
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.TextDrawOffset">
            <summary>
            Offset used for drawing text.
            It includes offset for LineNumbers, Markers and Collapsing if they are enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.MaxWidth">
            <summary>
            Get maximum width of the line. Used for WordWrapping.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.WordWrap">
            <summary>
            Get or Set state of the word-wrapping mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.LineNumbersAreaOffset">
            <summary>
            Offset of the line-numbers area.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.CollapsingAreaOffset">
            <summary>
            Offset of the collapsing area.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.GraphicsCompositingQuality">
            <summary>
            Get or Set compositing quality.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.GraphicsInterpolationMode">
            <summary>
            Get or Set interpolation mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.GraphicsSmoothingMode">
            <summary>
            Get or Set smoothing mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.GraphicsTextRenderingHint">
            <summary>
            Get or Set text rendering hint.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.CanUndo">
            <summary>
            Get flag that determines whether undo operation can be done.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.CanRedo">
            <summary>
            Get flag that determines whether redo operation can be done.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.CanCopy">
            <summary>
            Get flag that determines whether copy operation can be done.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.CanPaste">
            <summary>
            Get flag that determines whether paste operation can be done.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.CanCut">
            <summary>
            Get flag that determines whether cut operation can be done.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.SelectedText">
            <summary>
            Get or Set selected text.
            </summary>
            <remarks>
            If there is no text selected and you are setting new
            selected text, it will be inserted in the position of the cursor.
            Otherwise, when there is some text selected,
            it will be deleted and new text will be inserted.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.AutoIndent">
            <summary>
            Get or Set flag that specifies whether AutoIndent is On.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.TabSize">
            <summary>
            Get or Set count of spaces to be placed instead tabulation symbol.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.UseTabs">
            <summary>
            Get or Set tabulation replace sing.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.Text">
            <summary>
            Get or Set plain text representation of the text data, the
            control is working with.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.CurrentLineText">
            <summary>
            Get text of the current line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.CurrentLineInstance">
            <summary>
            Get instance of the current line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.ContextChoiceOn">
            <summary>
            Indicate whether autocomplete dialog is opened and ready for keyboard processing
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.ContextPromptOn">
            <summary>
            Indicate whether ContextPrompt dialog is opened
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.ShowRightUserMargin">
            <summary>
            Get or Set visibility of the right user margin.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.UserMarginRightWidth">
            <summary>
            Get or Set width of the right user margin.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.Languages">
            <summary>
            Get list of available languages.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.Language">
            <summary>
            Get or Set config language currently used.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.ReadOnly">
            <summary>
            Get or Set the value indicating whether changes can be done to the input stream.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.Commands">
            <summary>
            Get list of commands.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.KeyBinder">
            <summary>
            Get root key binder.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.KeyBindingProcessor">
            <summary>
            Get or Set key binding processor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.GroupUndo">
            <summary>
            Get or Set grouping actions for undo/redo.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.CurrentLineInstanceInternal">
            <summary>
            Get instance of the current line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.CursorGraphicalLocation">
            <summary>
            Get location of the cursors right-bottom
            position in control coordinates.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.ContextMenuEnabled">
            <summary>
            Get or Set flag that specifies, whether context menu is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.SingleLineMode">
            <summary>
            Get or Set status of the single line mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.IsModified">
            <summary>
            Get whether content of the file was modified.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.PrintDocument">
            <summary>
            Get print document, that can be used to print the contents of the editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.UpdateContextChoiceList">
            <summary>
            Get or Set value that specifies whether context choice
            should be updated when it is active and user types something.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.TransparentSelection">
            <summary>
            Get or Set transparency of the selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.WantTabs">
            <summary>
            Gets or Sets wether control accepts tabs.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.InsertModeChanged">
            <summary>
            Event that is raised when InsertMode flag has changed
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.CursorPositionChanged">
            <summary>
            Event that is raised when current cursor position has changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.SelectionChanged">
            <summary>
            Event that is raised when text selection is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.CanUndoRedoChanged">
            <summary>
            Event that is raised when Changed State was updated.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.PaintUserMargin">
            <summary>
            Event that is raised when user margin have to be painted.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.OperationStarted">
            <summary>
            Event that is raised on the start of the long operation.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.OperationStopped">
            <summary>
            Even that is raised on the end of the long operation.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.ChangingStream">
            <summary>
            Event that is raised when currect stream instance is to be changed to some other one.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.ReadOnlyChanged">
            <summary>
            Event that is raised when ReadOnly mode changes.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.RegisteringDefaultKeyBindings">
            <summary>
            Event that is raised when class registers default key bindings.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.RegisteringKeyCommands">
            <summary>
            Event that is raised when class registers commands for key-binding.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.ConfigurationChanged">
            <summary>
            Event that is raised after changing configuration.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.LanguageChanged">
            <summary>
            Event that is raised after changing parsers language.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.DrawLineMark">
            <summary>
            Event that is raised when line mark should be drawn.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.ContextChoiceBeforeOpen">
            <summary>
            Event that is raised before the ContextChoice dialog is shown to user.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.ContextChoiceUpdate">
            <summary>
            Event that is raised when auto-complete dialog should be updated.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.ContextChoiceOpen">
            <summary>
            Event that is raised when auto-complete dialog has been opened.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.ContextChoiceClose">
            <summary>
            Event that is raised when auto-complete dialog has been closed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.ContextPromptBeforeOpen">
            <summary>
            Event that is raised before context prompt should be shown.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.ContextPromptOpen">
            <summary>
            Event that is raised when context prompt should be shown.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.ContextPromptClose">
            <summary>
            Event that is raised when context prompt should be shown.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.UpdateContextToolTip">
            <summary>
            Event that is raised when text should be updated.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.MenuFill">
            <summary>
            Event, that is raised, when user should fill menu with menu items.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.SingleLineChanged">
            <summary>
            Raised, when single line mode has been changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.TextChanged">
            <summary>
            Event, that is raised when text is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.TextChanging">
            <summary>
            Event, that is raised when text is to be changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.ContextChoiceItemSelected">
            <summary>
            Event, that is raised when some contecxt choice list item gets selected.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.ContextPromptSelectionChanged">
            <summary>
            Event, that is raised when context prompt selection is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.InvalidateArea">
            <summary>
            Event, that is raised control's area needs to be invalidated.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.StreamEditControl.WordWrapChanged">
            <summary>
            Event, that is raised when word-wrap mode is changed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.StreamEditControl.UndoGroup">
            <summary>
            Group of the actions that must be undone with one undo operation.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.UndoGroup.StartActionsCount">
            <summary>
            Starting count of actions in undo queue.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.UndoGroup.EndActionsCount">
            <summary>
            Ending count of actions in undo queue.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.StreamEditControl.UndoGroup.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes structure by Start and End values.
            </summary>
            <param name="iStart">Starting count of actions in undo queue.</param>
            <param name="iEnd">Ending count of actions in undo queue.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.StreamEditControl.UndoGroup.GroupLength">
            <summary>
            Gets count of actions in undo queue which belongs to the group.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.StreamEditControl.OperationData">
            <summary>
            Information about insert/delete operation.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.OperationData.Insert">
            <summary>
            True if operation is an insert operation.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.OperationData.StartLine">
            <summary>
            Start line of the changes.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.OperationData.StartColumn">
            <summary>
            Start column of the changes.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.OperationData.EndLine">
            <summary>
            End line of the changes.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.OperationData.EndColumn">
            <summary>
            End column of the changes.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.StreamEditControl.OperationData.InsertText">
            <summary>
            Text that was inserted.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.FileEditControl.DEF_DATA_BUFFER_SIZE">
            <summary>
            Size of the data blocks used for copying file content to memory stream if file sharing is enabled.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.FileEditControl.m_file">
            <summary>
            Currently opened file.
            If null, it means that we are working not with a file stream or
            if m_fileName is not empty, then we are working with some conversion layer.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.FileEditControl.m_fileName">
            <summary>
            Name of the opened file.
            If empty, editor is working not with a file.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.FileEditControl.m_saveDialog">
            <summary>
            SaveAs dialog.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.FileEditControl.m_openDialog">
            <summary>
            Open file dialog.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.FileEditControl.m_bConvertOnLoad">
            <summary>
            If true, file should be converted when loading.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.FileEditControl.m_bSharedFileMode">
            <summary>
            Specifies whether file is opened in shared mode.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.FileEditControl.LoadFile(System.String)">
            <summary>
            Load file and configuration for it.
            </summary>
            <param name="fileName">Name of the file to load.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.FileEditControl.LoadFile">
            <summary>
            Shows open file dialog to user and opens selected file.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.FileEditControl.Save">
            <summary>
            Saves text to file.
            </summary>
            <returns>True if file was successfully saved.
            False is returned only if user has cancelled saving somehow.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.FileEditControl.SaveAs">
            <summary>
            Shows SaveAs dialog and saves data to specified file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.FileEditControl.SaveFile(System.String)">
            <summary>
            Saves content to the specified file.
            </summary>
            <param name="fileName">Name of the file to which the text has to be saved.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.FileEditControl.SaveModified">
            <summary>
            Prompts the user with a save dialog if the current
            file was modified and saves file if needed.
            </summary>
            <returns>False if file was changed but user
            decided not to save file, otherwise true.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.FileEditControl.NewFile">
            <summary>
            Creates new empty file with default coloring.
            </summary>
            <returns>True if file was created, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.FileEditControl.NewFile(Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage)">
            <summary>
            Creates new empty file with specified coloring.
            </summary>
            <param name="lang">Language to be used for text coloring.</param>
            <returns>True if file was created, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.FileEditControl.LoadFile(System.String,System.Boolean,System.Boolean)">
            <summary>
            Load file and configuration for it.
            </summary>
            <param name="fileName">Name of the file to load.</param>
            <param name="convert">Specifies whether file should be corrected on load.</param>
            <param name="shared">Specifies whether file is opened in shared mode, when entire file is loaded into memory.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.FileEditControl.FillInFilters(System.Windows.Forms.FileDialog)">
            <summary>
            Fills in filters in dialog.
            </summary>
            <param name="dialog">Dialog whose filters should be updated.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.FileEditControl.New">
            <summary>
            Creates empty stream and makes editor to edit it.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.FileEditControl.New(Syncfusion.Windows.Forms.Edit.Interfaces.IConfigLanguage)">
            <summary>
            Creates empty stream and makes editor to edit it.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.FileEditControl.ChangeEncoding(System.Text.Encoding)">
            <summary>
            Changes encoding of the underlying stream.
            </summary>
            <param name="newEncoding">New encoding.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.FileEditControl.CloseStream">
            <summary>
            Closes input stream wrapper.
            Does not close underlying stream.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.FileEditControl.OnConfigurationChanged">
            <summary>
            Updates filetrs in Save and Open Dialog.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.FileEditControl.#ctor">
            <summary>
            Calls base constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.FileEditControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.FileEditControl.ConvertOnLoad">
            <summary>
            Get or Set sign, whether file should be converted when loading.
            </summary>
            <remarks>Such file conversion is needed if file contains different new-line symbols or sequences.</remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.FileEditControl.FileOpened">
            <summary>
            Get or Set file stream, that is used as an input.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.FileEditControl.FileName">
            <summary>
            Get or set name of the currently opened file.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.FileEditControl.SharedFileMode">
            <summary>
            Gets or Sets whether file should be opened in shared mode.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.IScrollBar">
            <summary>
            Defines	an interface that	provids	all	properties to	configure	a	scrollbar.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.IScrollBar.UpdateScrollInfo">
            <summary>
            Updates	the	scrollbar	with latest	changes	to current position	and	scrollable range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.IScrollBar.LargeChange">
            <summary>
            Gets or	sets a value to	be added to	or subtracted	from to	the	Value	property when	the	scroll box is	moved	a	large	distance.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.IScrollBar.Maximum">
            <summary>
            Gets or	sets the upper limit of	values of	the	scrollable range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.IScrollBar.Minimum">
            <summary>
            Gets or	sets the lower limit of	values of	the	scrollable range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.IScrollBar.SmallChange">
            <summary>
            Gets or	sets the value to	be added to	or subtracted	from to	the	Value	property when	the	scroll box is	moved	a	small	distance.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.IScrollBar.Value">
            <summary>
            Gets or	sets a numeric value that	represents the current position	of the scroll	box	on the scroll	bar	control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.IScrollBar.Enabled">
            <summary>
            Gets or	sets a numeric enabled that	represents the current position	of the scroll	box	on the scroll	bar	control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.IScrollBar.SupportsThumbTrack">
            <summary>
            Enables	or disbales	thumbtrack feature for the scrollbar.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.IScrollBar.IsThumbTracking">
            <summary>
            Checks if	scrollbar	is in	thumb	drag mode
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.IScrollBar.SupportsScrollTips">
            <summary>
            Specifies	if scrool	tips should	be shown for the scrollbar.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ReflectScrollBar.WndProc(System.Windows.Forms.Message@)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ReflectScrollBar.OnHandleCreated(System.EventArgs)">
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ReflectScrollBar.IsThumbTracking">
            <summary>
            true if currently in thumb drag mode
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ReflectScrollBar.SupportsThumbTrack">
            <summary>
            Specifies if the associated control should scroll while the user is dragging a scrollbars thumb
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ReflectScrollBar.SupportsScrollTips">
            <summary>
            Specifies if the parent control should show scroll tips while the user is dragging a scrollbars thumb
            </summary>
            <remarks>
            <see cref="T:Syncfusion.Windows.Forms.Edit.ScrollControl"/> checks this property to determine if scrolltips should be displayed.
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.IScrollBarContainer">
            <summary>
            Provides a proerty that	returns	a	reference	to a scrollbar contained in	a	user control.
            </summary>
            <remarks>
            Splittercontrol	and	Workbookcontrol	check	for	IScrollBarContainer	to get the
            scrollbar. This	enables	you	to replaces	the	shared scrollbar with	any	user control
            that also	has	a	scrollbar. An	example	is the <see cref="T:Syncfusion.Windows.Forms.RecordNavigationScrollBar"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.IScrollBarContainer.ScrollBar">
            <summary>
            Returns	the	contained	scrollbar	in a user	control.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper">
            <summary>
            ScrollbarWrapper manages scrollbars	for	a	control	and	hides	details	about	the	scrollbar
            from the control that	utilizes ScrollBarWrapper. This	allows you to	replace	the	concrete
            ScrollBar	with <see cref="T:Syncfusion.Windows.Forms.Edit.ReflectScrollBar"/>, <see cref="T:Syncfusion.Windows.Forms.FlatScrollBar"/> a <see cref="T:System.Windows.Forms.ScrollBar"/>
            or any custom	scrollbar	implementation.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.#ctor(System.Windows.Forms.Control,System.Windows.Forms.ScrollBars)">
            <summary>
            	<para>Initializes	a	new	instance of	the	<see cref="T:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper"/>	class.</para>
            </summary>
            <param name="parent">The parent	control.</param>
            <param name="sbType">The scrollbar type: horizontal	or vertical.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.#ctor(System.Windows.Forms.Control,System.Windows.Forms.ScrollBars,System.Windows.Forms.ScrollBar)">
            <summary>
            	<para>Initializes	a	new	instance of	the	<see cref="T:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper"/>	class.</para>
            </summary>
            <param name="parent">The parent	control.</param>
            <param name="sbType">The scrollbar type: horizontal	or vertical.</param>
            <param name="scrollBar">The	scrollbar	object to	be managed by	this instance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.Dispose">
            <summary>
            Implements the <see cref="M:System.IDisposable.Dispose"/> method	and	release	all	managed	resource for this	object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.CopyTo(Syncfusion.Windows.Forms.Edit.ScrollBarWrapper)">
            <summary>
            Copy all information to	another	<see cref="T:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper"/> object.
            </summary>
            <param name="target">The <see cref="T:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper"/>	to receive all copied	information.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.OnInnerValueChanged(System.Object,System.EventArgs)">
            <summary>
            	<para>Raises the <see cref="E:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.ValueChanged"/> event.</para>
            </summary>
            <param name="sender">.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that	contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.BeginUpdate">
            <summary>
            Suspends updating	the	scrollbar	until	<see cref="M:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.EndUpdate"/>	is called.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.EndUpdate">
            <summary>
            Resumes	updating the scrollbar after a <see cref="M:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.BeginUpdate"/> call.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.FetchScrollBar">
            <summary>
            Fetches	scrollbar	information	from the managed scrollbar object	and	updates	the	information
            in the <see cref="T:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper"/>	object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.InitScrollBar">
            <summary>
            Applies	scrollbar	information	to the managed scrollbar object	bases	on the information
            in the current <see cref="T:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper"/>	object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.ReflectScrollMessage(System.Windows.Forms.Message@)">
            <summary>
            Call this	for	reflected	scrollbars from	your parent	controls <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)"/> method	if you
            want to	support	reflected	scrollbars (those	window scrollbars	that you enable	with WS_VSCROLL	and
            WS_HSCROLL window	styles).
            </summary>
            <param name="m">The	<see cref="T:System.Windows.Forms.Message"/>	that was passed	as argument	to <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.SendScrollMessage(System.Windows.Forms.ScrollEventType)">
            <summary>
            Sends	or emulates	a	scroll event.
            </summary>
            <param name="et"></param>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.Scroll">
            <summary>
            	<para>Occurs when	the	scroll box has
             been
             moved by	either a mouse or	keyboard action.</para>
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.ValueChanged">
            <summary>
            	<para>Occurs when	the	<see cref="P:System.Windows.Forms.ScrollBar.Value"/>	property has changed,	either by	a
            <see cref="E:System.Windows.Forms.ScrollBar.Scroll"/> event or	programatically.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.SupportsThumbTrack">
            <summary>
            Specifies	if the control should	scroll while the user	is dragging	a	scrollbars thumb
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.SupportsScrollTips">
            <summary>
            Specifies	if the parent	control	should show	scroll tips	while	the	user is	dragging a scrollbars	thumb
            </summary>
            <remarks>
            <see cref="T:Syncfusion.Windows.Forms.Edit.ScrollControl"/>	checks this	property to	determine	if scrolltips	should be	displayed.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.InnerScrollBar">
            <summary>
            A	reference	to the ScrollBar that	is contained in	this wrapper class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.IsReflect">
            <summary>
            true if	this is	a	Reflecting scrollbar,	false	if it	is a simple	scrollbar
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.IsThumbTracking">
            <summary>
            true if	currently	in thumb drag	mode
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.IsEmpty">
            <summary>
            true if	this is	a	Reflecting scrollbar,	false	if it	is a simple	scrollbar
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.Locked">
            <summary>
            Checks if	updating is	locked.	See	<see cref="M:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.BeginUpdate"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.LargeChange">
            <summary>
            Gets or	sets a value to	be added to	or subtracted	from to	the	Value	property when	the	scroll box is	moved	a	large	distance.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.Maximum">
            <summary>
            Gets or	sets the upper limit of	values of	the	scrollable range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.Minimum">
            <summary>
            Gets or	sets the lower limit of	values of	the	scrollable range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.SmallChange">
            <summary>
            Gets or	sets the value to	be added to	or subtracted	from to	the	Value	property when	the	scroll box is	moved	a	small	distance.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.Value">
            <summary>
            Gets or	sets a numeric value that	represents the current position	of the scroll	box	on the scroll	bar	control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.Enabled">
            <summary>
            Gets or	sets a numeric enabled that	represents the current position	of the scroll	box	on the scroll	bar	control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ScrollBarWrapper.Parent">
            <summary>
            Returns	a	reference	to the parent	control.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.BeginUpdateOptions">
            <summary>
            BeginUpdateOptions details which drawing operations should be performed during a batch of updates.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.BeginUpdateOptions.None">
            <summary>
            The control suspends any drawing and invalidating and will do a complete refresh when EndUpdate is called.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.BeginUpdateOptions.Invalidate">
            <summary>
            Regions that need to be redrawn afterward should be marked invalid by calling the controls Invalidate method.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.BeginUpdateOptions.ScrollWindow">
            <summary>
            ScrollWindow will scroll the window.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.BeginUpdateOptions.SynchronizeScrollBars">
            <summary>
            Scrollbars should be synchronized with the current scroll position.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Edit.BeginUpdateOptions.InvalidateAndScroll">
            <summary>
            Allows invalidating regions, scrolling and synchronizes the scrollbar thumb.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.ExceptionManager">
            <summary>
            Provides a global hook for exceptions that have been catched inside the framework and gives you
            the option to provide specialized handling of the exception. You can also temporarily suspend and resume
            catching exceptions.
            </summary>
            <remarks>
            The Syncfusion framework notifies <see cref="T:Syncfusion.Windows.Forms.Edit.ExceptionManager"/> about exceptions that
            are catched by calling <see cref="!:ExceptionManager.RaiseExceptionCatched"/> or <see cref="T:Syncfusion.Windows.Forms.Edit.ExceptionManager"/>.<para/>
            The <see cref="!:ExceptionManager.RaiseExceptionCatched"/>  method will raise the <see cref="!:ExceptionCatched"/>
            event. By handling the <see cref="!:ExceptionCatched"/> event your code can analyze the exception that was catched
            and optionally let it bubble up by rethrowing the exception.<para/>
            Your code can also temporariliy suspend and resume catching exceptions. This is usefull if you want to provide your
            own exception handling. Just call <see cref="M:Syncfusion.Windows.Forms.Edit.ExceptionManager.SuspendCatchExceptions"/> to disable handling exceptions and <see cref="M:Syncfusion.Windows.Forms.Edit.ExceptionManager.ResumeCatchExceptions"/>
            to resume catching exceptions.<para/>
            You also have the options to disable catching exceptions alltogether by setting <see cref="P:Syncfusion.Windows.Forms.Edit.ExceptionManager.PassThroughExceptions"/> to true.<para/>
            Note: All static settings for this class are thread local.
            </remarks>
            <example>
            <code lang="C#">
            // The following example demonstrates temporarily suspending exception catching when calling a base class version
            // of a method.
            
                    protected override void OnMouseDown(MouseEventArgs e)
                        {
                        ExceptionManager.SuspendCatchExceptions();
            
                        try
                        {
                            base.OnMouseDown(e);
                            ExceptionManager.ResumeCatchExceptions();
                        }
                        catch (Exception ex)
                        {
                            ExceptionManager.ResumeCatchExceptions();
            
                                // Notify exception manager about the catched exception and
                                // give it a chance to optionally rethrow the exception if necessary
                                // (e.g. if this OnMouseDown was called from another class that
                                // wants to provide its own exception handling).
                            if (!ExceptionManager.RaiseExceptionCatched(this, ex))
            					throw ex;
            
                            // handle exception here
                            MessageBox.Show(ex.ToString());
                        }
                    }
            </code>
            </example>
            <example>
            <code lang="C#">
            // This code snippet shows how exceptions are handled within the framework.
                            try
                            {
                                CurrentCell.Refresh();
                            }
                            catch (Exception ex)
                            {
                                TraceUtil.TraceExceptionCatched(ex);
                                if (!ExceptionManager.RaiseExceptionCatched(this, ex))
            						throw ex;
                            }
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ExceptionManager.SuspendCatchExceptions">
            <summary>
            Temporariliy suspend and resume catching exceptions. Call <see cref="M:Syncfusion.Windows.Forms.Edit.ExceptionManager.SuspendCatchExceptions"/> to disable handling exceptions and <see cref="M:Syncfusion.Windows.Forms.Edit.ExceptionManager.ResumeCatchExceptions"/>
            to resume catching exceptions.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ExceptionManager.ResumeCatchExceptions">
            <summary>
            Temporariliy suspend and resume catching exceptions. Call <see cref="M:Syncfusion.Windows.Forms.Edit.ExceptionManager.SuspendCatchExceptions"/> to disable handling exceptions and <see cref="M:Syncfusion.Windows.Forms.Edit.ExceptionManager.ResumeCatchExceptions"/>
            to resume catching exceptions.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Edit.ExceptionManager.ShouldCatchExceptions">
            <summary>
            Determines if exceptions should be catched or if they should bubble up.  <see cref="!:RaiseExceptionCatched"/>
            calls this method.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Edit.ExceptionManager.PassThroughExceptions">
            <summary>
            Lets you disable catching exceptions alltogether by setting <see cref="P:Syncfusion.Windows.Forms.Edit.ExceptionManager.PassThroughExceptions"/> to true.<para/>
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.ChangingStreamEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Edit.InvalidateAreaEventHandler">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
