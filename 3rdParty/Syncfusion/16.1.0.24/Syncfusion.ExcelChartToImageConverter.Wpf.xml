<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.ExcelChartToImageConverter.Wpf</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.ExcelChartToImageConverter.NamespaceDoc">
            <summary>
            The Syncfusion.ExcelChartToImageConverter namespace contains classes for converting Excel charts into image.
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter">
            <summary>
            Excel Chart To Image Converter.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter._chart">
            <summary>
            To assign the input chart
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.m_scalingMode">
            <summary>
            Represent the quality of Image
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.GetChartStream(System.Object)">
            <summary>
            Assign the Sfchart Stream to input stream
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.Is3DConversionSupported">
            <summary>
            Check whether the chart type is 3D conversion supported.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.GetChart(Syncfusion.XlsIO.IChart)">
            <summary>
            Excel chart to sf Chart conversion.
            </summary>
            <param name="excelChart">Excel chart</param>
            <returns>SfChart</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.IsAutoChartTitle(Syncfusion.XlsIO.Implementation.Charts.ChartImpl)">
            <summary>
            Boolean value indicates whether the chart have automatic title. 
            XlsIO specific as behavior is differs with Presentation Chart
            </summary>
            <param name="chartImpl">input chart</param>
            <returns>the boolean value</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.TryAndSetPlotAreaSize(Syncfusion.XlsIO.Implementation.Charts.ChartImpl,System.Boolean@)">
            <summary>
            Check and returns the plot area margins based on the input values
            </summary>
            <param name="chartImpl">input Xlsio/Office chart chart object</param>
            <param name="isInnerLayoutTarget">boolean value indicates whether the layout is inner</param>
            <returns>the calculated manual rectangle layout of plot area</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.TryCloneSecondaryAxes(Syncfusion.UI.Xaml.Charts.SfChart,Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            Clone the formatttings for the chart for hidden secondary axis
            </summary>
            <param name="sfChart">input sfchart</param>
            <param name="xAxis">secondary x axis</param>
            <param name="yAxis">secondary y axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.ResetChartCommonData">
            <summary>
            Reset the chart converter properties
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.GetEmptyLineStyle(System.Windows.Media.Brush@)">
            <summary>
            Returns the empty linestyle for axis
            </summary>
            <param name="brush">output brush</param>
            <returns>the invisible line style</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.SetAxisReplacement(Syncfusion.ExcelChartToImageConverter.SfChartExt,Syncfusion.XlsIO.IChart,System.Boolean@)">
            <summary>
            Check For any need of axis replacement respect to its values
            </summary>
            <param name="sfChart">input sfchart object</param>
            <param name="chart">input xlsio / office chart object</param>
            <param name="isChanged">boolean value indicates whether axis replaced</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.AddTickMarks(Syncfusion.ExcelChartToImageConverter.SfChartExt,System.Double,System.Double,System.Int32,System.Windows.Media.Brush,System.Double,System.Boolean)">
            <summary>
            Add the line annotation like major and minor tick mark in the chart
            </summary>
            <param name="sfChart">input sfchart</param>
            <param name="topValue">Y1 position value</param>
            <param name="bottomValue">Y2 position value</param>
            <param name="interval">Interval between tickmarks</param>
            <param name="axisLineColor">color of tick marks</param>
            <param name="thickness">thickness of tickmark</param>
            <param name="isMajor">boolean value indicates whether tick mark is major or minor</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.GetChart3D(Syncfusion.XlsIO.IChart)">
            <summary>
            Converts an Excel Chart instance into Syncfusion 3D Chart instance.
            </summary>
            <param name="excelChart">Excel chart</param>
            <returns>SfChart3D</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.SaveAsImage(Syncfusion.XlsIO.IChart,System.IO.Stream)">
            <summary>
            Excel chart to sf Chart conversion.
            </summary>
            <param name="excelChart">Excel chart</param>
            <param name="imageAsStream">Output Stream</param>
            <returns>SfChart</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.Save(Syncfusion.UI.Xaml.Charts.ChartBase,System.Object)">
            <summary>
            Sfchart element is save as to image stream.
            </summary>
            <param name="sfchart">Sfchart Element</param>
            <param name="stream">output Stream</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.Rendered(System.Windows.Media.Visual,System.Windows.Size,System.Object)">
            <summary>
            Sf chart is rendered and save as to stream
            </summary>
            <param name="visual">Sfchart element</param>
            <param name="size">sf chart size</param>
            <param name="stream">output Stream</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.GetRenderTargetBitmap(System.Windows.Size)">
            <summary>
            Get RenderTargetBitmap object.
            </summary>        
            <param name="size">sf chart size</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.GetChartSerie(Syncfusion.XlsIO.ExcelChartType,Syncfusion.ExcelChartToImageConverter.SfChartExt,Syncfusion.XlsIO.IChartSerie,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean)">
            <summary>
            Get Sf chart serie for Excel Chart serie
            </summary>
            <param name="serieType">Represent the Series Type</param>
            <param name="sfChart">Sfchart</param>
            <param name="serie">Excel Serie</param>
            <param name="isPie">ispie boolean for piechart</param>
            <param name="isStock">isstock boolean for stockchart</param>
            <param name="isRadar">boolean value indicates whether the chart contains radar serie</param>
            <param name="isNullSerie">boolean value indicates whether series contains the null values or not</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.SetEmptySeriesValues(Syncfusion.UI.Xaml.Charts.ChartSeriesBase,Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            Set the empty values to the chart series and the series name
            </summary>
            <param name="sfChartSerie">input Sfchart serie</param>
            <param name="chartSerieImpl">input xlsio chart serie</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.GetChartSerie3D(Syncfusion.XlsIO.ExcelChartType,Syncfusion.UI.Xaml.Charts.SfChart3D,Syncfusion.XlsIO.IChartSerie,System.Boolean@,System.Boolean@,System.Boolean)">
            <summary>
            Get Sf chart serie for Excel Chart serie
            </summary>
            <param name="serieType">Represent the Series Type</param>
            <param name="sfChart">Sfchart</param>
            <param name="serie">Excel Serie</param>
            <param name="isPie">ispie boolean for piechart</param>
            <param name="isStock">isstock boolean for stockchart</param>
            <param name="isNullSerie">boolean value indicates whether the series is empty or not</param>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.ChartToImageConverter.ScalingMode">
            <summary>
            It's represent the chart image Scaling 
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.ViewModel">
            <summary>
            It's an chart data source. Collection of datapoint's.
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.ChartPoint">
            <summary>
            It's represent the chart datapoint.
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.ChartCommon">
            <summary>
            It's assign the Excel Chart properties to SfChart.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartCommon.DEF_BORDER_WIDTH_EXCEL">
            <summary>
            Border width constant in MS EXCEL
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartCommon.DEF_LINE_THICKNESS_XML">
            <summary>
            Represents the default line thickness in XML workbook
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartCommon.DEF_LINE_THICKNESS_BINARY">
            <summary>
            Represents the default line thickness in Binary workbook
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartCommon.parentWorkbook">
            <summary>
            Parent workbook internal object
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartCommon.m_def_MarkerType_Array">
            <summary>
            Represents the marker type value in integer
            from enum ExcelChartType (XlsIO) and OfficeChartType (OfficeChart)
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ChartCommon.numberFormatSheet">
            <summary>
            Worksheet used for number format
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.#ctor">
            <summary>
            Constructor initialize the worksheet
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SetChartSize(Syncfusion.XlsIO.IChart)">
            <summary>
            Set the chart size.
            </summary>
            <param name="_chart">input chart</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.ApplyNumberFormat(System.Object,System.String)">
            <summary>
            Apply a number format to value.
            </summary>
            <param name="value">Value.</param>
            <param name="numberFormat">number format to be applied</param>
            <returns>returns numberformat applied string.</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfNumericalAxisCommon(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl)">
            <summary>
            It's assign the Excel chart numerical axis settings to Sf chart Axis
            </summary>
            <param name="sfaxis">SfAxis3D</param>
            <param name="serieValAxis">XlsIO value axis</param>
            <param name="oppositeAxis">XlsIO category axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.IsCategoryAxisAuto(Syncfusion.XlsIO.Implementation.Charts.ChartAxisImpl)">
            <summary>
            Indicates whether the axis is category and it is not automatic
            </summary>
            <param name="axis">input axis</param>
            <returns>the boolean value</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.IsStacked100AxisFormat(Syncfusion.XlsIO.Implementation.Charts.ChartAxisImpl)">
            <summary>
            Returns the boolean value indicates axis format is depends on the stacked 100 format
            </summary>
            <param name="axis">input chart object</param>
            <returns>the boolean value shows is stacked 100 format</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetSourceNumberFormat(Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl)">
            <summary>
            Get the referenced (first series and first cell) number format from axis
            </summary>
            <param name="axis">input axis</param>
            <returns>the referenced numberformat</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfNumericalAxis(Syncfusion.ExcelChartToImageConverter.CustomNumericalAxis,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl)">
            <summary>
            It's assign the Excel chart numerical axis 2D settings to Sf chart Axis 2D
            </summary>
            <param name="sfaxis">SfAxis</param>
            <param name="xlsiovalue">XlsIO value axis</param>
            <param name="categoryAxis">XlsIO category axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetDisplayUnitValue(System.Int32)">
            <summary>
            Gets the dipaly unit numerical value.
            </summary>        
            <param name="displayUnit">display unit enum in integer</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfNumericalAxis3D(Syncfusion.ExcelChartToImageConverter.CustomNumericalAxis3D,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl,Syncfusion.XlsIO.Implementation.Charts.ChartCategoryAxisImpl)">
            <summary>
            It's assign the Excel chart numerical axis 3D settings to Sf chart Axis 3D
            </summary>
            <param name="sfaxis">SfAxis3D</param>
            <param name="xlsiovalue">XlsIO value axis</param>
            <param name="categoryAxis">XlsIO category axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.NumericalAxisBoundChanged(System.Object,Syncfusion.UI.Xaml.Charts.ChartAxisBoundsEventArgs)">
            <summary>
            Method triggered when the numerical axis bound changed 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetLabelTemplate(Syncfusion.XlsIO.Implementation.Charts.ChartAxisImpl)">
            <summary>
            Return the Label Template for Axis 
            </summary>
            <param name="chartAxisImpl">input chart axis</param>
            <returns>the custom template created from the input</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfGridLines(Syncfusion.XlsIO.Implementation.Charts.ChartAxisImpl,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            It's assign the Excel chart axis gridline settings to Sf chart axis gridline
            </summary>
            <param name="xlsioAxis">XlsIO axis.</param>
            <param name="sfAxis">Sf axis.</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfCategoryAxisCommon(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.XlsIO.Implementation.Charts.ChartCategoryAxisImpl,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl)">
             <summary>
             It's assign the Excel chart category axis settings to Sf chart Axis
             </summary>
            <param name="sfCatAxis">Sfchart category axis</param>
            <param name="xlsioCatAxis">XlsIO category axis</param>
            <param name="xlsioValAxis">XlsIO Value axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfCategoryAxis(Syncfusion.ExcelChartToImageConverter.CustomCategoryAxis,Syncfusion.XlsIO.Implementation.Charts.ChartCategoryAxisImpl,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl)">
            <summary>
            It's assign the Excel chart category axis settings to Sf chart Axis
            </summary>
            <param name="categoryAxis">SfChart category axis</param>
            <param name="xlsioCatAxis">XlsIO category axis</param>
            <param name="xlsioValAxis">XlsIO value axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfCategoryAxis3D(Syncfusion.UI.Xaml.Charts.CategoryAxis3D,Syncfusion.XlsIO.Implementation.Charts.ChartCategoryAxisImpl,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl)">
            <summary>
            It's assign the Excel chart category axis settings to Sf chart Axis
            </summary>
            <param name="categoryAxis">SfChart category axis</param>
            <param name="xlsioCatAxis">XlsIO category axis</param>
            <param name="xlsioValAxis">XlsIO value axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.OnAxisLabelCreated(System.Object,Syncfusion.UI.Xaml.Charts.LabelCreatedEventArgs)">
            <summary>
            Invoked after axis label crated.
            </summary>
            <param name="sender">Chart axis.</param>
            <param name="labelCreatedEventArgs">Chart label args.</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.CategoryAxis_AxisBoundsChanged(System.Object,Syncfusion.UI.Xaml.Charts.ChartAxisBoundsEventArgs)">
            <summary>
            Event method called on Category/DateTime Axis bounds are changed
            </summary>
            <param name="sender">the sender axis object</param>
            <param name="e">Axisbounds changed event arguments</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.PositioningLabelsOnAxisLabels(System.Object,Syncfusion.UI.Xaml.Charts.ChartAxisBoundsEventArgs)">
            <summary>
            Position the axis labels when the between ticks set
            </summary>
            <param name="sender">input axis object</param>
            <param name="e">the eventargs</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfLogerthmicAxisCommon(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl,Syncfusion.XlsIO.Implementation.Charts.ChartCategoryAxisImpl)">
            <summary>
            It's assign the Excel chart Logerthmi axis settings to Sf chart Axis
            </summary>
            <param name="sfaxis">Sf axis</param>
            <param name="xlsiovalue">XlsIO value axis</param>
            <param name="xlsiocat">XlsIO category axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfLogerthmicAxis(Syncfusion.UI.Xaml.Charts.LogarithmicAxis,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl,Syncfusion.XlsIO.Implementation.Charts.ChartCategoryAxisImpl)">
            <summary>
            It's assign the Excel chart Logerthmi axis settings to Sf chart Axis
            </summary>
            <param name="sfaxis">Sf axis</param>
            <param name="xlsiovalue">XlsIO value axis</param>
            <param name="xlsiocat">XlsIO category axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfLogerthmicAxis3D(Syncfusion.UI.Xaml.Charts.LogarithmicAxis3D,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl,Syncfusion.XlsIO.Implementation.Charts.ChartCategoryAxisImpl)">
            <summary>
            It's assign the Excel chart Logerthmi axis settings to Sf chart Axis
            </summary>
            <param name="sfaxis">Sf axis</param>
            <param name="xlsiovalue">XlsIO value axis</param>
            <param name="xlsiocat">XlsIO category axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfDateTimeAxis(Syncfusion.ExcelChartToImageConverter.CustomDateTimeAxis,Syncfusion.XlsIO.Implementation.Charts.ChartCategoryAxisImpl,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl)">
            <summary>
            It's assign the Excel chart DateTime axis settings to Sf chart Axis
            </summary>
            <param name="sfDateTimeAxis">Sf axis</param>
            <param name="xlsioCatAxis">XlsIO value axis</param>
            <param name="xlsioValAxis">XlsIO category axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfDateTimeAxis3D(Syncfusion.UI.Xaml.Charts.DateTimeAxis3D,Syncfusion.XlsIO.Implementation.Charts.ChartCategoryAxisImpl,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl)">
            <summary>
            It's assign the Excel chart DateTime3D axis settings to Sf chart Axis
            </summary>
            <param name="sfDateTimeAxis">Sf axis</param>
            <param name="xlsioCatAxis">XlsIO value axis</param>
            <param name="xlsioValAxis">XlsIO category axis</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfTickLines(Syncfusion.XlsIO.Implementation.Charts.ChartAxisImpl,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            It's assign the Excel chart axis tick line settings to Sf chart axis tick line
            </summary>
            <param name="xlsioAxis"></param>
            <param name="sfAxis"></param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetSfAxisTitle(Syncfusion.XlsIO.Implementation.Charts.ChartAxisImpl,System.Drawing.RectangleF@,System.Boolean@)">
            <summary>
            It's assign the Excel chart AxisTitle settings to Sf chart AxisTitle
            </summary>       
            <param name="axis">xlsio/office chart axis</param>
            <param name="isChartEx">boolean value indicates whether the chart is Excel 2016 type</param>
            <returns>the axis title border</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetAxisLayoutTransformForTitle(Syncfusion.XlsIO.Implementation.Charts.ChartAxisImpl,System.Boolean@)">
            <summary>
            Get the rotation angle from the axis and returns proper transform
            </summary>
            <param name="axis">Input Chart Axis</param>
            <returns>the rotation angle</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.IsVerticalAxis(Syncfusion.XlsIO.Implementation.Charts.ChartAxisImpl)">
            <summary>
            Check whether the axis is vertical or not 
            </summary>
            <param name="axis">axis to be checked</param>
            <returns>the boolean value, is vertical or not</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.IsVerticalCategoryAxis(Syncfusion.XlsIO.Implementation.Charts.ChartAxisImpl)">
            <summary>
            Returns the boolean value indicates axis format is vertical
            </summary>
            <param name="axis">input chart axis object</param>
            <returns>the boolean value shows is vertical</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfLegend(Syncfusion.UI.Xaml.Charts.ChartBase,Syncfusion.XlsIO.Implementation.Charts.ChartImpl,System.Int32[]@,System.Boolean,Syncfusion.UI.Xaml.Charts.ChartLegend@)">
            <summary>
            It's assign Sf chart Legend settings
            </summary>
            <param name="sfchart">SfChart</param>
            <param name="xlsioChart">Excel Chart</param>
            <param name="sortedLegendOrders">output array represents the legend items to be ordered</param>
            <param name="emptyLegend">Returns the empty legend for spacing if legend manual and outside</param>
            <param name="isPlotAreaManual">boolean value indicates wheter the plot area is manual</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SetLegendManualLayoutSize(Syncfusion.UI.Xaml.Charts.ChartLegend,Syncfusion.ExcelChartToImageConverter.SfChartExt,Syncfusion.UI.Xaml.Charts.SfChart3D,System.Windows.Controls.TextBlock,System.Drawing.RectangleF)">
            <summary>
            Manual layout legend wrapping has been set like MS Office
            </summary>
            <param name="leg">input legend</param>
            <param name="sfChart2D">2D chart series count</param>
            <param name="sfChart3D">3D chart series count</param>
            <param name="block">Text block used for legend text meausure ment</param>
            <param name="manualRect">manual rectangle layout for legend position and size</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GenerateStreamFromXamlContent(System.Text.StringBuilder)">
            <summary>
            Generate the Stream Xaml code
            </summary>
            <param name="sb">input string builder value</param>
            <returns>the stream</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.CalculateLegendSize(Syncfusion.ExcelChartToImageConverter.SfChartExt,Syncfusion.UI.Xaml.Charts.SfChart3D,System.Windows.Controls.TextBlock,System.Double@,System.Double@,System.Double@,System.Int32@)">
            <summary>
            Calculate the legend width values from the input sfchart object
            </summary>
            <param name="sfChart2D">input sfchart 2D Object</param>
            <param name="sfChart3D">input sfchart 3D Object</param>
            <param name="block">the temporary text block used to measure the text</param>
            <param name="serieWidth">the serie text width</param>
            <param name="totalWidth">the total text width</param>
            <param name="serieHeight">maximum serie text height</param>
            <param name="totalCount">Total legend entry count</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SetLegendPosition(Syncfusion.XlsIO.IChart,Syncfusion.UI.Xaml.Charts.ChartLegend)">
            <summary>
            Set the legend position based on the input chart object
            </summary>
            <param name="xlsioChart">input chart object</param>
            <param name="leg">the SfChart legend object</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetOrderOfLegendItems(Syncfusion.UI.Xaml.Charts.ChartBase,Syncfusion.XlsIO.IChart,Syncfusion.UI.Xaml.Charts.ChartLegend)">
            <summary>
            Returns the array of legend item's indexes as equivalent to MS
            </summary>
            <param name="sfchart">input sfchart</param>
            <param name="chart">input XlsIO/Office Chart</param>
            <param name="legend">input sfchart legend items</param>
            <returns>the modified array legened item indexes</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.UpdateOrderArray(System.Collections.Generic.IList{Syncfusion.UI.Xaml.Charts.ChartSeriesBase},Syncfusion.UI.Xaml.Charts.ChartBase,System.Int32,System.Int32@,System.Int32[])">
            <summary>
            Update the array of legend items indexes
            </summary>
            <param name="seriesList">input series list</param>
            <param name="sfchart">input sfchart</param>
            <param name="i">input index value</param>
            <param name="index">output index value</param>
            <param name="orderResult">the order of indexes modified</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.CalculateManualLayout(Syncfusion.XlsIO.Implementation.Charts.ChartManualLayoutImpl,System.Boolean@)">
            <summary>
            Calculate the manual layout rectangle value based from the input chart element object
            </summary>
            <param name="layoutImpl">input layoutimpl object</param>
            <param name="isInnerLayout">boolean value indicates whether the plot area layout target is inner.</param>
            <returns>the caluclated manual rectangle value</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.TryAndUpdateLegendItemsInWaterFall(Syncfusion.UI.Xaml.Charts.ChartBase,Syncfusion.XlsIO.IChart)">
            <summary>
            Update the funnel chart legend 
            </summary>
            <param name="sfchart">input sfchart</param>
            <param name="xlsioChart">input XlsIO chart</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfTextBlock(System.Windows.Controls.TextBlock,Syncfusion.XlsIO.IChartTextArea)">
            <summary>
            It's used assign the XlsIo textarea properties to sf TextBlock
            </summary>
            <param name="sfTextArea">Wpf TextBlock</param>
            <param name="textArea">Xlsio Text Area</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SetTransformAndBackGround(System.Windows.Controls.Border,Syncfusion.XlsIO.Implementation.Charts.ChartTextAreaImpl,Syncfusion.XlsIO.Implementation.Charts.ChartAxisImpl)">
            <summary>
            Set the transform and the backgound color for text block
            </summary>
            <param name="sfTextArea">The WPF border object</param>
            <param name="textArea">The Chart textArea object</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfChartTitle(Syncfusion.XlsIO.IChart,System.Drawing.RectangleF@)">
            <summary>
            It's assign the SfChart AxisTitle properties
            </summary>
            <param name="sfchart">sfChart</param>
            <param name="xlsioChart">Xlsio Chart</param>
            <returns>The calculated WPF border object</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SetTextBlockInlines(Syncfusion.XlsIO.Implementation.Charts.ChartTextAreaImpl,System.Windows.Controls.TextBlock)">
            <summary>
            Set the rich text fromatting in text block from the text area object
            </summary>
            <param name="textArea">input text area object</param>
            <param name="block">input text block</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SetFormattingsInRun(System.Windows.Documents.Run,Syncfusion.XlsIO.IFont)">
            <summary>
            Method used to assign the formattings in run
            </summary>
            <param name="run">run to be assigned</param>
            <param name="font">font used to assign values</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetTextFromRange(System.String,System.String[])">
            <summary>
            Returns the range from the range address text
            </summary>
            <param name="address">the range address</param>
            <param name="cache">the string array</param>
            <returns>the range</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfChartDataLabel(Syncfusion.XlsIO.IChartSerie,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            It's assign the chart data label property
            </summary>
            <param name="serie">chart serie</param>
            <param name="sfChartSeries">Sfchart serie base object</param>
            <returns>sfChart DataLabel</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SetMarkerFormattings(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.XlsIO.Implementation.Charts.ChartSerieDataFormatImpl,Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase)">
            <summary>
            Set Marker format on Chart adornment from Chart data format
            </summary>
            <param name="chartSerieImpl">input chart series object</param>
            <param name="dataFormat">input chart series data format</param>
            <param name="info">the sfchart adornment info</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetMarkerSettings(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.XlsIO.Implementation.Charts.ChartSerieDataFormatImpl,Syncfusion.ExcelChartToImageConverter.MarkerSetting)">
            <summary>
            Get the Marker settings from the marker format of Office Chart
            </summary>
            <param name="chartSerieImpl">Parent chart series</param>
            <param name="dataFormat">Data format of marker</param>
            <param name="parentMarkerSttings">Parent marker settings - series common</param>
            <returns>the marker settings for binding</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SetLabelPosition(Syncfusion.UI.Xaml.Charts.ChartSeriesBase,Syncfusion.UI.Xaml.Charts.ChartAdornmentInfoBase,Syncfusion.XlsIO.Implementation.Charts.ChartDataLabelsImpl)">
            <summary>
            Set sf chart data label position.
            </summary>
            <param name="sfChartSeries">SfChart serie.</param>
            <param name="info">SfChart data label.</param>
            <param name="label">XlsIO data label.</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetMarkerSymbolGeometry(System.Int32,System.Double)">
            <summary>
            Returns the Geometry based on the marker type and marker size
            </summary>
            <param name="markerTypeInInt">Marker Type in Integer</param>
            <param name="markerSize">Marker Size</param>
            <returns>the geometry for symbols</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetNumberFormatColorConverter(System.String,System.Drawing.Color)">
            <summary>
            Returns the color converter object respect to number format
            </summary>
            <param name="numberFormat">input number format</param>
            <param name="defaultColor">input default color</param>
            <returns>the color converter object</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfColor(System.Drawing.Color)">
            <summary>
            It's convert the drawing color to Media color
            </summary>
            <param name="chartcolor">Drawing color</param>
            <returns>Media color</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfPloatArea(Syncfusion.ExcelChartToImageConverter.SfChartExt,Syncfusion.XlsIO.Implementation.Charts.ChartFrameFormatImpl,System.String)">
            <summary>
            It's assign the chart plotArea settings
            </summary>
            <param name="sfChart">sfChart</param>        
            <param name="chartArea">XlsiO chartArea</param>
            <param name="chartType">chart type of the input chart</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfChartArea(Syncfusion.ExcelChartToImageConverter.SfChartExt,Syncfusion.XlsIO.Implementation.Charts.ChartFrameFormatImpl)">
            <summary>
            It's assign the chartAre settings
            </summary>
            <param name="sfChart">sfChart</param>
            <param name="chartArea">XlsiO chartArea</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfChartArea3D(Syncfusion.ExcelChartToImageConverter.SfChart3DExt,Syncfusion.XlsIO.Implementation.Charts.ChartFrameFormatImpl)">
            <summary>
            It's assign the chartAre settings
            </summary>
            <param name="sfChart">sfChart</param>
            <param name="chartArea">XlsiO chartArea</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.IsLine(Syncfusion.XlsIO.ExcelChartType)">
            <summary>
            Checks whether the given chart type is line or not
            </summary>
            <param name="chartType">Chart Type</param>
            <returns>boolean value</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfChartTrendLine(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.CartesianSeries)">
            <summary>
            Add the trendlines to sfserie.
            </summary>
            <param name="serieImpl">XlsIO serie.</param>
            <param name="sfSerie">SfSerie.</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfSecondaryAxis(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Set SfChart secondary axis settings.
            </summary>
            <param name="xlsioSerie">XlsIO serie.</param>
            <param name="xlsioChart">XlsIO chart.</param>
            <param name="chartSerie">SfChart serie.</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfSecondaryAxisCommon(Syncfusion.XlsIO.IChart,Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,Syncfusion.UI.Xaml.Charts.RangeAxisBase)">
            <summary>
            Set SfChart secondary axis common settings.
            </summary>
            <param name="xlsioChart">XlsIO chart.</param>
            <param name="sfXAxis">SfCategory axis.</param>
            <param name="sfYAxis">SfNumeric axis.</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetSerieName(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            Get series name.
            </summary>
            <param name="serie">XlsIO chart series.</param>
            <returns>returns series name.</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetStrokeDashArrayValues(System.Int16,System.Windows.Media.DoubleCollection@)">
            <summary>
            Get the stroke pattern value from the border property
            </summary>
            <param name="LinePatternFlag">Input border pattern property</param>
            <param name="patternValues">Out stroke thickness</param>
            <returns>boolean value indicates whether the pattern values are present or not</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SetGapWidthandOverlap(Syncfusion.UI.Xaml.Charts.ChartSeriesBase,Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl)">
            <summary>
            Set GapWidth and Overlap for bar and column series.
            </summary>
            <param name="seriesBase">SfChart series base.</param>
            <param name="serie">XlsIO serie.</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SetGapWidthOnSingleSeries(Syncfusion.UI.Xaml.Charts.ChartSeriesBase,Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,System.Double@,System.Boolean)">
            <summary>
            Check for single seies present column and bar series, if found set the equal gapwidth
            </summary>
            <param name="seriesBase">input sfchart series</param>
            <param name="serie">input XlsIO chart</param>
            <param name="overlap">output overlap value</param>
            <param name="isChart3D">boolean value indicates whether the chart is 3D</param>
            <returns>the boolean value indicates whether the spacing has been set or not</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetBorderThickness(Syncfusion.XlsIO.Implementation.Charts.ChartBorderImpl)">
            <summary>
            Get the border thickness from the input border
            </summary>
            <param name="border">input Border</param>
            <returns>the border thickness value</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfRotation3D(Syncfusion.XlsIO.Implementation.Charts.ChartImpl,Syncfusion.UI.Xaml.Charts.SfChart3D)">
            <summary>
            Rotate SfChart3D.
            </summary>
            <param name="chartImpl">XlsIO chart</param>
            <param name="sfChart">SfChart</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.SfWall(Syncfusion.UI.Xaml.Charts.SfChart3D,Syncfusion.XlsIO.Implementation.Charts.ChartWallOrFloorImpl,Syncfusion.XlsIO.Implementation.Charts.ChartWallOrFloorImpl,Syncfusion.XlsIO.Implementation.Charts.ChartWallOrFloorImpl)">
            <summary>
            Set XlsIO wall brush to SfChart wall brush.
            </summary>
            <param name="sfChart3D">SfChart3D</param>
            <param name="backWall">XlsIo backwall</param>
            <param name="sideWall">XlsIO sidewall</param>
            <param name="floor">XlsIo floor</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetWallBrush(Syncfusion.XlsIO.Implementation.Charts.ChartWallOrFloorImpl,System.Boolean)">
            <summary>
            Get brush from wall.
            </summary>
            <param name="wall">XlsIO wall.</param>
            <param name="isFloor">Boolean value indicates whether the wall is floor or not</param>
            <returns>Brush</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetBrushFromBorder(Syncfusion.XlsIO.Implementation.Charts.ChartBorderImpl)">
            <summary>
            Get the brush value from input border values
            </summary>
            <param name="border">input border value</param>
            <returns>the output brush</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetBrushFromDataFormat(Syncfusion.XlsIO.IChartFillBorder)">
            <summary>
            get the brush with color and transparent values from input chartseriedataformat
            </summary>
            <param name="fillFormat">the input chartseriedataformat</param>
            <returns>the brush</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetMaxGradientStop(Syncfusion.XlsIO.Implementation.Shapes.GradientStops)">
            <summary>
            Get the maximum gradient style used from the input chart
            </summary>
            <param name="gradientStops">input gardient stop collection</param>
            <returns>maximum used gradient stop</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.CheckAndApplyAxisLineStyle(Syncfusion.XlsIO.Implementation.Charts.ChartBorderImpl,System.Windows.Style@)">
            <summary>
            Check and apply the axis line style from chart border object
            </summary>
            <param name="border">input chart border object</param>
            <param name="lineStyle">the line style</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetBrushForTextElements(Syncfusion.XlsIO.Implementation.Charts.ChartBorderImpl)">
            <summary>
            Returns the UI border object from chart border object
            </summary>
            <param name="border">the chart border object</param>
            <returns>the border UI element</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.TryAndSetChartAxisTitle(Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl,System.Collections.Generic.Dictionary{Syncfusion.UI.Xaml.Charts.ChartAxis,System.Tuple{System.Windows.Controls.Border,System.Drawing.PointF}},System.Collections.Generic.Dictionary{Syncfusion.UI.Xaml.Charts.ChartAxis,System.Tuple{System.Windows.Controls.Border,System.Drawing.PointF}},System.Boolean,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Try and set the chart axis title from the input axes
            </summary>
            <param name="sfAxis">input sfchart axis</param>
            <param name="axisImpl">input chart axis</param>
            <param name="axisBorders">collection of axis title</param>
            <param name="axisDisplayUnitBorders">collection of display units</param>
            <param name="axisChangedOnPlotArea">boolean value indicates whether the axis changed based on plot area</param>
            <param name="manualRect">manual layout rectangle value</param>
            <param name="isRadar">boolean value indicates whether the chart is radar or not.</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetAxisTitleTemplate(Syncfusion.UI.Xaml.Charts.ChartAxis,System.Windows.Controls.Border,System.Windows.Controls.Border,System.Boolean,System.Drawing.RectangleF)">
            <summary>
            Try and retruns the axis title template includes the title and display unit
            </summary>
            <param name="sfAxis">input sfchart axis</param>
            <param name="axisTitleBorder">the axis title border object</param>
            <param name="displayUnitBorder">the display unit border object</param>
            <param name="isVertical">boolean value indicates whether the axis is vertical</param>
            <param name="manualRect">the manual layout rectangle value</param>
            <returns>the data template object</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GenrateFrameworkElementFactoryObject(System.Windows.Controls.Border)">
            <summary>
            Generate the framework element factory object from given WPF object
            </summary>
            <param name="borderUI">border UI element</param>
            <returns>the framework element factory object</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.RetainAxisTitleRotation(System.Windows.Controls.Border,Syncfusion.XlsIO.Implementation.Charts.ChartTextAreaImpl)">
            <summary>
            Retains the axis title rotation angle 
            </summary>
            <param name="axisTitleBorder">input axis title wpf border object</param>
            <param name="textArea">input axis textArea object</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.TryAndSetPlotAreaMargins(Syncfusion.XlsIO.IChart,Syncfusion.ExcelChartToImageConverter.SfChartExt,Syncfusion.UI.Xaml.Charts.ChartLegend,System.Drawing.RectangleF,System.Boolean,System.Boolean)">
            <summary>
            Try and Set the plot area margin from the input values
            </summary>
            <param name="_chart">input XlsIO/Office Chart object</param>
            <param name="sfChart">input sfchart object</param>
            <param name="legend">Legend Object</param>
            <param name="manualRect">the manual layout rectangle value</param>
            <param name="isInnerLayoutTarget">boolean value indicates whether plot area target is inner or not.</param>
            <param name="ignoreTLBR">boolean value indicates whether the TLBR can be ignored</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetEmptySpacesAdded(Syncfusion.ExcelChartToImageConverter.SfChartExt,System.Boolean,Syncfusion.UI.Xaml.Charts.ChartLegend)">
            <summary>
            Calculate and returns the byte value by checking sfchart elements
            </summary>
            <param name="sfChart">input sfchart object</param>
            <param name="isFunnel">boolean value indicates whether the chart is funnel or not</param>
            <returns>the byte value indicates the region might be cropped</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetDisplayUnitLabel(Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl,Syncfusion.UI.Xaml.Charts.ChartAxis,System.Drawing.RectangleF@,System.Boolean@)">
            <summary>
            Get the display unit label(text annotation) from the input axes
            </summary>
            <param name="axis">input chart axis</param>
            <param name="numericalAxis">input sfchart axis</param>        
            <returns>the WPF border object</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartCommon.GetTextFromDisplayUnits(Syncfusion.XlsIO.Implementation.Charts.ChartValueAxisImpl)">
            <summary>
            Returns the display unit text from the axis object
            </summary>
            <param name="axis">input axis object</param>
            <returns>the display unit text</returns>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.GetChartSeries.RectangleSerieTypes">
            <summary>
            List contains the series in rectangle format
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfBarseries(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfBar Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">xlsio chart</param>
            <returns>BarSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfBarseries3D(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfBar Serie3D.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">xlsio chart</param>
            <returns>BarSeries3D</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfStackBar100Series(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfStackingBar100 Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>StackingBar100Series</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfAreaSeries(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfArea Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>AreaSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfAreaSeries3D(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfArea Serie3D.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>AreaSeries3D</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfColumnSeries(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfColumn Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>ColumnSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.ApplyTemplateFormats(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ChartSeries,System.Collections.Generic.List{System.Int32},System.Boolean)">
            <summary>
            Apply the template formats on rectangle series
            </summary>
            <param name="serieImpl">input XlsIO chart serie</param>
            <param name="sfChartSerie">input SfChart serie</param>
            <param name="negativeIndexes">List of negativeIndexes</param>
            <param name="isDefaultBorder">boolean value indicates whether the border is default</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SetCustomBrushes(Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Windows.Media.Brush},System.Windows.Media.Brush,System.Collections.Generic.List{System.Int32})">
            <summary>
            Set Custom brushes for fill in sfchart serie list
            </summary>
            <param name="sfChartSerie">input sfchart serie</param>
            <param name="count">total count of the custom points</param>
            <param name="fillBrushes">list of fill brushes</param>
            <param name="commonBrush">common brush</param>
            <param name="negativeIndexes">input of negative indexes of series</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetCommonColorBrush(System.Collections.Generic.List{System.Windows.Media.Brush},System.Collections.Generic.List{System.Int32})">
            <summary>
            Get common brush by neglecting negatve brushes
            </summary>
            <param name="customBrushes">input custom brush list</param>
            <param name="customDptIndexes">list of negative indexes</param>
            <returns>common brush</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.ApplyShapeTemplate(Syncfusion.UI.Xaml.Charts.ChartSeries,System.Collections.Generic.List{System.Int32},System.Boolean,System.Collections.Generic.Dictionary{System.Int32,System.Windows.Media.Brush},System.Collections.Generic.Dictionary{System.Int32,System.Double})">
            <summary>
            Applying rectangle shape template on sfchart serie
            </summary>
            <param name="sfChartSerie">input sfchart serie</param>
            <param name="negativeIndexes">list of negative indexes</param>
            <param name="isDefaultBorder">boolean value indicates whether the border is default</param>
            <param name="borderBrushes">Dictionary of border brushes for each data point</param>
            <param name="thicknessDictionary">Dictionary of border thickness for each data point</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.ApplyDataTemplateonSeries(Syncfusion.UI.Xaml.Charts.ChartSeries,System.Windows.DataTemplate)">
            <summary>
            Set the custom data template to sfchart series
            </summary>
            <param name="sfChartSerie">input sfchart serie</param>
            <param name="dataTemplate">input data template</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.ApplyLegendTemplate(Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Windows.Media.Brush)">
            <summary>
            Apply legend Icon template 
            </summary>
            <param name="sfChartSerie">input sfchart serie</param>
            <param name="iconBrush">brush for legend icon</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfColumnSeries3D(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfColumn Serie3D.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>ColumnSeries3D</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfLineSeries(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfLine Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>LineSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfLineSeries3D(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfLine Series3D.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>LineSeries3D</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfSplineSeries(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfSpline Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>SplineSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfPieSeries(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfPie Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>PieSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfPieSeries3D(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfPie Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>PieSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfDoughnutSeries(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfDoughnut Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>DoughnutSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfStackAreaSeries(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfStackingArea Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>StackingAreaSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfStackArea100Series(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfStackingArea100 Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>StackingArea100Series</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfStackBarSeries(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfStackingBar Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>StackingBarSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfStackBarSeries3D(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfStackingBar Series3D.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>StackingBarSeries3D</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfStackBar100Series3D(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfStackingBar100 Series3D.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>StackingBar100Series3D</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfStackedColumnSeries(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfStackingColumn Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>StackingColumnSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfStackedColumnSeries3D(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfStackingColumn Series3D.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>StackingColumnSeries3D</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfStackColum100Series(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfStackingColumn100 Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>StackingColumn100Series</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfStackColum100Series3D(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfStackingColumn100 Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>StackingColumn100Series</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfRadarSeries(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfRadar Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>RadarSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfScatterrSeries(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfScatter Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>ScatterSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfBubbleSeries(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfBubble Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>BubbleSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfCandleSeries(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfCandle Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>CandleSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfStockHiLoSeries(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the SfHiLo Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>HiLoOpenCloseSeries</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfFunnelSeries(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the funnel Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="_chart">Xlsio chart</param>
            <returns>Funnel Series</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfWaterfallSeries(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart)">
            <summary>
            It returns the waterfall serie of sfchart
            </summary>
            <param name="serie">xlsio chart serie</param>
            <param name="_chart">xlsio chart</param>
            <returns>the waterfall serie of sfchart</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetFillOnWaterFallSeries(Syncfusion.XlsIO.IChartSerie,Syncfusion.ExcelChartToImageConverter.CustomWaterfallSeries,Syncfusion.ExcelChartToImageConverter.ViewModel)">
            <summary>
            Check and adds the required color brushes for waterfall series
            </summary>
            <param name="serie">input xlsio chart series</param>
            <param name="waterfall">input sfchart waterfall series</param>
            <param name="model">input view model object</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfHistogramOrPareto(Syncfusion.XlsIO.IChartSerie,Syncfusion.XlsIO.IChart,Syncfusion.UI.Xaml.Charts.LineSeries@)">
            <summary>
            Returns the histogram equivalent column series and pareto equivalent line
            </summary>
            <param name="serie">input XlsIO chart series</param>
            <param name="_chart">input XlsIO chart</param>
            <param name="paretoLine">output pareto line if pareto series</param>
            <returns>the column series of sfchart</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SfParetoLine(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ColumnSeries,System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint})">
            <summary>
            Returns the pareto line formatted sfchart line series
            </summary>
            <param name="serieImpl">input chart serie object</param>
            <param name="column">input column series</param>
            <param name="observableCollection">the observable collection argument for pareto line</param>
            <returns>the sfchart line series</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetChartPointsForHistogram(Syncfusion.XlsIO.IChartSerie,System.Boolean,System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint})">
            <summary>
            Returns the required observable collection for histogram chart
            </summary>
            <param name="serie">input chart series</param>
            <param name="isDirectValues">boolean value indicates whether the series have direct values or not</param>
            <param name="observableCollection">input observable collection</param>
            <returns>the modified observable collection for histogram</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetChartPointsByBinValues(System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint},System.Double,System.Int32,System.Double,System.Double,System.Double,System.Double,Syncfusion.XlsIO.Implementation.Charts.HistogramAxisFormat)">
            <summary>
            Returns the modified observable collection respect to bin values
            </summary>
            <param name="modifiedProducts">the input modified observable collection</param>
            <param name="binwidth">the bin width value</param>
            <param name="numberOfBins">number of bins</param>
            <param name="min">minimum value</param>
            <param name="max">maximum value</param>
            <param name="overflowBin">the overflow bin value</param>
            <param name="underflowBin">the underflow bin value</param>
            <param name="axisFormat">input histogram axis format</param>
            <returns>the output modified observable collection</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.CalculateValuesFromFlowBins(System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint},System.Double,System.Double,System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            returns the view model object
            </summary>
            <param name="modifiedProducts"> the modified observable collection</param>
            <param name="min">minimum value</param>
            <param name="max">maximum value</param>
            <param name="bintype">bin type to indicate underflow / overflow options
            -1 - underflow ,1 - overflow, 0 - both
            </param>
            <param name="count">bin count for axis</param>
            <param name="binWidth">the binwidth </param>
            <param name="isIntervalClosedInLeft">boolean value indicates whether the interval is closed left or not</param>
            <returns>the modified view model</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.ChangeFunnelItemsSourceToRangeColumn(System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint})">
            <summary>
            the data points changed as funnel 
            </summary>
            <param name="data">input chart points data</param>
            <returns>the data points to represent in funnel</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetStandardDeviationValue(System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint})">
            <summary>
            Calculate and returns the standard deviation value
            </summary>
            <param name="array">input observation collection value</param>
            <returns>the standard deviation value</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetAutomaticBinwidthValue(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculate and returns the automatic bin width value as MS Excel
            </summary>
            <param name="stdev">input standard deviation value</param>
            <param name="length">chart points count</param>
            <param name="max">Maximum value</param>
            <param name="min">Minimum value</param>
            <returns>the bin width value</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetAverage(System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint})">
            <summary>
            Calculate and return the average value from collection
            </summary>
            <param name="array">input array</param>
            <returns>the average value of array</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetViewModel(Syncfusion.XlsIO.IChartSerie,System.Boolean@)">
            <summary>
            Check for series having reference or literal values and return view model object based on values type
            </summary>
            <param name="serie">input series need to check</param>
            <param name="isDirectValues">boolean value denotes series values are literal or not</param>
            <returns>view model object</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetChartPointsValues(Syncfusion.XlsIO.IChartSerie,System.Boolean,System.Boolean,System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint})">
            <summary>
            Get the chartpoints from the series values
            </summary>
            <param name="serie">input series</param>
            <param name="isDirectValues">boolean value represents is literal or reference type of serie values</param>
            <param name="isBubbles">boolean value denotes whether serie is bubble or not</param>
            <param name="values">input chart points to be updated</param>       
            <returns>the updated chart point collection</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.SetXValuesForNumericSeries(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.XlsIO.IRange[],System.Object[],System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint})">
            <summary>
            Set the Category (X) values for the scatter/bubble series
            </summary>
            <param name="serieImpl">input serie object</param>
            <param name="range">Input category range collection</param>
            <param name="directCategories">Input direct category values</param>
            <param name="chartPoints">Output chart points collection to be changed</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.UpdateChartPointsByDisplayUnit(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint},System.Boolean)">
            <summary>
            Update point value based on diplay unit.
            </summary>
            <param name="serie">Chart serie.</param>
            <param name="chartPoints">Chart points.</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.CheckAndGetBubbleValues(Syncfusion.XlsIO.IRange,System.Object[],System.Int32)">
            <summary>
            Check and assign bubble values for size of chart points 
            </summary>
            <param name="bubbleRange">input bublle ranges for chart point sizes</param>
            <param name="directbubbleValues"></param>
            <param name="index">index of the value to return</param>
            <returns>the Size Value of chart Point</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.CheckAndGetCategoryValues(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.XlsIO.IRange[],System.Object[],System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Check and assign X value for a chart point from ranges or values
            </summary>
            <param name="series">XlsIO chart serie</param>
            <param name="categoryRanges">Reference ranges for X values</param>
            <param name="directCategories">Literal values for X Values</param>
            <param name="index">index of the value to return</param>
            <param name="applyNumberFormat">Boolean value indicates whether the number format to be applied or not</param>
            <param name="isPrimary">Indicates whether the series is primary or not</param>
            <returns>the X Value of chart Point</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetChartPointsValuesForStockChart(Syncfusion.XlsIO.IChart,Syncfusion.XlsIO.IChartSerie,System.Boolean,System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint},System.Boolean)">
            <summary>
            Get the chartpoints from the series values only for stock chart
            </summary>
            <param name="chart">XlsIO chart</param>
            <param name="serie">input series</param>
            <param name="isDirectValues">boolean value represents is literal or reference type of serie values</param>
            <param name="values">input chart points to be updated</param>
            <param name="isCandleChart">boolean value represent the candle chart</param>
            <returns>the updated chart point collection</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetFillOnCommonSeries(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Collections.Generic.List{System.Int32}@)">
            <summary>
            Assign the brush values for the common chart series
            like (Bar,column,Area(stacked or 100%stacked or clustered)),Bubble,
            </summary>
            <param name="serie">input Chart series</param>
            <param name="sfChartSerie">the ouput SfChart Serie object to be changed</param>
            <param name="negativeIndexes">negative indexes by values</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.TryParseNegativeIndexes(Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Collections.Generic.List{System.Int32}@)">
            <summary>
            Gets the index of negative values serie data points. 
            </summary>
            <param name="sfChartSerie">SfChart serie.</param>
            <param name="listIndexes">Index collection.</param>
            <returns>returns true if serie data points has negative value otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetFillOnPieDougnutSeries(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Boolean,System.Windows.Media.Brush@,System.Double@)">
            <summary>
            Assign the brush values for the pie and doughnut chart series
            </summary>
            <param name="serie">input Chart series</param>
            <param name="sfChartSerie">the ouput SfChart Serie object to be changed</param>
            <param name="isPie">Indicates whether the input serie is pie or doughnut</param>
            <param name="borderBrush">Get the border brush set on individual data point</param>
            <param name="borderThickness">Get the border thickness set on individual data point</param>
            <returns>the boolean value indicates whether the all datapoints have no fill</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetBorderOnCommonSeries(Syncfusion.XlsIO.Implementation.Charts.ChartBorderImpl,Syncfusion.UI.Xaml.Charts.ChartSeries)">
            <summary>
            Get the border thickness and color value from input border
            Set the values to the output serie
            </summary>
            <param name="border">the input series border</param>
            <param name="sfChartSerie">the ouput series to be changed</param>
            <returns>the boolean value indicates whether the default border is applied</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetBorderOnLineSeries(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ChartSeries)">
             <summary>
             Get the border thickness and color value from input border
             Set the values to the output serie
             </summary>
            <param name="serieImpl">Input series</param>
             <param name="sfChartSerie">the ouput series to be changed</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.GetChartLegendIcon(Syncfusion.XlsIO.Implementation.Charts.ChartSerieDataFormatImpl,System.Int32)">
            <summary>
            Return the approximate legend icon for the chart serie
            </summary>
            <param name="dataFormat">Input serie Data format</param>
            <param name="serieIndex">integer value for auto marker type</param>
            <returns>the approimate chart legend icon value</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.ChartSeriesCommon(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Boolean,System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint},System.Boolean,System.Collections.Generic.List{System.Int32}@)">
            <summary>
            Common chart series settings.
            </summary>
            <param name="serie">XlsIo serie.</param>
            <param name="chartSeriesBase">SfChart series base</param>
            <param name="isDirectValues">direct values.</param>
            <param name="values">Chart data points.</param>
            <param name="applyFill">Apply series fill settings</param>
            <param name="negativeIndexes">negative indexes by values</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.ChartSeriesCommon(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Boolean,System.Collections.ObjectModel.ObservableCollection{Syncfusion.ExcelChartToImageConverter.ChartPoint},System.Collections.Generic.List{System.Int32}@)">
            <summary>
            Common chart series settings.
            </summary>
            <param name="serie">XlsIo serie.</param>
            <param name="chartSeriesBase">SfChart series base</param>
            <param name="isDirectValues">direct values.</param>
            <param name="values">Chart data points.</param>
            <param name="negativeIndexes">negative indexes by values</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.ChartSeriesCommon(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Common chart series settings.
            </summary>
            <param name="serie">XlsIo serie.</param>
            <param name="chartSeriesBase">SfChart series base</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.ChartSeriesCommon(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Boolean)">
            <summary>
            Common chart series settings.
            </summary>
            <param name="serie">XlsIo serie.</param>
            <param name="chartSeriesBase">SfChart series base</param>
            <param name="applyFill">Apply series fill settings</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.ChartSeriesCommon(Syncfusion.XlsIO.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Collections.Generic.List{System.Int32}@)">
            <summary>
            Common chart series settings.
            Stacked and Stacked100 Bar and column series
            </summary>
            <param name="serie">XlsIo serie.</param>
            <param name="chartSeriesBase">SfChart series base</param>
            <param name="negativeIndexes">negative indexes by values</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.DetachEventsForRadarAxes(Syncfusion.ExcelChartToImageConverter.SfChartExt)">
            <summary>
            Detach the attached events when the chart is Radar
            </summary>
            <param name="sfChart">input sfChart object</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.GetChartSeries.TryAndSortLegendItems(Syncfusion.UI.Xaml.Charts.ChartBase,System.Int32[])">
            <summary>
            Sort the legend items based on the input array indices
            </summary>
            <param name="sfChart">input sfchart object</param>
            <param name="sortedLegendOrders">the input array indices</param>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.ChartSeriesFactory">
            <summary>
            Create sf chart series based on type.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.ChartSeriesFactory.CreateSeries(System.Type)">
            <summary>
            Create sf chart series.
            </summary>
            <param name="type">SfChart series type.</param>
            <returns>Returns sf chart series instance.</returns>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.LabelConvertor">
            <summary>
            Converts the data label values.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.LabelConvertor.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convets a value.
            </summary>
            <param name="value">Value</param>
            <param name="targetType">Target type</param>
            <param name="parameter">The converter parameter</param>
            <param name="culture">Culture</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.LabelConvertor.LabelSettings(System.Object,Syncfusion.ExcelChartToImageConverter.DataLabelSetting)">
            <summary>
            Apply label settings.
            </summary>
            <param name="value">Label value.</param>
            <param name="dataLabelSetting">Data label setting.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.LabelConvertor.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convets a value.
            </summary>
            <param name="value">Value</param>
            <param name="targetType">Target type</param>
            <param name="parameter">The converter parameter</param>
            <param name="culture">Culture</param>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.ThicknessConverter">
            <summary>
            Converts the thickness respect to the data
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.FontConverter">
            <summary>
            Converts the thickness respect to the data
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.ColorConverter">
            <summary>
            Converts the Color respect to the data
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.ColorConverter.Brushes">
            <summary>
            Retruns the brush respect to the input value on numberformat
            Possible Keys are,
            ['0'] => denotes the color for zero value
            ['+'] => denotes the color for positive value
            ['-'] => denotes the color for negative value
            ['t'] => denotes the color for Text value
            ['d'] => denotes the color for Default value
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.AxisLabelConverter">
            <summary>
            Converts the input data to axis data
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.AxisLabelConverter.IsTickLabelNone">
            <summary>
            Boolean value indicated whether the tick labels in the axis are shown or not
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.AxisLabelConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convets a value.
            </summary>
            <param name="value">Value</param>
            <param name="targetType">Target type</param>
            <param name="parameter">The converter parameter</param>
            <param name="culture">Culture</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.AxisLabelConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convets a value.
            </summary>
            <param name="value">Value</param>
            <param name="targetType">Target type</param>
            <param name="parameter">The converter parameter</param>
            <param name="culture">Culture</param>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.AxisLabelConverter.PreviousLabelValue">
            <summary>
            Used to store the previous value in the value axis
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.FunnelDataLabelPositionConverter">
            <summary>
            Converter class used to shows the data labels inside the segement
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.FunnelDataLabelPositionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert the value from object and returns formatted value
            </summary>
            <param name="value">input value</param>
            <param name="targetType">target type of input</param>
            <param name="parameter">The converter parameter</param>
            <param name="culture">Culture</param>
            <returns>the formatted output</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.FunnelDataLabelPositionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convets a value.
            </summary>
            <param name="value">Value</param>
            <param name="targetType">Target type</param>
            <param name="parameter">The converter parameter</param>
            <param name="culture">Culture</param>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.MarkerConverter">
            <summary>
            The Converter class used to format the markers in chart
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.MarkerConverter.m_strokeIndex">
            <summary>
            Stroke Index used to denote the points have been formatted for properties
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.MarkerConverter.m_fillIndex">
            <summary>
            Fill Index used to denote the points have been formatted for properties
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.MarkerConverter.m_thicknessIndex">
            <summary>
            Thickness Index used to denote the points have been formatted for properties
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.MarkerConverter.m_pathIndex">
            <summary>
            Path Index used to denote the points have been formatted for properties
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.MarkerConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convert the value from object and returns formatted value
            </summary>
            <param name="value">input value</param>
            <param name="targetType">target type of input</param>
            <param name="parameter">The converter parameter</param>
            <param name="culture">Culture</param>
            <returns>the formatted output</returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.MarkerConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convets a value.
            </summary>
            <param name="value">Value</param>
            <param name="targetType">Target type</param>
            <param name="parameter">The converter parameter</param>
            <param name="culture">Culture</param>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.MarkerConverter.MarkerSettings">
            <summary>
            Used to store the marker formats of each marker in the series
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.MarkerConverter.CommonMarkerSetting">
            <summary>
            Used to store the Common marker format of the series
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.TextBlockExt">
            <summary>
            Text Block used to Rich Text Binding Support
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.DataLabelSetting">
            <summary>
            Reperesents the individual data label setting
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.MarkerSetting">
            <summary>
            Class used to store the Marker Formattings
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.MarkerSetting.m_borderBrush">
            <summary>
            Brush stores the border color
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.MarkerSetting.m_fillBrush">
            <summary>
            Brush stores the fill color
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.MarkerSetting.m_markerSize">
            <summary>
            Size of the marker symbol
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.MarkerSetting.m_borderThickness">
            <summary>
            Thickness value Marker's Border
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.MarkerSetting.m_markerTypeInInt">
            <summary>
            Marker Style enum Value in integer
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.MarkerSetting.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.MarkerSetting.BorderBrush">
            <summary>
            Gets/Sets Brush for the border
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.MarkerSetting.FillBrush">
            <summary>
            Gets/Sets Brush for the fill
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.MarkerSetting.MarkerSize">
            <summary>
            Gets/Sets Size of the marker symbol
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.MarkerSetting.BorderThickness">
            <summary>
            Gets/Sets the thickness value Marker's Border
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.MarkerSetting.MarkerTypeInInt">
            <summary>
            Gets/Sets Marker Style enum Value in integer
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.CustomCategoryAxis">
            <summary>
            Derived class of sfchart Category Axis
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.CustomCategoryAxis.m_labelCanvas">
            <summary>
            Axis Label Panel canvas.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.CustomCategoryAxis.m_isVerticalAxis">
            <summary>
            Boolean value indicate whether the axis is vertical
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.CustomCategoryAxis.OnApplyTemplate">
            <summary>
            Overridden method of OnApplyTemplate.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.CustomCategoryAxis.LabelsCanvas">
            <summary>
            Axis Label Panel canvas ReadOnly.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.CustomCategoryAxis.IsVerticalAxis">
            <summary>
            Boolean value indicate whether the axis is vertical
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.CustomDateTimeAxis">
            <summary>
            Derived class of sfchart DateTime Axis
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Syncfusion.ExcelChartToImageConverter.CustomDateTimeAxis.m_labelCanvas" -->
        <member name="F:Syncfusion.ExcelChartToImageConverter.CustomDateTimeAxis.m_isVerticalAxis">
            <summary>
            Boolean value indicate whether the axis is vertical
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.CustomDateTimeAxis.OnApplyTemplate">
            <summary>
            Overridden method of OnApplyTemplate.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.CustomDateTimeAxis.LabelsCanvas">
            <summary>
            Axis Label Panel canvas ReadOnly.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.CustomDateTimeAxis.IsVerticalAxis">
            <summary>
            Boolean value indicate whether the axis is vertical
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.SfChartExt">
            <summary>
            Extension class for SfChart
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.SfChartExt.SetMargin(System.Windows.Thickness,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Sets the margin for the plot area element
            </summary>
            <param name="marginThickness">margin thickness to be assigned</param>
            <param name="isInnerLayout">boolean value indicates whether plot area is inner layout target </param>
            <param name="isLegendOutside">boolean value indicates whether the legend is outside</param>
            <param name="isLegendManual">boolean value indicates whether the legend is manual</param>
            <param name="legPosition">int value denotes the legend position</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.SfChartExt.UpdateTLBR">
            <summary>
            Update the Top,Left,Bottom and Right axis width and height values
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.ExcelChartToImageConverter.SfChartExt.OnRootPanelSizeChanged(System.Windows.Size)" -->
        <member name="M:Syncfusion.ExcelChartToImageConverter.SfChartExt.OnApplyTemplate">
            <summary>
            Overridden method of OnApplyTemplate.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.SfChartExt.AddTextBlockInCustomCanvas(System.Windows.Controls.Border,System.Drawing.RectangleF,System.Boolean,System.Boolean)">
            <summary>
            Add the text block in the canvas object
            </summary>
            <param name="textBlock">input WPF UI text block object</param>
            <param name="rectPosition">manual rectangle position</param>
            <param name="canOverlap">boolean value indicates whether the title can overlap</param>
            <param name="isNotManualLayout">boolean value indicates whether the plot area is manual layout</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.SfChartExt.TrySetManualAxisTextElements(System.Collections.Generic.Dictionary{Syncfusion.UI.Xaml.Charts.ChartAxis,System.Tuple{System.Windows.Controls.Border,System.Drawing.PointF}},System.Boolean)">
            <summary>
            Set the axis title and display unit UI text block element
            </summary>
            <param name="axisBorders">axis border collection</param>
            <param name="isDisplayUnit">boolean value indicates the whether text block is display unit</param>   
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.SfChartExt.customCanvas">
            <summary>
            Gets/Sets the Custom canvas property
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.SfChartExt.ChartAreaSize">
            <summary>
            Gets/ Sets the Chart Area Size
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.SfChartExt.TLBRValue">
            <summary>
            Top, Left, Bottom and Right Width and Height values stored in this array
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.SfChart3DExt">
            <summary>
            Extension class for SfChart 3D
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.SfChart3DExt.OnRootPanelSizeChanged(System.Windows.Size)">
            <summary>
            Event to assign the chart area size
            </summary>
            <param name="size">Size to be assigned</param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.SfChart3DExt.OnApplyTemplate">
            <summary>
            Overridden method of OnApplyTemplate.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.SfChart3DExt.AddTextBlockInCustomCanvas(System.Windows.Controls.Border,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Add the text block in the chart area
            </summary>
            <param name="textBlock">input UI element text block</param>
            <param name="rectPosition">the manual rectangle position</param>
            <param name="canOverlap"></param>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.SfChart3DExt.TrySetManualAxisTextElements(System.Collections.Generic.Dictionary{Syncfusion.UI.Xaml.Charts.ChartAxis,System.Tuple{System.Windows.Controls.Border,System.Drawing.PointF}},System.Boolean)">
            <summary>
            Set the axis title and display unit UI text block element
            </summary>
            <param name="axisBorders">axis border collection</param>
            <param name="isDisplayUnit">boolean value indicates the whether text block is display unit</param>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.SfChart3DExt.customCanvas">
            <summary>
            Get/Set the custom canvas object
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelChartToImageConverter.SfChart3DExt.ChartAreaSize">
            <summary>
            Get/Set the chart area size
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.CustomNumericalAxis">
            <summary>
            Derived class of sfchart Numerical Axis
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.CustomNumericalAxis3D">
            <summary>
            Derived class of sfchart Numerical Axis 3D
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelChartToImageConverter.CustomWrapPanel">
            <summary>
            Custom Wrap panel designed like MS Excel Legend wrapping
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.CustomWrapPanel.IsTextWrappedProperty">
            <summary>
            Boolean dependency property denotes whether the text is wrapped on assigning
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelChartToImageConverter.CustomWrapPanel.gapWidthHeight">
            <summary>
            Tuple value denotes the gap between the element in row and column wise
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.CustomWrapPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measure override method
            </summary>
            <param name="constraint"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelChartToImageConverter.CustomWrapPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arrange override method
            </summary>
            <param name="constraint"></param>
            <returns></returns>
        </member>
    </members>
</doc>
